items:
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  id: _file_systems_impl
  parent: com.microsoft.azure.management.datalake.store.implementation
  children:
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1abaa87e640895978fd52fd8fe147b67c4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a735448e2554e888f3957818f2fd2e7f1
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0be519ea99454f4b35b9f559d0aaaa6d
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a79d2c382fa2d74596a01d367aedbc0eb
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7b15fd1ce50609bd0a6a43c668260d8f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a8f8dc9d69c2f5d46eb6e7264f7f5961a
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aa99b06e09c2d68e97accdf3022e76340
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1af9132cce957acb3a160cd85c3bee8bfd
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7144496f2c4bc8519698e7623723f4db
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a6cc49370b650d7b7f639c8cadf50c705
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a87816d62a06c34c2d5b771b2cda1547f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a04f0744306017f10000713e42c63f80b
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ae772c852bac42386fb3bb2a7c131b337
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1add63ff1f0946cf7b3c9ffb838a7ed44d
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a39de3bc637fa922946a721ee770e5581
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a6b87060c688402adece11c9eeaab91f1
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad6d5e2f1c2f9f6eedf689948b35a90e8
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a1d596ba2f5acda5de171df23b285c1d7
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a905e87ce558ad387b5792fe7569eda9f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ab2d3c63cedaddd78cbbb248836f6deb4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad6264c915fbc706c0c148675c6cc5045
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a9eacb5b67c146492c0445c7eb2d5fd59
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a380035e4410f42774c11de2b5fd15c5f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a8fb87e2ae63e02b440c96049870e587d
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a76d01314aeec86e2d398ffc479855251
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a18f6f20f00bd0f4fa29dc283714de6d4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0b817a6671ccbce22cdf725b0f10638c
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad34c3d3b56c7b9cc606e84c2506670d9
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a40b1c610fe62177433d448a25bf3d837
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5cd88466890a175162159c3c9ee8a94d
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2d5c638dbf49afb1d91f6dad634952da
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aef8aa9864cbff1613ad3f80e345b3ca4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad3fe653a946143bb30f1527fde92c495
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a95be1201c6dac73b312e5997ca174392
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1affcfd15134593ea1b7c07caf68288cd1
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aafbb888195eabfbb5f754ecd10a7a6fa
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a45d2fa9968217cd01da5d4829f09da42
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5199457fcbaa9f65ee3306d9f66f462f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2a9a1283daa3b024de6d3c4baaef6b12
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a77a1cceadb6644e16fcd5c1a13a4d2bd
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1add8ea70de25c15df6df06ac07be9045f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a90a072ee6678461dbde601fde78b53c6
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0be7a40ea7dd6c0154b19c8df739e2bc
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1af1f43f386e5dbe814d1e6273705d7806
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2b386ce15dcdd49a3c66b7578758d989
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1afc03c2559bc8b7fbb69ba14ed89ede06
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a42614f9092e44cbf2c5262ca6b50bbf1
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0a20ad2442562e726e7e0e92c8953bc0
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1add2dc1ac10222eebda1ab9392e9d3dcb
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7cf908d9ccf33b7dad5f429d076637cd
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aa99880e9c8122223c3d9327dabe68ac0
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ac85f5b6602116de2432ab17f6ecabfd4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ae69bfb26fbe76e75137365c1e2651b23
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a483ec0ca1e4a7007749168ed20b8c56e
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad33bebb71f63df37d5b252f8282105f6
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aed93a5cc9f4385595628f4bfc8a3cc64
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aff1d5fea048e720500fd0f3298918135
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a16f738625db7a5c641a5edda795c0a6a
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2c6aeeec7e01efa86d55a1bbcccf11a5
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: FileSystemsImpl
  fullName: com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl
  type: Class
  source:
    remote: &o0
      path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 51
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.management.datalake.store._file_systems" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class FileSystemsImpl implements FileSystems
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.management.datalake.store._file_systems
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1abaa87e640895978fd52fd8fe147b67c4
  id: _file_systems_impl_1abaa87e640895978fd52fd8fe147b67c4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: append(String accountName, String directFilePath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.append(String accountName, String directFilePath, byte[] streamContents)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1204
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > append(String accountName, String directFilePath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a505b2305101f3b0f93915f0d420fcf11
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a735448e2554e888f3957818f2fd2e7f1
  id: _file_systems_impl_1a735448e2554e888f3957818f2fd2e7f1
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: append(String accountName, String directFilePath, byte[] streamContents, Long offset)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.append(String accountName, String directFilePath, byte[] streamContents, Long offset)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1297
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > append(String accountName, String directFilePath, byte[] streamContents, Long offset)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: offset
      type: 34f09483
      description: <p>The optional offset in the stream to begin the append operation. Default is to append at the end of the stream. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afa7a41c79ff049ed111c9094279b8de3
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0be519ea99454f4b35b9f559d0aaaa6d
  id: _file_systems_impl_1a0be519ea99454f4b35b9f559d0aaaa6d
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1240
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceCall appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a63e5291ddfed34e8bfcd13820a56390e
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a79d2c382fa2d74596a01d367aedbc0eb
  id: _file_systems_impl_1a79d2c382fa2d74596a01d367aedbc0eb
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1333
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceCall appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: offset
      type: 34f09483
      description: <p>The optional offset in the stream to begin the append operation. Default is to append at the end of the stream. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ac063bad02c63caa7b825eb8ec7789f91
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7b15fd1ce50609bd0a6a43c668260d8f
  id: _file_systems_impl_1a7b15fd1ce50609bd0a6a43c668260d8f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: checkAccess(String accountName, String path)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.checkAccess(String accountName, String path)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 349
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > checkAccess(String accountName, String path)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1adac634bcad95a952d4a9776a6b274835
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a8f8dc9d69c2f5d46eb6e7264f7f5961a
  id: _file_systems_impl_1a8f8dc9d69c2f5d46eb6e7264f7f5961a
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: checkAccess(String accountName, String path, String fsaction)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.checkAccess(String accountName, String path, String fsaction)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 427
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > checkAccess(String accountName, String path, String fsaction)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: fsaction
      type: "26831127"
      description: <p>File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a1a031319140b1d73a9ce861147afbcf7
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aa99b06e09c2d68e97accdf3022e76340
  id: _file_systems_impl_1aa99b06e09c2d68e97accdf3022e76340
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 378
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceCall checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afe8f63a26a25d7e601b57bd6b56698ae
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1af9132cce957acb3a160cd85c3bee8bfd
  id: _file_systems_impl_1af9132cce957acb3a160cd85c3bee8bfd
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 456
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceCall checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: fsaction
      type: "26831127"
      description: <p>File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1af378e408fa2f776083fe93d6af0e814c
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7144496f2c4bc8519698e7623723f4db
  id: _file_systems_impl_1a7144496f2c4bc8519698e7623723f4db
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concat(String accountName, String destinationPath, List< String > sources)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concat(String accountName, String destinationPath, List< String > sources)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 593
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, removing all source files upon success.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concat(String accountName, String destinationPath, List< String > sources)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: destinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: sources
      type: f35af49b
      description: <p>A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1abdd2d7f686059fe38bd8a0e52473278b
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a6cc49370b650d7b7f639c8cadf50c705
  id: _file_systems_impl_1a6cc49370b650d7b7f639c8cadf50c705
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 627
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, removing all source files upon success.</p>

    <p></p>
  syntax:
    content: public ServiceCall concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: destinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: sources
      type: f35af49b
      description: <p>A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a1b57d86dd33a5eef0f42d67a27041ca2
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a87816d62a06c34c2d5b771b2cda1547f
  id: _file_systems_impl_1a87816d62a06c34c2d5b771b2cda1547f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concurrentAppend(String accountName, String filePath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concurrentAppend(String accountName, String filePath, byte[] streamContents)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 163
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concurrentAppend(String accountName, String filePath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ac60768717a0b39706c206a2b4c59f0e2
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a04f0744306017f10000713e42c63f80b
  id: _file_systems_impl_1a04f0744306017f10000713e42c63f80b
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 254
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: appendMode
      type: com.microsoft.azure.management.datalake.store.models._append_mode_type
      description: '<p>Indicates the concurrent append call should create the file if it doesn''t exist or just open the existing file for append. Possible values include: ''autocreate'' </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a499d0de67c392b5221735e4755987904
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ae772c852bac42386fb3bb2a7c131b337
  id: _file_systems_impl_1ae772c852bac42386fb3bb2a7c131b337
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 289
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceCall concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: appendMode
      type: com.microsoft.azure.management.datalake.store.models._append_mode_type
      description: '<p>Indicates the concurrent append call should create the file if it doesn''t exist or just open the existing file for append. Possible values include: ''autocreate'' </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a1398d19212c9f556e800ae624ef9ac21
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1add63ff1f0946cf7b3c9ffb838a7ed44d
  id: _file_systems_impl_1add63ff1f0946cf7b3c9ffb838a7ed44d
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 198
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceCall concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a228a4bef3ad55b897dbd2ae050a27383
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a39de3bc637fa922946a721ee770e5581
  id: _file_systems_impl_1a39de3bc637fa922946a721ee770e5581
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: create(String accountName, String directFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.create(String accountName, String directFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1394
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > create(String accountName, String directFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a00ae858959be633c6fad025ca8c54684
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a6b87060c688402adece11c9eeaab91f1
  id: _file_systems_impl_1a6b87060c688402adece11c9eeaab91f1
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1487
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified. </p>
    - id: overwrite
      type: 866c2227
      description: <p>The indication of if the file should be overwritten. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab389c244937381d800cc178cda88f883
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad6d5e2f1c2f9f6eedf689948b35a90e8
  id: _file_systems_impl_1ad6d5e2f1c2f9f6eedf689948b35a90e8
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1523
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceCall createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified. </p>
    - id: overwrite
      type: 866c2227
      description: <p>The indication of if the file should be overwritten. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ad6585d13f4cc07006135520cca2b38a4
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a1d596ba2f5acda5de171df23b285c1d7
  id: _file_systems_impl_1a1d596ba2f5acda5de171df23b285c1d7
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1430
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceCall createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1af13bb3bf8efc5b72bd3fc20366930d4d
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a905e87ce558ad387b5792fe7569eda9f
  id: _file_systems_impl_1a905e87ce558ad387b5792fe7569eda9f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: delete(String accountName, String filePath)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.delete(String accountName, String filePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2107
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > delete(String accountName, String filePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a080115afb3d8fa9b949893f36af9ab43
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ab2d3c63cedaddd78cbbb248836f6deb4
  id: _file_systems_impl_1ab2d3c63cedaddd78cbbb248836f6deb4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: delete(String accountName, String filePath, Boolean recursive)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.delete(String accountName, String filePath, Boolean recursive)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2185
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > delete(String accountName, String filePath, Boolean recursive)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>The optional switch indicating if the delete should be recursive </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afa95b8d5e195652e8e053fbcebe1065b
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad6264c915fbc706c0c148675c6cc5045
  id: _file_systems_impl_1ad6264c915fbc706c0c148675c6cc5045
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2214
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>The optional switch indicating if the delete should be recursive </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a05bc0c38d533e11f82385c89f0272be2
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a9eacb5b67c146492c0445c7eb2d5fd59
  id: _file_systems_impl_1a9eacb5b67c146492c0445c7eb2d5fd59
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2136
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab91f262d7e100d42d4cb0182845305d1
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a380035e4410f42774c11de2b5fd15c5f
  id: _file_systems_impl_1a380035e4410f42774c11de2b5fd15c5f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: FileSystemsImpl(Retrofit retrofit, DataLakeStoreFileSystemManagementClientImpl client)
  fullName: com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.FileSystemsImpl(Retrofit retrofit, DataLakeStoreFileSystemManagementClientImpl client)
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 63
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.management.datalake.store.implementation._file_systems_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public FileSystemsImpl(Retrofit retrofit, DataLakeStoreFileSystemManagementClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a8fb87e2ae63e02b440c96049870e587d
  id: _file_systems_impl_1a8fb87e2ae63e02b440c96049870e587d
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getAclStatus(String accountName, String aclFilePath)
  fullName: ServiceResponse<AclStatusResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getAclStatus(String accountName, String aclFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2025
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Gets Access Control List (ACL) entries for the specified file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< AclStatusResult > getAclStatus(String accountName, String aclFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: aclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the AclStatusResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a1fcae5b2a1d57fd262cd04fd8e9d3d97
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a76d01314aeec86e2d398ffc479855251
  id: _file_systems_impl_1a76d01314aeec86e2d398ffc479855251
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2053
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Gets Access Control List (ACL) entries for the specified file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: aclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a107c182b0ef5340058073ddc828347c0
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a18f6f20f00bd0f4fa29dc283714de6d4
  id: _file_systems_impl_1a18f6f20f00bd0f4fa29dc283714de6d4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getContentSummary(String accountName, String getContentSummaryFilePath)
  fullName: ServiceResponse<ContentSummaryResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getContentSummary(String accountName, String getContentSummaryFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1039
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Gets the file content summary object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< ContentSummaryResult > getContentSummary(String accountName, String getContentSummaryFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getContentSummaryFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file for which to retrieve the summary. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the ContentSummaryResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a284146d513067c79d902fb179f9d55c6
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0b817a6671ccbce22cdf725b0f10638c
  id: _file_systems_impl_1a0b817a6671ccbce22cdf725b0f10638c
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1067
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Gets the file content summary object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceCall getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getContentSummaryFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file for which to retrieve the summary. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a7cfd691068b46fd381b1b168691fc593
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad34c3d3b56c7b9cc606e84c2506670d9
  id: _file_systems_impl_1ad34c3d3b56c7b9cc606e84c2506670d9
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getFileStatus(String accountName, String getFilePath)
  fullName: ServiceResponse<FileStatusResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getFileStatus(String accountName, String getFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1121
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the file status object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusResult > getFileStatus(String accountName, String getFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the FileStatusResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a58361d379e3e45c17b459b20998aedfe
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a40b1c610fe62177433d448a25bf3d837
  id: _file_systems_impl_1a40b1c610fe62177433d448a25bf3d837
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1149
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the file status object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a045f95270337c20723fdcd415c20dc66
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5cd88466890a175162159c3c9ee8a94d
  id: _file_systems_impl_1a5cd88466890a175162159c3c9ee8a94d
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: listFileStatus(String accountName, String listFilePath)
  fullName: ServiceResponse<FileStatusesResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.listFileStatus(String accountName, String listFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 870
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusesResult > listFileStatus(String accountName, String listFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the FileStatusesResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a6ce2fd51f496ecf0cc8c6897dbadc64d
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2d5c638dbf49afb1d91f6dad634952da
  id: _file_systems_impl_1a2d5c638dbf49afb1d91f6dad634952da
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
  fullName: ServiceResponse<FileStatusesResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 954
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusesResult > listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: listSize
      type: 08effaa0
      description: <p>Gets or sets the number of items to return. Optional. </p>
    - id: listAfter
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional. </p>
    - id: listBefore
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the FileStatusesResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a65b568af790ad9e265a03bff5c08a0be
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aef8aa9864cbff1613ad3f80e345b3ca4
  id: _file_systems_impl_1aef8aa9864cbff1613ad3f80e345b3ca4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 901
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a4288752556973eb7d79afe55d0164b08
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad3fe653a946143bb30f1527fde92c495
  id: _file_systems_impl_1ad3fe653a946143bb30f1527fde92c495
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 985
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: listSize
      type: 08effaa0
      description: <p>Gets or sets the number of items to return. Optional. </p>
    - id: listAfter
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional. </p>
    - id: listBefore
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1af50b485f5df71c49093fa3b3fa86409e
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a95be1201c6dac73b312e5997ca174392
  id: _file_systems_impl_1a95be1201c6dac73b312e5997ca174392
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: mkdirs(String accountName, String path)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.mkdirs(String accountName, String path)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 510
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > mkdirs(String accountName, String path)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to create. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afadeb0164f6f8bc2e4aa7e6c4dfac63b
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1affcfd15134593ea1b7c07caf68288cd1
  id: _file_systems_impl_1affcfd15134593ea1b7c07caf68288cd1
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 538
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to create. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a1f79eaad706d282ef52bfbf9525db091
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aafbb888195eabfbb5f754ecd10a7a6fa
  id: _file_systems_impl_1aafbb888195eabfbb5f754ecd10a7a6fa
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1844
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Modifies existing Access Control List (ACL) entries on a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: modifyAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab6b49512029c3d07367d3e3006d10ff8
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a45d2fa9968217cd01da5d4829f09da42
  id: _file_systems_impl_1a45d2fa9968217cd01da5d4829f09da42
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1876
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Modifies existing Access Control List (ACL) entries on a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: modifyAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a81b9a0e274757ead80fcd5d9ddf0756d
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5199457fcbaa9f65ee3306d9f66f462f
  id: _file_systems_impl_1a5199457fcbaa9f65ee3306d9f66f462f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 688
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a3bdbdff5702928c7f57b85690b4a92ea
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2a9a1283daa3b024de6d3c4baaef6b12
  id: _file_systems_impl_1a2a9a1283daa3b024de6d3c4baaef6b12
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 777
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: deleteSourceDirectory
      type: 866c2227
      description: '<p>Indicates that as an optimization instead of deleting each individual source stream, delete the source stream folder if all streams are in the same folder instead. This results in a substantial performance improvement when the only streams in the folder are part of the concatenation operation. WARNING: This includes the deletion of any other files that are not source files. Only set this to true when source files are the only files in the source directory. </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab1e77d3db11fff9e2f16a7d0ca62a261
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a77a1cceadb6644e16fcd5c1a13a4d2bd
  id: _file_systems_impl_1a77a1cceadb6644e16fcd5c1a13a4d2bd
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 811
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceCall msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: deleteSourceDirectory
      type: 866c2227
      description: '<p>Indicates that as an optimization instead of deleting each individual source stream, delete the source stream folder if all streams are in the same folder instead. This results in a substantial performance improvement when the only streams in the folder are part of the concatenation operation. WARNING: This includes the deletion of any other files that are not source files. Only set this to true when source files are the only files in the source directory. </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a592b47b98116d5b978f5b4308332e66e
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1add8ea70de25c15df6df06ac07be9045f
  id: _file_systems_impl_1add8ea70de25c15df6df06ac07be9045f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 722
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceCall msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab194a4a0600fd72aeb49f47ec0a158ad
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a90a072ee6678461dbde601fde78b53c6
  id: _file_systems_impl_1a90a072ee6678461dbde601fde78b53c6
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: open(String accountName, String directFilePath)
  fullName: ServiceResponse<InputStream> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.open(String accountName, String directFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1583
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< InputStream > open(String accountName, String directFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    return:
      type: com.microsoft.rest._service_response7f11b53f
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a9cc248173da8ce753a1e11cfddba9491
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0be7a40ea7dd6c0154b19c8df739e2bc
  id: _file_systems_impl_1a0be7a40ea7dd6c0154b19c8df739e2bc
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: open(String accountName, String directFilePath, Long length, Long offset)
  fullName: ServiceResponse<InputStream> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.open(String accountName, String directFilePath, Long length, Long offset)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1666
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< InputStream > open(String accountName, String directFilePath, Long length, Long offset)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: length
      type: 34f09483
      description: <p>the Long value </p>
    - id: offset
      type: 34f09483
      description: <p>the Long value </p>
    return:
      type: com.microsoft.rest._service_response7f11b53f
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ad4a3f3461d62e71d37c192119abb0731
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1af1f43f386e5dbe814d1e6273705d7806
  id: _file_systems_impl_1af1f43f386e5dbe814d1e6273705d7806
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1614
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceCall openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a00fe1301527c37871e969104701b898d
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2b386ce15dcdd49a3c66b7578758d989
  id: _file_systems_impl_1a2b386ce15dcdd49a3c66b7578758d989
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1697
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceCall openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: length
      type: 34f09483
      description: <p>the Long value </p>
    - id: offset
      type: 34f09483
      description: <p>the Long value </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ad28dd78475041ff6c12ef54cc9fc16bb
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1afc03c2559bc8b7fbb69ba14ed89ede06
  id: _file_systems_impl_1afc03c2559bc8b7fbb69ba14ed89ede06
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1935
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Removes existing Access Control List (ACL) entries for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: removeAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL removal operations in the format '[default:]user|group|other' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ae5401218faa7a67dc558b60b8fe01fbd
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a42614f9092e44cbf2c5262ca6b50bbf1
  id: _file_systems_impl_1a42614f9092e44cbf2c5262ca6b50bbf1
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1967
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Removes existing Access Control List (ACL) entries for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: removeAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL removal operations in the format '[default:]user|group|other' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afbe1eb35d25d4047587690625a55324f
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0a20ad2442562e726e7e0e92c8953bc0
  id: _file_systems_impl_1a0a20ad2442562e726e7e0e92c8953bc0
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: rename(String accountName, String renameFilePath, String destination)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.rename(String accountName, String renameFilePath, String destination)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2269
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Rename a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > rename(String accountName, String renameFilePath, String destination)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: renameFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to move/rename. </p>
    - id: destination
      type: "26831127"
      description: <p>The path to move/rename the file or folder to </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a17d8fc0492d723efd2e4f770490f7fe2
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1add2dc1ac10222eebda1ab9392e9d3dcb
  id: _file_systems_impl_1add2dc1ac10222eebda1ab9392e9d3dcb
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2301
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Rename a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: renameFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to move/rename. </p>
    - id: destination
      type: "26831127"
      description: <p>The path to move/rename the file or folder to </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1af022f901ff71d254f8c4a32a0f013825
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7cf908d9ccf33b7dad5f429d076637cd
  id: _file_systems_impl_1a7cf908d9ccf33b7dad5f429d076637cd
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setAcl(String accountName, String setAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setAcl(String accountName, String setAclFilePath, String aclspec)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1753
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the Access Control List (ACL) for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setAcl(String accountName, String setAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1abd623f8c8101afe72da2ed57ef78f712
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aa99880e9c8122223c3d9327dabe68ac0
  id: _file_systems_impl_1aa99880e9c8122223c3d9327dabe68ac0
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1785
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the Access Control List (ACL) for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a540890b9b8a96ea5a95a56d215d56f73
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ac85f5b6602116de2432ab17f6ecabfd4
  id: _file_systems_impl_1ac85f5b6602116de2432ab17f6ecabfd4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setOwner(String accountName, String setOwnerFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setOwner(String accountName, String setOwnerFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2359
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setOwner(String accountName, String setOwnerFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a71b5d0936a0b37266dbffa7ab5bd8f0d
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ae69bfb26fbe76e75137365c1e2651b23
  id: _file_systems_impl_1ae69bfb26fbe76e75137365c1e2651b23
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setOwner(String accountName, String setOwnerFilePath, String owner, String group)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setOwner(String accountName, String setOwnerFilePath, String owner, String group)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2440
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setOwner(String accountName, String setOwnerFilePath, String owner, String group)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: owner
      type: "26831127"
      description: <p>The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: group
      type: "26831127"
      description: <p>The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ac93ea0f8d245c2ea67b9ea942d5c0123
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a483ec0ca1e4a7007749168ed20b8c56e
  id: _file_systems_impl_1a483ec0ca1e4a7007749168ed20b8c56e
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2389
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1aed102f918559b021d5772b6760467e1a
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad33bebb71f63df37d5b252f8282105f6
  id: _file_systems_impl_1ad33bebb71f63df37d5b252f8282105f6
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2470
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: owner
      type: "26831127"
      description: <p>The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: group
      type: "26831127"
      description: <p>The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a5c5302f655498c7cc4ec98f37363b579
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aed93a5cc9f4385595628f4bfc8a3cc64
  id: _file_systems_impl_1aed93a5cc9f4385595628f4bfc8a3cc64
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setPermission(String accountName, String setPermissionFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setPermission(String accountName, String setPermissionFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2524
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setPermission(String accountName, String setPermissionFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ac7ebecb4f77d62f401ce47cd42be195e
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aff1d5fea048e720500fd0f3298918135
  id: _file_systems_impl_1aff1d5fea048e720500fd0f3298918135
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setPermission(String accountName, String setPermissionFilePath, String permission)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setPermission(String accountName, String setPermissionFilePath, String permission)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2602
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setPermission(String accountName, String setPermissionFilePath, String permission)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: permission
      type: "26831127"
      description: <p>A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a471a34b649b697482f8e3add7fd661b2
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a16f738625db7a5c641a5edda795c0a6a
  id: _file_systems_impl_1a16f738625db7a5c641a5edda795c0a6a
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2553
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1abe81ea065c824208b7e6b9e3c8acd24e
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2c6aeeec7e01efa86d55a1bbcccf11a5
  id: _file_systems_impl_1a2c6aeeec7e01efa86d55a1bbcccf11a5
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2631
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: permission
      type: "26831127"
      description: <p>A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1acb37d9e74e63a06333602d60086fc484
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: "24876076"
  spec.java:
  - name: AdlsErrorException
    fullName: AdlsErrorException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: bc819c2f
  spec.java:
  - name: byte[]
    fullName: byte[]
- uid: com.microsoft.rest._service_responsee35e5465
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse<T>
    fullName: com.microsoft.rest.ServiceResponse<T>
    href: com.microsoft.rest._service_response.yml
  - name: < Void >
    fullName: < Void >
- uid: 93de0ef9com.microsoft.rest._service_callbacke35e5465
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: < Void >
    fullName: < Void >
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse<T>
    fullName: com.microsoft.rest.ServiceResponse<T>
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_operation_result
    name: FileOperationResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileOperationResult
    href: com.microsoft.azure.management.datalake.store.models._file_operation_result.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_operation_result
    name: FileOperationResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileOperationResult
    href: com.microsoft.azure.management.datalake.store.models._file_operation_result.yml
  - name: ' >'
    fullName: ' >'
- uid: f35af49b
  spec.java:
  - name: List< String >
    fullName: List< String >
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse<T>
    fullName: com.microsoft.rest.ServiceResponse<T>
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_statuses_result
    name: FileStatusesResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusesResult
    href: com.microsoft.azure.management.datalake.store.models._file_statuses_result.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_statuses_result
    name: FileStatusesResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusesResult
    href: com.microsoft.azure.management.datalake.store.models._file_statuses_result.yml
  - name: ' >'
    fullName: ' >'
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse<T>
    fullName: com.microsoft.rest.ServiceResponse<T>
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._content_summary_result
    name: ContentSummaryResult
    fullName: com.microsoft.azure.management.datalake.store.models.ContentSummaryResult
    href: com.microsoft.azure.management.datalake.store.models._content_summary_result.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._content_summary_result
    name: ContentSummaryResult
    fullName: com.microsoft.azure.management.datalake.store.models.ContentSummaryResult
    href: com.microsoft.azure.management.datalake.store.models._content_summary_result.yml
  - name: ' >'
    fullName: ' >'
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse<T>
    fullName: com.microsoft.rest.ServiceResponse<T>
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_status_result
    name: FileStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusResult
    href: com.microsoft.azure.management.datalake.store.models._file_status_result.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_status_result
    name: FileStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusResult
    href: com.microsoft.azure.management.datalake.store.models._file_status_result.yml
  - name: ' >'
    fullName: ' >'
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: com.microsoft.rest._service_response7f11b53f
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse<T>
    fullName: com.microsoft.rest.ServiceResponse<T>
    href: com.microsoft.rest._service_response.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: 93de0ef9com.microsoft.rest._service_callback7f11b53f
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse<T>
    fullName: com.microsoft.rest.ServiceResponse<T>
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._acl_status_result
    name: AclStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.AclStatusResult
    href: com.microsoft.azure.management.datalake.store.models._acl_status_result.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._acl_status_result
    name: AclStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.AclStatusResult
    href: com.microsoft.azure.management.datalake.store.models._acl_status_result.yml
  - name: ' >'
    fullName: ' >'
- uid: com.microsoft.azure.management.datalake.store._file_systems
  parent: com.microsoft.azure.management.datalake.store
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: FileSystems
  fullName: com.microsoft.azure.management.datalake.store.FileSystems
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.management.datalake.store._file_systems" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface FileSystems
- uid: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c
  parent: com.microsoft.azure.management.datalake.store.implementation
  href: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c.yml
  name: DataLakeStoreFileSystemManagementClientImpl
  fullName: com.microsoft.azure.management.datalake.store.implementation.DataLakeStoreFileSystemManagementClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class DataLakeStoreFileSystemManagementClientImpl extends AzureServiceClient implements DataLakeStoreFileSystemManagementClient
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  parent: com.microsoft.azure.management.datalake.store.implementation
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  name: FileSystemsImpl
  fullName: com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.management.datalake.store._file_systems" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.rest._service_response
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_response.yml
  name: ServiceResponse<T>
  fullName: com.microsoft.rest.ServiceResponse<T>
  type: Class
  summary: >-
    <p>An instance of this class holds a response object and a raw REST response.</p>

    <p></p>
  syntax:
    content: public class ServiceResponse<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the response </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ac60768717a0b39706c206a2b4c59f0e2
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concurrentAppend(String accountName, String filePath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.concurrentAppend(String accountName, String filePath, byte[] streamContents)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concurrentAppend(String accountName, String filePath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store.models._adls_error_exception
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._adls_error_exception.yml
  name: AdlsErrorException
  fullName: com.microsoft.azure.management.datalake.store.models.AdlsErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.management.datalake.store.models._adls_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class AdlsErrorException extends RestException
- uid: com.microsoft.azure._azure
  parent: com.microsoft.azure
  href: com.microsoft.azure._azure.yml
  name: Azure
  fullName: com.microsoft.azure.Azure
  type: Class
  summary: <p>The entry point for accessing resource management APIs in <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class Azure
- uid: com.microsoft.rest._service_call
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_call.yml
  name: ServiceCall
  fullName: com.microsoft.rest.ServiceCall
  type: Class
  summary: <p>An instance of this class provides access to the underlying REST call invocation. This class wraps around the Retrofit Call object and allows updates to it in the progress of a long running operation or a paging operation. </p>
  syntax:
    content: public class ServiceCall
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a228a4bef3ad55b897dbd2ae050a27383
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceCall concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.rest._service_callback
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_callback.yml
  name: ServiceCallback<T>
  fullName: com.microsoft.rest.ServiceCallback<T>
  type: Class
  summary: >-
    <p>The callback used for client side asynchronous operations.</p>

    <p></p>
  syntax:
    content: public class ServiceCallback<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the response </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a499d0de67c392b5221735e4755987904
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: appendMode
      type: com.microsoft.azure.management.datalake.store.models._append_mode_type
      description: '<p>Indicates the concurrent append call should create the file if it doesn''t exist or just open the existing file for append. Possible values include: ''autocreate'' </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store.models._append_mode_type
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._append_mode_type.yml
  name: AppendModeType
  fullName: com.microsoft.azure.management.datalake.store.models.AppendModeType
  type: Enum
  summary: <p>Defines values for <xref href="com.microsoft.azure.management.datalake.store.models._append_mode_type" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum AppendModeType
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a1398d19212c9f556e800ae624ef9ac21
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceCall concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: appendMode
      type: com.microsoft.azure.management.datalake.store.models._append_mode_type
      description: '<p>Indicates the concurrent append call should create the file if it doesn''t exist or just open the existing file for append. Possible values include: ''autocreate'' </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1adac634bcad95a952d4a9776a6b274835
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: checkAccess(String accountName, String path)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.checkAccess(String accountName, String path)
  type: Method
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > checkAccess(String accountName, String path)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afe8f63a26a25d7e601b57bd6b56698ae
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceCall checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a1a031319140b1d73a9ce861147afbcf7
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: checkAccess(String accountName, String path, String fsaction)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.checkAccess(String accountName, String path, String fsaction)
  type: Method
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > checkAccess(String accountName, String path, String fsaction)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: fsaction
      type: "26831127"
      description: <p>File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1af378e408fa2f776083fe93d6af0e814c
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceCall checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: fsaction
      type: "26831127"
      description: <p>File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._file_operation_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._file_operation_result.yml
  name: FileOperationResult
  fullName: com.microsoft.azure.management.datalake.store.models.FileOperationResult
  type: Class
  summary: <p>The result of the request or operation. </p>
  syntax:
    content: public class FileOperationResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afadeb0164f6f8bc2e4aa7e6c4dfac63b
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: mkdirs(String accountName, String path)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.mkdirs(String accountName, String path)
  type: Method
  summary: >-
    <p>Creates a directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > mkdirs(String accountName, String path)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to create. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a1f79eaad706d282ef52bfbf9525db091
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  summary: >-
    <p>Creates a directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to create. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1abdd2d7f686059fe38bd8a0e52473278b
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concat(String accountName, String destinationPath, List< String > sources)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.concat(String accountName, String destinationPath, List< String > sources)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, removing all source files upon success.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concat(String accountName, String destinationPath, List< String > sources)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: destinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: sources
      type: f35af49b
      description: <p>A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a1b57d86dd33a5eef0f42d67a27041ca2
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, removing all source files upon success.</p>

    <p></p>
  syntax:
    content: public ServiceCall concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: destinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: sources
      type: f35af49b
      description: <p>A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a3bdbdff5702928c7f57b85690b4a92ea
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab194a4a0600fd72aeb49f47ec0a158ad
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceCall msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab1e77d3db11fff9e2f16a7d0ca62a261
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: deleteSourceDirectory
      type: 866c2227
      description: '<p>Indicates that as an optimization instead of deleting each individual source stream, delete the source stream folder if all streams are in the same folder instead. This results in a substantial performance improvement when the only streams in the folder are part of the concatenation operation. WARNING: This includes the deletion of any other files that are not source files. Only set this to true when source files are the only files in the source directory. </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a592b47b98116d5b978f5b4308332e66e
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceCall msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: deleteSourceDirectory
      type: 866c2227
      description: '<p>Indicates that as an optimization instead of deleting each individual source stream, delete the source stream folder if all streams are in the same folder instead. This results in a substantial performance improvement when the only streams in the folder are part of the concatenation operation. WARNING: This includes the deletion of any other files that are not source files. Only set this to true when source files are the only files in the source directory. </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._file_statuses_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._file_statuses_result.yml
  name: FileStatusesResult
  fullName: com.microsoft.azure.management.datalake.store.models.FileStatusesResult
  type: Class
  summary: <p>Data Lake Store filesystem file status list information response. </p>
  syntax:
    content: public class FileStatusesResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a6ce2fd51f496ecf0cc8c6897dbadc64d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: listFileStatus(String accountName, String listFilePath)
  fullName: ServiceResponse<FileStatusesResult> com.microsoft.azure.management.datalake.store.FileSystems.listFileStatus(String accountName, String listFilePath)
  type: Method
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusesResult > listFileStatus(String accountName, String listFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the FileStatusesResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a4288752556973eb7d79afe55d0164b08
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
  type: Method
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a65b568af790ad9e265a03bff5c08a0be
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
  fullName: ServiceResponse<FileStatusesResult> com.microsoft.azure.management.datalake.store.FileSystems.listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
  type: Method
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusesResult > listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: listSize
      type: 08effaa0
      description: <p>Gets or sets the number of items to return. Optional. </p>
    - id: listAfter
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional. </p>
    - id: listBefore
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the FileStatusesResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1af50b485f5df71c49093fa3b3fa86409e
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
  type: Method
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: listSize
      type: 08effaa0
      description: <p>Gets or sets the number of items to return. Optional. </p>
    - id: listAfter
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional. </p>
    - id: listBefore
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._content_summary_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._content_summary_result.yml
  name: ContentSummaryResult
  fullName: com.microsoft.azure.management.datalake.store.models.ContentSummaryResult
  type: Class
  summary: <p>Data Lake Store filesystem content summary information response. </p>
  syntax:
    content: public class ContentSummaryResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a284146d513067c79d902fb179f9d55c6
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getContentSummary(String accountName, String getContentSummaryFilePath)
  fullName: ServiceResponse<ContentSummaryResult> com.microsoft.azure.management.datalake.store.FileSystems.getContentSummary(String accountName, String getContentSummaryFilePath)
  type: Method
  summary: >-
    <p>Gets the file content summary object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< ContentSummaryResult > getContentSummary(String accountName, String getContentSummaryFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getContentSummaryFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file for which to retrieve the summary. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the ContentSummaryResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a7cfd691068b46fd381b1b168691fc593
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the file content summary object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceCall getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getContentSummaryFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file for which to retrieve the summary. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._file_status_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._file_status_result.yml
  name: FileStatusResult
  fullName: com.microsoft.azure.management.datalake.store.models.FileStatusResult
  type: Class
  summary: <p>Data Lake Store filesystem file status information response. </p>
  syntax:
    content: public class FileStatusResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a58361d379e3e45c17b459b20998aedfe
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getFileStatus(String accountName, String getFilePath)
  fullName: ServiceResponse<FileStatusResult> com.microsoft.azure.management.datalake.store.FileSystems.getFileStatus(String accountName, String getFilePath)
  type: Method
  summary: >-
    <p>Get the file status object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusResult > getFileStatus(String accountName, String getFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the FileStatusResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a045f95270337c20723fdcd415c20dc66
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
  type: Method
  summary: >-
    <p>Get the file status object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a505b2305101f3b0f93915f0d420fcf11
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: append(String accountName, String directFilePath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.append(String accountName, String directFilePath, byte[] streamContents)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > append(String accountName, String directFilePath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a63e5291ddfed34e8bfcd13820a56390e
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceCall appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afa7a41c79ff049ed111c9094279b8de3
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: append(String accountName, String directFilePath, byte[] streamContents, Long offset)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.append(String accountName, String directFilePath, byte[] streamContents, Long offset)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > append(String accountName, String directFilePath, byte[] streamContents, Long offset)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: offset
      type: 34f09483
      description: <p>The optional offset in the stream to begin the append operation. Default is to append at the end of the stream. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ac063bad02c63caa7b825eb8ec7789f91
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceCall appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: offset
      type: 34f09483
      description: <p>The optional offset in the stream to begin the append operation. Default is to append at the end of the stream. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a00ae858959be633c6fad025ca8c54684
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: create(String accountName, String directFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.create(String accountName, String directFilePath)
  type: Method
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > create(String accountName, String directFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1af13bb3bf8efc5b72bd3fc20366930d4d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceCall createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab389c244937381d800cc178cda88f883
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
  type: Method
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified. </p>
    - id: overwrite
      type: 866c2227
      description: <p>The indication of if the file should be overwritten. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ad6585d13f4cc07006135520cca2b38a4
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceCall createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified. </p>
    - id: overwrite
      type: 866c2227
      description: <p>The indication of if the file should be overwritten. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a9cc248173da8ce753a1e11cfddba9491
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: open(String accountName, String directFilePath)
  fullName: ServiceResponse<InputStream> com.microsoft.azure.management.datalake.store.FileSystems.open(String accountName, String directFilePath)
  type: Method
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< InputStream > open(String accountName, String directFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    return:
      type: com.microsoft.rest._service_response7f11b53f
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a00fe1301527c37871e969104701b898d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceCall openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ad4a3f3461d62e71d37c192119abb0731
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: open(String accountName, String directFilePath, Long length, Long offset)
  fullName: ServiceResponse<InputStream> com.microsoft.azure.management.datalake.store.FileSystems.open(String accountName, String directFilePath, Long length, Long offset)
  type: Method
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< InputStream > open(String accountName, String directFilePath, Long length, Long offset)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: length
      type: 34f09483
      description: <p>the Long value </p>
    - id: offset
      type: 34f09483
      description: <p>the Long value </p>
    return:
      type: com.microsoft.rest._service_response7f11b53f
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ad28dd78475041ff6c12ef54cc9fc16bb
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceCall openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: length
      type: 34f09483
      description: <p>the Long value </p>
    - id: offset
      type: 34f09483
      description: <p>the Long value </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1abd623f8c8101afe72da2ed57ef78f712
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setAcl(String accountName, String setAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setAcl(String accountName, String setAclFilePath, String aclspec)
  type: Method
  summary: >-
    <p>Sets the Access Control List (ACL) for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setAcl(String accountName, String setAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a540890b9b8a96ea5a95a56d215d56f73
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the Access Control List (ACL) for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab6b49512029c3d07367d3e3006d10ff8
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
  type: Method
  summary: >-
    <p>Modifies existing Access Control List (ACL) entries on a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: modifyAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a81b9a0e274757ead80fcd5d9ddf0756d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Modifies existing Access Control List (ACL) entries on a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: modifyAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ae5401218faa7a67dc558b60b8fe01fbd
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
  type: Method
  summary: >-
    <p>Removes existing Access Control List (ACL) entries for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: removeAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL removal operations in the format '[default:]user|group|other' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afbe1eb35d25d4047587690625a55324f
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Removes existing Access Control List (ACL) entries for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: removeAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL removal operations in the format '[default:]user|group|other' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._acl_status_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._acl_status_result.yml
  name: AclStatusResult
  fullName: com.microsoft.azure.management.datalake.store.models.AclStatusResult
  type: Class
  summary: <p>Data Lake Store file or directory Access Control List information. </p>
  syntax:
    content: public class AclStatusResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a1fcae5b2a1d57fd262cd04fd8e9d3d97
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getAclStatus(String accountName, String aclFilePath)
  fullName: ServiceResponse<AclStatusResult> com.microsoft.azure.management.datalake.store.FileSystems.getAclStatus(String accountName, String aclFilePath)
  type: Method
  summary: >-
    <p>Gets Access Control List (ACL) entries for the specified file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< AclStatusResult > getAclStatus(String accountName, String aclFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: aclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the AclStatusResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a107c182b0ef5340058073ddc828347c0
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
  type: Method
  summary: >-
    <p>Gets Access Control List (ACL) entries for the specified file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: aclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a080115afb3d8fa9b949893f36af9ab43
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: delete(String accountName, String filePath)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.delete(String accountName, String filePath)
  type: Method
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > delete(String accountName, String filePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab91f262d7e100d42d4cb0182845305d1
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afa95b8d5e195652e8e053fbcebe1065b
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: delete(String accountName, String filePath, Boolean recursive)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.delete(String accountName, String filePath, Boolean recursive)
  type: Method
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > delete(String accountName, String filePath, Boolean recursive)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>The optional switch indicating if the delete should be recursive </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a05bc0c38d533e11f82385c89f0272be2
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>The optional switch indicating if the delete should be recursive </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a17d8fc0492d723efd2e4f770490f7fe2
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: rename(String accountName, String renameFilePath, String destination)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.rename(String accountName, String renameFilePath, String destination)
  type: Method
  summary: >-
    <p>Rename a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > rename(String accountName, String renameFilePath, String destination)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: renameFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to move/rename. </p>
    - id: destination
      type: "26831127"
      description: <p>The path to move/rename the file or folder to </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1af022f901ff71d254f8c4a32a0f013825
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  summary: >-
    <p>Rename a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: renameFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to move/rename. </p>
    - id: destination
      type: "26831127"
      description: <p>The path to move/rename the file or folder to </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a71b5d0936a0b37266dbffa7ab5bd8f0d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setOwner(String accountName, String setOwnerFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setOwner(String accountName, String setOwnerFilePath)
  type: Method
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setOwner(String accountName, String setOwnerFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1aed102f918559b021d5772b6760467e1a
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ac93ea0f8d245c2ea67b9ea942d5c0123
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setOwner(String accountName, String setOwnerFilePath, String owner, String group)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setOwner(String accountName, String setOwnerFilePath, String owner, String group)
  type: Method
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setOwner(String accountName, String setOwnerFilePath, String owner, String group)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: owner
      type: "26831127"
      description: <p>The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: group
      type: "26831127"
      description: <p>The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a5c5302f655498c7cc4ec98f37363b579
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: owner
      type: "26831127"
      description: <p>The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: group
      type: "26831127"
      description: <p>The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ac7ebecb4f77d62f401ce47cd42be195e
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setPermission(String accountName, String setPermissionFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setPermission(String accountName, String setPermissionFilePath)
  type: Method
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setPermission(String accountName, String setPermissionFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1abe81ea065c824208b7e6b9e3c8acd24e
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a471a34b649b697482f8e3add7fd661b2
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setPermission(String accountName, String setPermissionFilePath, String permission)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setPermission(String accountName, String setPermissionFilePath, String permission)
  type: Method
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setPermission(String accountName, String setPermissionFilePath, String permission)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: permission
      type: "26831127"
      description: <p>A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1acb37d9e74e63a06333602d60086fc484
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.management.datalake.store.FileSystems.setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: permission
      type: "26831127"
      description: <p>A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
