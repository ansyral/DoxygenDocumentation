items:
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  id: _file_systems_impl
  parent: com.microsoft.azure.management.datalake.store.implementation
  children:
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1abaa87e640895978fd52fd8fe147b67c4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a735448e2554e888f3957818f2fd2e7f1
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a1f13a0ca9027f48e7524e66b5135decc
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a004db5145196aa2b07ed4181a6b851c8
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7b15fd1ce50609bd0a6a43c668260d8f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a8f8dc9d69c2f5d46eb6e7264f7f5961a
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a711aae5ee43954f3ec1adef39ea2af9d
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a4132f65b3044bf1646742067cf56f6ca
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7144496f2c4bc8519698e7623723f4db
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a988e70375b3b6aab3437836b5efc12bb
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a87816d62a06c34c2d5b771b2cda1547f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a04f0744306017f10000713e42c63f80b
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a619b853846edeaff422897098a5c796f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a94c130546c79b55f0bdd36c4fe4f8e99
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a39de3bc637fa922946a721ee770e5581
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a6b87060c688402adece11c9eeaab91f1
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad5d7491d4ee8804269d802d08227c608
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ab4700ab92cd07aa17905949ee10399b4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a905e87ce558ad387b5792fe7569eda9f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ab2d3c63cedaddd78cbbb248836f6deb4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a86d6c30aff416a8f29fbe8feed622637
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a055fc2683bffbfa228446618fddae0e7
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a380035e4410f42774c11de2b5fd15c5f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a8fb87e2ae63e02b440c96049870e587d
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a3babcd7b33a63b0205d7d1f4a5b6b105
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a18f6f20f00bd0f4fa29dc283714de6d4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aa200ee5893b0e2ef8dc80749d34b4376
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad34c3d3b56c7b9cc606e84c2506670d9
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a090f3b3fbd4df49576446cf8b3d22de0
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5cd88466890a175162159c3c9ee8a94d
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2d5c638dbf49afb1d91f6dad634952da
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aae505d16652e9ed68b8793c6c6d6e919
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a22a7805228f6f6762d4a18ff0d8b6f11
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a95be1201c6dac73b312e5997ca174392
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1af86e30884f3beb353ab46b38e67e6df3
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aafbb888195eabfbb5f754ecd10a7a6fa
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a251133c5b62fcbd81e298cffe472fb37
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5199457fcbaa9f65ee3306d9f66f462f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2a9a1283daa3b024de6d3c4baaef6b12
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a26195d698aab2888cf29b625585a75c1
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ac049d7b67d31afe317566f2bf9fe0635
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a90a072ee6678461dbde601fde78b53c6
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0be7a40ea7dd6c0154b19c8df739e2bc
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ae04163e5e8a0b38325354297298f13d7
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a3bfad91a38edec05b210a89b8e7c16c0
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1afc03c2559bc8b7fbb69ba14ed89ede06
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7693df6843c3842cc53a3cb3ac93d9eb
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0a20ad2442562e726e7e0e92c8953bc0
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5722a2a61b24ed3b7e8115064c456d1c
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7cf908d9ccf33b7dad5f429d076637cd
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a22a439a0f5869874c9b8ae902cbae2d5
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ac85f5b6602116de2432ab17f6ecabfd4
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ae69bfb26fbe76e75137365c1e2651b23
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1add720654a082407ecb1741d468be5f55
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a9ca22e9ae6de7ad349483baa2dfb647f
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aed93a5cc9f4385595628f4bfc8a3cc64
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aff1d5fea048e720500fd0f3298918135
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a555da7e1decc13a53a436afde3fecd9b
  - com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1afe14b05f561f3d47c36f187623645deb
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: FileSystemsImpl
  fullName: com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl
  type: Class
  source:
    remote: &o0
      path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 51
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.management.datalake.store._file_systems" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class FileSystemsImpl implements FileSystems
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.management.datalake.store._file_systems
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1abaa87e640895978fd52fd8fe147b67c4
  id: _file_systems_impl_1abaa87e640895978fd52fd8fe147b67c4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: append(String accountName, String directFilePath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.append(String accountName, String directFilePath, byte[] streamContents)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1187
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > append(String accountName, String directFilePath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a505b2305101f3b0f93915f0d420fcf11
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a735448e2554e888f3957818f2fd2e7f1
  id: _file_systems_impl_1a735448e2554e888f3957818f2fd2e7f1
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: append(String accountName, String directFilePath, byte[] streamContents, Long offset)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.append(String accountName, String directFilePath, byte[] streamContents, Long offset)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1278
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > append(String accountName, String directFilePath, byte[] streamContents, Long offset)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: offset
      type: 34f09483
      description: <p>The optional offset in the stream to begin the append operation. Default is to append at the end of the stream. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afa7a41c79ff049ed111c9094279b8de3
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a1f13a0ca9027f48e7524e66b5135decc
  id: _file_systems_impl_1a1f13a0ca9027f48e7524e66b5135decc
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1222
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a12b64b42e8f8a14425a0161653ba5522
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a004db5145196aa2b07ed4181a6b851c8
  id: _file_systems_impl_1a004db5145196aa2b07ed4181a6b851c8
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1313
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: offset
      type: 34f09483
      description: <p>The optional offset in the stream to begin the append operation. Default is to append at the end of the stream. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1abe9570eac5f522284af6a6b57314b051
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7b15fd1ce50609bd0a6a43c668260d8f
  id: _file_systems_impl_1a7b15fd1ce50609bd0a6a43c668260d8f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: checkAccess(String accountName, String path)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.checkAccess(String accountName, String path)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 345
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > checkAccess(String accountName, String path)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1adac634bcad95a952d4a9776a6b274835
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a8f8dc9d69c2f5d46eb6e7264f7f5961a
  id: _file_systems_impl_1a8f8dc9d69c2f5d46eb6e7264f7f5961a
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: checkAccess(String accountName, String path, String fsaction)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.checkAccess(String accountName, String path, String fsaction)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 422
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > checkAccess(String accountName, String path, String fsaction)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: fsaction
      type: "26831127"
      description: <p>File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a1a031319140b1d73a9ce861147afbcf7
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a711aae5ee43954f3ec1adef39ea2af9d
  id: _file_systems_impl_1a711aae5ee43954f3ec1adef39ea2af9d
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 373
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a70c73ea391439fbe4323a52f67f39f0a
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a4132f65b3044bf1646742067cf56f6ca
  id: _file_systems_impl_1a4132f65b3044bf1646742067cf56f6ca
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 450
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: fsaction
      type: "26831127"
      description: <p>File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1af8317e8dd85321e19828380e20ace84e
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7144496f2c4bc8519698e7623723f4db
  id: _file_systems_impl_1a7144496f2c4bc8519698e7623723f4db
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concat(String accountName, String destinationPath, List< String > sources)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concat(String accountName, String destinationPath, List< String > sources)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 586
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, removing all source files upon success.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concat(String accountName, String destinationPath, List< String > sources)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: destinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: sources
      type: f35af49b
      description: <p>A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1abdd2d7f686059fe38bd8a0e52473278b
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a988e70375b3b6aab3437836b5efc12bb
  id: _file_systems_impl_1a988e70375b3b6aab3437836b5efc12bb
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 619
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, removing all source files upon success.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: destinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: sources
      type: f35af49b
      description: <p>A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1af5930202ed693cae7b356fd37f1c8e0b
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a87816d62a06c34c2d5b771b2cda1547f
  id: _file_systems_impl_1a87816d62a06c34c2d5b771b2cda1547f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concurrentAppend(String accountName, String filePath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concurrentAppend(String accountName, String filePath, byte[] streamContents)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 163
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concurrentAppend(String accountName, String filePath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ac60768717a0b39706c206a2b4c59f0e2
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a04f0744306017f10000713e42c63f80b
  id: _file_systems_impl_1a04f0744306017f10000713e42c63f80b
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 252
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: appendMode
      type: com.microsoft.azure.management.datalake.store.models._append_mode_type
      description: '<p>Indicates the concurrent append call should create the file if it doesn''t exist or just open the existing file for append. Possible values include: ''autocreate'' </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a499d0de67c392b5221735e4755987904
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a619b853846edeaff422897098a5c796f
  id: _file_systems_impl_1a619b853846edeaff422897098a5c796f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 286
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: appendMode
      type: com.microsoft.azure.management.datalake.store.models._append_mode_type
      description: '<p>Indicates the concurrent append call should create the file if it doesn''t exist or just open the existing file for append. Possible values include: ''autocreate'' </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a660a0944c8beb860ab2974506bcef546
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a94c130546c79b55f0bdd36c4fe4f8e99
  id: _file_systems_impl_1a94c130546c79b55f0bdd36c4fe4f8e99
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 197
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a66d3295208be343f92909f38f1123cdc
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a39de3bc637fa922946a721ee770e5581
  id: _file_systems_impl_1a39de3bc637fa922946a721ee770e5581
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: create(String accountName, String directFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.create(String accountName, String directFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1373
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > create(String accountName, String directFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a00ae858959be633c6fad025ca8c54684
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a6b87060c688402adece11c9eeaab91f1
  id: _file_systems_impl_1a6b87060c688402adece11c9eeaab91f1
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1465
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified. </p>
    - id: overwrite
      type: 866c2227
      description: <p>The indication of if the file should be overwritten. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab389c244937381d800cc178cda88f883
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad5d7491d4ee8804269d802d08227c608
  id: _file_systems_impl_1ad5d7491d4ee8804269d802d08227c608
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1500
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified. </p>
    - id: overwrite
      type: 866c2227
      description: <p>The indication of if the file should be overwritten. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1aed4e4a5f362288aa52b327beb58cea25
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ab4700ab92cd07aa17905949ee10399b4
  id: _file_systems_impl_1ab4700ab92cd07aa17905949ee10399b4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1408
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1aaf6435ab4078246a737167c703555062
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a905e87ce558ad387b5792fe7569eda9f
  id: _file_systems_impl_1a905e87ce558ad387b5792fe7569eda9f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: delete(String accountName, String filePath)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.delete(String accountName, String filePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2075
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > delete(String accountName, String filePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a080115afb3d8fa9b949893f36af9ab43
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ab2d3c63cedaddd78cbbb248836f6deb4
  id: _file_systems_impl_1ab2d3c63cedaddd78cbbb248836f6deb4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: delete(String accountName, String filePath, Boolean recursive)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.delete(String accountName, String filePath, Boolean recursive)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2152
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > delete(String accountName, String filePath, Boolean recursive)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>The optional switch indicating if the delete should be recursive </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afa95b8d5e195652e8e053fbcebe1065b
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a86d6c30aff416a8f29fbe8feed622637
  id: _file_systems_impl_1a86d6c30aff416a8f29fbe8feed622637
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2180
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileOperationResult > deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>The optional switch indicating if the delete should be recursive </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a22860108508696c1c7b931705ad12d45
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a055fc2683bffbfa228446618fddae0e7
  id: _file_systems_impl_1a055fc2683bffbfa228446618fddae0e7
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2103
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileOperationResult > deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a8a2c20571205f223f841504a6d0110de
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a380035e4410f42774c11de2b5fd15c5f
  id: _file_systems_impl_1a380035e4410f42774c11de2b5fd15c5f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: FileSystemsImpl(Retrofit retrofit, DataLakeStoreFileSystemManagementClientImpl client)
  fullName: com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.FileSystemsImpl(Retrofit retrofit, DataLakeStoreFileSystemManagementClientImpl client)
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 63
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.management.datalake.store.implementation._file_systems_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public FileSystemsImpl(Retrofit retrofit, DataLakeStoreFileSystemManagementClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a8fb87e2ae63e02b440c96049870e587d
  id: _file_systems_impl_1a8fb87e2ae63e02b440c96049870e587d
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getAclStatus(String accountName, String aclFilePath)
  fullName: ServiceResponse<AclStatusResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getAclStatus(String accountName, String aclFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1994
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Gets Access Control List (ACL) entries for the specified file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< AclStatusResult > getAclStatus(String accountName, String aclFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: aclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the AclStatusResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a1fcae5b2a1d57fd262cd04fd8e9d3d97
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a3babcd7b33a63b0205d7d1f4a5b6b105
  id: _file_systems_impl_1a3babcd7b33a63b0205d7d1f4a5b6b105
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
  fullName: ServiceCall<AclStatusResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2021
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Gets Access Control List (ACL) entries for the specified file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< AclStatusResult > getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: aclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a7f6e93534d5b968ad1f25bb4307dc5ea
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a18f6f20f00bd0f4fa29dc283714de6d4
  id: _file_systems_impl_1a18f6f20f00bd0f4fa29dc283714de6d4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getContentSummary(String accountName, String getContentSummaryFilePath)
  fullName: ServiceResponse<ContentSummaryResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getContentSummary(String accountName, String getContentSummaryFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1024
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Gets the file content summary object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< ContentSummaryResult > getContentSummary(String accountName, String getContentSummaryFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getContentSummaryFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file for which to retrieve the summary. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the ContentSummaryResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a284146d513067c79d902fb179f9d55c6
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aa200ee5893b0e2ef8dc80749d34b4376
  id: _file_systems_impl_1aa200ee5893b0e2ef8dc80749d34b4376
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
  fullName: ServiceCall<ContentSummaryResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1051
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Gets the file content summary object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceCall< ContentSummaryResult > getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getContentSummaryFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file for which to retrieve the summary. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a6e659737af4948ca34e4a85c040fbe0d
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ad34c3d3b56c7b9cc606e84c2506670d9
  id: _file_systems_impl_1ad34c3d3b56c7b9cc606e84c2506670d9
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getFileStatus(String accountName, String getFilePath)
  fullName: ServiceResponse<FileStatusResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getFileStatus(String accountName, String getFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1105
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the file status object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusResult > getFileStatus(String accountName, String getFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the FileStatusResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a58361d379e3e45c17b459b20998aedfe
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a090f3b3fbd4df49576446cf8b3d22de0
  id: _file_systems_impl_1a090f3b3fbd4df49576446cf8b3d22de0
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
  fullName: ServiceCall<FileStatusResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1132
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the file status object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileStatusResult > getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1aec6880c16f2811d7e4613a1be5654a3a
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5cd88466890a175162159c3c9ee8a94d
  id: _file_systems_impl_1a5cd88466890a175162159c3c9ee8a94d
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: listFileStatus(String accountName, String listFilePath)
  fullName: ServiceResponse<FileStatusesResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.listFileStatus(String accountName, String listFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 857
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusesResult > listFileStatus(String accountName, String listFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the FileStatusesResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a6ce2fd51f496ecf0cc8c6897dbadc64d
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2d5c638dbf49afb1d91f6dad634952da
  id: _file_systems_impl_1a2d5c638dbf49afb1d91f6dad634952da
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
  fullName: ServiceResponse<FileStatusesResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 940
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusesResult > listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: listSize
      type: 08effaa0
      description: <p>Gets or sets the number of items to return. Optional. </p>
    - id: listAfter
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional. </p>
    - id: listBefore
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the FileStatusesResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a65b568af790ad9e265a03bff5c08a0be
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aae505d16652e9ed68b8793c6c6d6e919
  id: _file_systems_impl_1aae505d16652e9ed68b8793c6c6d6e919
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
  fullName: ServiceCall<FileStatusesResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 887
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileStatusesResult > listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a01a4a2e5b18f26be1db575240fa7f72c
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a22a7805228f6f6762d4a18ff0d8b6f11
  id: _file_systems_impl_1a22a7805228f6f6762d4a18ff0d8b6f11
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
  fullName: ServiceCall<FileStatusesResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 970
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileStatusesResult > listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: listSize
      type: 08effaa0
      description: <p>Gets or sets the number of items to return. Optional. </p>
    - id: listAfter
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional. </p>
    - id: listBefore
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a4c132d0cc88e6d8a4dacf5153f415aee
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a95be1201c6dac73b312e5997ca174392
  id: _file_systems_impl_1a95be1201c6dac73b312e5997ca174392
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: mkdirs(String accountName, String path)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.mkdirs(String accountName, String path)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 504
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > mkdirs(String accountName, String path)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to create. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afadeb0164f6f8bc2e4aa7e6c4dfac63b
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1af86e30884f3beb353ab46b38e67e6df3
  id: _file_systems_impl_1af86e30884f3beb353ab46b38e67e6df3
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 531
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Creates a directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileOperationResult > mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to create. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a170af0a7943fde73b7690c886c4ccefb
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aafbb888195eabfbb5f754ecd10a7a6fa
  id: _file_systems_impl_1aafbb888195eabfbb5f754ecd10a7a6fa
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1817
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Modifies existing Access Control List (ACL) entries on a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: modifyAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab6b49512029c3d07367d3e3006d10ff8
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a251133c5b62fcbd81e298cffe472fb37
  id: _file_systems_impl_1a251133c5b62fcbd81e298cffe472fb37
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1848
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Modifies existing Access Control List (ACL) entries on a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: modifyAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a8628f1148d23d3660be36332d618466f
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5199457fcbaa9f65ee3306d9f66f462f
  id: _file_systems_impl_1a5199457fcbaa9f65ee3306d9f66f462f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 679
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a3bdbdff5702928c7f57b85690b4a92ea
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a2a9a1283daa3b024de6d3c4baaef6b12
  id: _file_systems_impl_1a2a9a1283daa3b024de6d3c4baaef6b12
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 766
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: deleteSourceDirectory
      type: 866c2227
      description: '<p>Indicates that as an optimization instead of deleting each individual source stream, delete the source stream folder if all streams are in the same folder instead. This results in a substantial performance improvement when the only streams in the folder are part of the concatenation operation. WARNING: This includes the deletion of any other files that are not source files. Only set this to true when source files are the only files in the source directory. </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab1e77d3db11fff9e2f16a7d0ca62a261
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a26195d698aab2888cf29b625585a75c1
  id: _file_systems_impl_1a26195d698aab2888cf29b625585a75c1
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 799
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: deleteSourceDirectory
      type: 866c2227
      description: '<p>Indicates that as an optimization instead of deleting each individual source stream, delete the source stream folder if all streams are in the same folder instead. This results in a substantial performance improvement when the only streams in the folder are part of the concatenation operation. WARNING: This includes the deletion of any other files that are not source files. Only set this to true when source files are the only files in the source directory. </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a119eb372cac4308c881f0a7718307cff
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ac049d7b67d31afe317566f2bf9fe0635
  id: _file_systems_impl_1ac049d7b67d31afe317566f2bf9fe0635
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 712
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a0d576334e9dd4e4b80e03320d358a4d8
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a90a072ee6678461dbde601fde78b53c6
  id: _file_systems_impl_1a90a072ee6678461dbde601fde78b53c6
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: open(String accountName, String directFilePath)
  fullName: ServiceResponse<InputStream> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.open(String accountName, String directFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1560
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< InputStream > open(String accountName, String directFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    return:
      type: com.microsoft.rest._service_response7f11b53f
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a9cc248173da8ce753a1e11cfddba9491
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0be7a40ea7dd6c0154b19c8df739e2bc
  id: _file_systems_impl_1a0be7a40ea7dd6c0154b19c8df739e2bc
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: open(String accountName, String directFilePath, Long length, Long offset)
  fullName: ServiceResponse<InputStream> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.open(String accountName, String directFilePath, Long length, Long offset)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1642
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< InputStream > open(String accountName, String directFilePath, Long length, Long offset)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: length
      type: 34f09483
      description: <p>the Long value </p>
    - id: offset
      type: 34f09483
      description: <p>the Long value </p>
    return:
      type: com.microsoft.rest._service_response7f11b53f
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ad4a3f3461d62e71d37c192119abb0731
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ae04163e5e8a0b38325354297298f13d7
  id: _file_systems_impl_1ae04163e5e8a0b38325354297298f13d7
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1590
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ad799332a46937a2d5e8ac4fbf075a02d
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a3bfad91a38edec05b210a89b8e7c16c0
  id: _file_systems_impl_1a3bfad91a38edec05b210a89b8e7c16c0
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1672
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: length
      type: 34f09483
      description: <p>the Long value </p>
    - id: offset
      type: 34f09483
      description: <p>the Long value </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ae40262efabba50518ff4b378d876ccab
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1afc03c2559bc8b7fbb69ba14ed89ede06
  id: _file_systems_impl_1afc03c2559bc8b7fbb69ba14ed89ede06
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1906
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Removes existing Access Control List (ACL) entries for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: removeAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL removal operations in the format '[default:]user|group|other' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ae5401218faa7a67dc558b60b8fe01fbd
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7693df6843c3842cc53a3cb3ac93d9eb
  id: _file_systems_impl_1a7693df6843c3842cc53a3cb3ac93d9eb
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1937
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Removes existing Access Control List (ACL) entries for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: removeAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL removal operations in the format '[default:]user|group|other' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1aaf82daf675e894eb261dc6ec39b4530c
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a0a20ad2442562e726e7e0e92c8953bc0
  id: _file_systems_impl_1a0a20ad2442562e726e7e0e92c8953bc0
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: rename(String accountName, String renameFilePath, String destination)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.rename(String accountName, String renameFilePath, String destination)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2235
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Rename a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > rename(String accountName, String renameFilePath, String destination)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: renameFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to move/rename. </p>
    - id: destination
      type: "26831127"
      description: <p>The path to move/rename the file or folder to </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a17d8fc0492d723efd2e4f770490f7fe2
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a5722a2a61b24ed3b7e8115064c456d1c
  id: _file_systems_impl_1a5722a2a61b24ed3b7e8115064c456d1c
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall<FileOperationResult> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2266
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Rename a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileOperationResult > renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: renameFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to move/rename. </p>
    - id: destination
      type: "26831127"
      description: <p>The path to move/rename the file or folder to </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ac2684978af9dafb8aa56065528818d1f
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a7cf908d9ccf33b7dad5f429d076637cd
  id: _file_systems_impl_1a7cf908d9ccf33b7dad5f429d076637cd
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setAcl(String accountName, String setAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setAcl(String accountName, String setAclFilePath, String aclspec)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1728
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the Access Control List (ACL) for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setAcl(String accountName, String setAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1abd623f8c8101afe72da2ed57ef78f712
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a22a439a0f5869874c9b8ae902cbae2d5
  id: _file_systems_impl_1a22a439a0f5869874c9b8ae902cbae2d5
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 1759
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the Access Control List (ACL) for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1afb5e699e5d2473b985fe20292fd0d553
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ac85f5b6602116de2432ab17f6ecabfd4
  id: _file_systems_impl_1ac85f5b6602116de2432ab17f6ecabfd4
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setOwner(String accountName, String setOwnerFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setOwner(String accountName, String setOwnerFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2323
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setOwner(String accountName, String setOwnerFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a71b5d0936a0b37266dbffa7ab5bd8f0d
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1ae69bfb26fbe76e75137365c1e2651b23
  id: _file_systems_impl_1ae69bfb26fbe76e75137365c1e2651b23
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setOwner(String accountName, String setOwnerFilePath, String owner, String group)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setOwner(String accountName, String setOwnerFilePath, String owner, String group)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2403
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setOwner(String accountName, String setOwnerFilePath, String owner, String group)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: owner
      type: "26831127"
      description: <p>The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: group
      type: "26831127"
      description: <p>The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ac93ea0f8d245c2ea67b9ea942d5c0123
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1add720654a082407ecb1741d468be5f55
  id: _file_systems_impl_1add720654a082407ecb1741d468be5f55
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2352
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a1f1b6f47010bca7d088adf5777a8c86c
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a9ca22e9ae6de7ad349483baa2dfb647f
  id: _file_systems_impl_1a9ca22e9ae6de7ad349483baa2dfb647f
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2432
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: owner
      type: "26831127"
      description: <p>The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: group
      type: "26831127"
      description: <p>The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1aee4d0d091d2a0b7e323e47b5f9e0dd32
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aed93a5cc9f4385595628f4bfc8a3cc64
  id: _file_systems_impl_1aed93a5cc9f4385595628f4bfc8a3cc64
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setPermission(String accountName, String setPermissionFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setPermission(String accountName, String setPermissionFilePath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2486
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setPermission(String accountName, String setPermissionFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ac7ebecb4f77d62f401ce47cd42be195e
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1aff1d5fea048e720500fd0f3298918135
  id: _file_systems_impl_1aff1d5fea048e720500fd0f3298918135
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setPermission(String accountName, String setPermissionFilePath, String permission)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setPermission(String accountName, String setPermissionFilePath, String permission)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2563
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setPermission(String accountName, String setPermissionFilePath, String permission)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: permission
      type: "26831127"
      description: <p>A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a471a34b649b697482f8e3add7fd661b2
  exceptions:
  - type: "24876076"
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1a555da7e1decc13a53a436afde3fecd9b
  id: _file_systems_impl_1a555da7e1decc13a53a436afde3fecd9b
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2514
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1a09de8c4b1f34886a330dd8e98c24f063
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl_1afe14b05f561f3d47c36f187623645deb
  id: _file_systems_impl_1afe14b05f561f3d47c36f187623645deb
  parent: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  langs:
  - java
  name: setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl.setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store/src/main/java/com/microsoft/azure/management/datalake/store/implementation/FileSystemsImpl.java
    startLine: 2591
  package: com.microsoft.azure.management.datalake.store.implementation
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: permission
      type: "26831127"
      description: <p>A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.management.datalake.store._file_systems_1ab12a4869eeec7dcc03cf549712936846
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: "24876076"
  spec.java:
  - name: AdlsErrorException
    fullName: AdlsErrorException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: bc819c2f
  spec.java:
  - name: byte[]
    fullName: byte[]
- uid: com.microsoft.rest._service_responsee35e5465
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
    href: com.microsoft.rest._service_response.yml
  - name: < Void >
    fullName: < Void >
- uid: 93de0ef9com.microsoft.rest._service_callbacke35e5465
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: < Void >
    fullName: < Void >
- uid: com.microsoft.rest._service_calle35e5465
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: < Void >
    fullName: < Void >
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_operation_result
    name: FileOperationResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileOperationResult
    href: com.microsoft.azure.management.datalake.store.models._file_operation_result.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_operation_result
    name: FileOperationResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileOperationResult
    href: com.microsoft.azure.management.datalake.store.models._file_operation_result.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_operation_result
    name: FileOperationResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileOperationResult
    href: com.microsoft.azure.management.datalake.store.models._file_operation_result.yml
  - name: " >"
    fullName: " >"
- uid: f35af49b
  spec.java:
  - name: List< String >
    fullName: List< String >
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_statuses_result
    name: FileStatusesResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusesResult
    href: com.microsoft.azure.management.datalake.store.models._file_statuses_result.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_statuses_result
    name: FileStatusesResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusesResult
    href: com.microsoft.azure.management.datalake.store.models._file_statuses_result.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_statuses_result
    name: FileStatusesResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusesResult
    href: com.microsoft.azure.management.datalake.store.models._file_statuses_result.yml
  - name: " >"
    fullName: " >"
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._content_summary_result
    name: ContentSummaryResult
    fullName: com.microsoft.azure.management.datalake.store.models.ContentSummaryResult
    href: com.microsoft.azure.management.datalake.store.models._content_summary_result.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._content_summary_result
    name: ContentSummaryResult
    fullName: com.microsoft.azure.management.datalake.store.models.ContentSummaryResult
    href: com.microsoft.azure.management.datalake.store.models._content_summary_result.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._content_summary_result
    name: ContentSummaryResult
    fullName: com.microsoft.azure.management.datalake.store.models.ContentSummaryResult
    href: com.microsoft.azure.management.datalake.store.models._content_summary_result.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_status_result
    name: FileStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusResult
    href: com.microsoft.azure.management.datalake.store.models._file_status_result.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_status_result
    name: FileStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusResult
    href: com.microsoft.azure.management.datalake.store.models._file_status_result.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._file_status_result
    name: FileStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.FileStatusResult
    href: com.microsoft.azure.management.datalake.store.models._file_status_result.yml
  - name: " >"
    fullName: " >"
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: com.microsoft.rest._service_response7f11b53f
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
    href: com.microsoft.rest._service_response.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: 93de0ef9com.microsoft.rest._service_callback7f11b53f
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: com.microsoft.rest._service_call7f11b53f
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response
    name: ServiceResponse
    fullName: com.microsoft.rest.ServiceResponse
    href: com.microsoft.rest._service_response.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._acl_status_result
    name: AclStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.AclStatusResult
    href: com.microsoft.azure.management.datalake.store.models._acl_status_result.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._acl_status_result
    name: AclStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.AclStatusResult
    href: com.microsoft.azure.management.datalake.store.models._acl_status_result.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.management.datalake.store.models._acl_status_result
    name: AclStatusResult
    fullName: com.microsoft.azure.management.datalake.store.models.AclStatusResult
    href: com.microsoft.azure.management.datalake.store.models._acl_status_result.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.azure.management.datalake.store._file_systems
  parent: com.microsoft.azure.management.datalake.store
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: FileSystems
  fullName: com.microsoft.azure.management.datalake.store.FileSystems
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.management.datalake.store._file_systems" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface FileSystems
- uid: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c
  parent: com.microsoft.azure.management.datalake.store.implementation
  href: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c.yml
  name: DataLakeStoreFileSystemManagementClientImpl
  fullName: com.microsoft.azure.management.datalake.store.implementation.DataLakeStoreFileSystemManagementClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class DataLakeStoreFileSystemManagementClientImpl extends AzureServiceClient implements DataLakeStoreFileSystemManagementClient
- uid: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl
  parent: com.microsoft.azure.management.datalake.store.implementation
  href: com.microsoft.azure.management.datalake.store.implementation._file_systems_impl.yml
  name: FileSystemsImpl
  fullName: com.microsoft.azure.management.datalake.store.implementation.FileSystemsImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.management.datalake.store._file_systems" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.rest._service_response
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_response.yml
  name: ServiceResponse<T>
  fullName: com.microsoft.rest.ServiceResponse<T>
  type: Class
  summary: >-
    <p>An instance of this class holds a response object and a raw REST response.</p>

    <p></p>
  syntax:
    content: public class ServiceResponse<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the response </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ac60768717a0b39706c206a2b4c59f0e2
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concurrentAppend(String accountName, String filePath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.concurrentAppend(String accountName, String filePath, byte[] streamContents)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concurrentAppend(String accountName, String filePath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store.models._adls_error_exception
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._adls_error_exception.yml
  name: AdlsErrorException
  fullName: com.microsoft.azure.management.datalake.store.models.AdlsErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.management.datalake.store.models._adls_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class AdlsErrorException extends RestException
- uid: com.microsoft.azure._azure
  parent: com.microsoft.azure
  href: com.microsoft.azure._azure.yml
  name: Azure
  fullName: com.microsoft.azure.Azure
  type: Class
  summary: <p>The entry point for accessing resource management APIs in <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class Azure
- uid: com.microsoft.rest._service_call
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_call.yml
  name: ServiceCall<T>
  fullName: com.microsoft.rest.ServiceCall<T>
  type: Class
  summary: >-
    <p>An instance of this class provides access to the underlying REST call invocation. This class wraps around the Retrofit Call object and allows updates to it in the progress of a long running operation or a paging operation.</p>

    <p></p>
  syntax:
    content: public class ServiceCall<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the returning object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a66d3295208be343f92909f38f1123cdc
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.rest._service_callback
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_callback.yml
  name: ServiceCallback<T>
  fullName: com.microsoft.rest.ServiceCallback<T>
  type: Class
  summary: >-
    <p>The callback used for client side asynchronous operations.</p>

    <p></p>
  syntax:
    content: public class ServiceCallback<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the response </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a499d0de67c392b5221735e4755987904
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concurrentAppend(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: appendMode
      type: com.microsoft.azure.management.datalake.store.models._append_mode_type
      description: '<p>Indicates the concurrent append call should create the file if it doesn''t exist or just open the existing file for append. Possible values include: ''autocreate'' </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store.models._append_mode_type
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._append_mode_type.yml
  name: AppendModeType
  fullName: com.microsoft.azure.management.datalake.store.models.AppendModeType
  type: Enum
  summary: <p>Defines values for <xref href="com.microsoft.azure.management.datalake.store.models._append_mode_type" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum AppendModeType
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a660a0944c8beb860ab2974506bcef546
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > concurrentAppendAsync(String accountName, String filePath, byte[] streamContents, AppendModeType appendMode, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append using concurrent append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: appendMode
      type: com.microsoft.azure.management.datalake.store.models._append_mode_type
      description: '<p>Indicates the concurrent append call should create the file if it doesn''t exist or just open the existing file for append. Possible values include: ''autocreate'' </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1adac634bcad95a952d4a9776a6b274835
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: checkAccess(String accountName, String path)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.checkAccess(String accountName, String path)
  type: Method
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > checkAccess(String accountName, String path)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a70c73ea391439fbe4323a52f67f39f0a
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > checkAccessAsync(String accountName, String path, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a1a031319140b1d73a9ce861147afbcf7
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: checkAccess(String accountName, String path, String fsaction)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.checkAccess(String accountName, String path, String fsaction)
  type: Method
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > checkAccess(String accountName, String path, String fsaction)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: fsaction
      type: "26831127"
      description: <p>File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1af8317e8dd85321e19828380e20ace84e
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Checks if the specified access is available at the given path.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > checkAccessAsync(String accountName, String path, String fsaction, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to check access. </p>
    - id: fsaction
      type: "26831127"
      description: <p>File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._file_operation_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._file_operation_result.yml
  name: FileOperationResult
  fullName: com.microsoft.azure.management.datalake.store.models.FileOperationResult
  type: Class
  summary: <p>The result of the request or operation. </p>
  syntax:
    content: public class FileOperationResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afadeb0164f6f8bc2e4aa7e6c4dfac63b
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: mkdirs(String accountName, String path)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.mkdirs(String accountName, String path)
  type: Method
  summary: >-
    <p>Creates a directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > mkdirs(String accountName, String path)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to create. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a170af0a7943fde73b7690c886c4ccefb
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  summary: >-
    <p>Creates a directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileOperationResult > mkdirsAsync(String accountName, String path, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: path
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to create. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1abdd2d7f686059fe38bd8a0e52473278b
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concat(String accountName, String destinationPath, List< String > sources)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.concat(String accountName, String destinationPath, List< String > sources)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, removing all source files upon success.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > concat(String accountName, String destinationPath, List< String > sources)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: destinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: sources
      type: f35af49b
      description: <p>A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1af5930202ed693cae7b356fd37f1c8e0b
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, removing all source files upon success.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > concatAsync(String accountName, String destinationPath, List< String > sources, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: destinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: sources
      type: f35af49b
      description: <p>A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a3bdbdff5702928c7f57b85690b4a92ea
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a0d576334e9dd4e4b80e03320d358a4d8
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab1e77d3db11fff9e2f16a7d0ca62a261
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > msConcat(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: deleteSourceDirectory
      type: 866c2227
      description: '<p>Indicates that as an optimization instead of deleting each individual source stream, delete the source stream folder if all streams are in the same folder instead. This results in a substantial performance improvement when the only streams in the folder are part of the concatenation operation. WARNING: This includes the deletion of any other files that are not source files. Only set this to true when source files are the only files in the source directory. </p>'
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a119eb372cac4308c881f0a7718307cff
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > msConcatAsync(String accountName, String msConcatDestinationPath, byte[] streamContents, Boolean deleteSourceDirectory, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: msConcatDestinationPath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation. </p>
    - id: streamContents
      type: bc819c2f
      description: '<p>A list of Data Lake Store paths (starting with ''/'') of the source files. Must be in the format: sources=&lt;comma separated list&gt; </p>'
    - id: deleteSourceDirectory
      type: 866c2227
      description: '<p>Indicates that as an optimization instead of deleting each individual source stream, delete the source stream folder if all streams are in the same folder instead. This results in a substantial performance improvement when the only streams in the folder are part of the concatenation operation. WARNING: This includes the deletion of any other files that are not source files. Only set this to true when source files are the only files in the source directory. </p>'
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._file_statuses_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._file_statuses_result.yml
  name: FileStatusesResult
  fullName: com.microsoft.azure.management.datalake.store.models.FileStatusesResult
  type: Class
  summary: <p>Data Lake Store filesystem file status list information response. </p>
  syntax:
    content: public class FileStatusesResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a6ce2fd51f496ecf0cc8c6897dbadc64d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: listFileStatus(String accountName, String listFilePath)
  fullName: ServiceResponse<FileStatusesResult> com.microsoft.azure.management.datalake.store.FileSystems.listFileStatus(String accountName, String listFilePath)
  type: Method
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusesResult > listFileStatus(String accountName, String listFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the FileStatusesResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a01a4a2e5b18f26be1db575240fa7f72c
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
  fullName: ServiceCall<FileStatusesResult> com.microsoft.azure.management.datalake.store.FileSystems.listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
  type: Method
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileStatusesResult > listFileStatusAsync(String accountName, String listFilePath, final ServiceCallback< FileStatusesResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a65b568af790ad9e265a03bff5c08a0be
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
  fullName: ServiceResponse<FileStatusesResult> com.microsoft.azure.management.datalake.store.FileSystems.listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
  type: Method
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusesResult > listFileStatus(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: listSize
      type: 08effaa0
      description: <p>Gets or sets the number of items to return. Optional. </p>
    - id: listAfter
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional. </p>
    - id: listBefore
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the FileStatusesResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a4c132d0cc88e6d8a4dacf5153f415aee
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
  fullName: ServiceCall<FileStatusesResult> com.microsoft.azure.management.datalake.store.FileSystems.listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
  type: Method
  summary: >-
    <p>Get the list of file status objects specified by the file path, with optional pagination parameters.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileStatusesResult > listFileStatusAsync(String accountName, String listFilePath, Integer listSize, String listAfter, String listBefore, final ServiceCallback< FileStatusesResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: listFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the directory to list. </p>
    - id: listSize
      type: 08effaa0
      description: <p>Gets or sets the number of items to return. Optional. </p>
    - id: listAfter
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional. </p>
    - id: listBefore
      type: "26831127"
      description: <p>Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_statuses_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._content_summary_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._content_summary_result.yml
  name: ContentSummaryResult
  fullName: com.microsoft.azure.management.datalake.store.models.ContentSummaryResult
  type: Class
  summary: <p>Data Lake Store filesystem content summary information response. </p>
  syntax:
    content: public class ContentSummaryResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a284146d513067c79d902fb179f9d55c6
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getContentSummary(String accountName, String getContentSummaryFilePath)
  fullName: ServiceResponse<ContentSummaryResult> com.microsoft.azure.management.datalake.store.FileSystems.getContentSummary(String accountName, String getContentSummaryFilePath)
  type: Method
  summary: >-
    <p>Gets the file content summary object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< ContentSummaryResult > getContentSummary(String accountName, String getContentSummaryFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getContentSummaryFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file for which to retrieve the summary. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the ContentSummaryResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a6e659737af4948ca34e4a85c040fbe0d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
  fullName: ServiceCall<ContentSummaryResult> com.microsoft.azure.management.datalake.store.FileSystems.getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the file content summary object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceCall< ContentSummaryResult > getContentSummaryAsync(String accountName, String getContentSummaryFilePath, final ServiceCallback< ContentSummaryResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getContentSummaryFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file for which to retrieve the summary. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._content_summary_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._file_status_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._file_status_result.yml
  name: FileStatusResult
  fullName: com.microsoft.azure.management.datalake.store.models.FileStatusResult
  type: Class
  summary: <p>Data Lake Store filesystem file status information response. </p>
  syntax:
    content: public class FileStatusResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a58361d379e3e45c17b459b20998aedfe
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getFileStatus(String accountName, String getFilePath)
  fullName: ServiceResponse<FileStatusResult> com.microsoft.azure.management.datalake.store.FileSystems.getFileStatus(String accountName, String getFilePath)
  type: Method
  summary: >-
    <p>Get the file status object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileStatusResult > getFileStatus(String accountName, String getFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the FileStatusResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1aec6880c16f2811d7e4613a1be5654a3a
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
  fullName: ServiceCall<FileStatusResult> com.microsoft.azure.management.datalake.store.FileSystems.getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
  type: Method
  summary: >-
    <p>Get the file status object specified by the file path.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileStatusResult > getFileStatusAsync(String accountName, String getFilePath, final ServiceCallback< FileStatusResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: getFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_status_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a505b2305101f3b0f93915f0d420fcf11
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: append(String accountName, String directFilePath, byte[] streamContents)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.append(String accountName, String directFilePath, byte[] streamContents)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > append(String accountName, String directFilePath, byte[] streamContents)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a12b64b42e8f8a14425a0161653ba5522
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > appendAsync(String accountName, String directFilePath, byte[] streamContents, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afa7a41c79ff049ed111c9094279b8de3
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: append(String accountName, String directFilePath, byte[] streamContents, Long offset)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.append(String accountName, String directFilePath, byte[] streamContents, Long offset)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > append(String accountName, String directFilePath, byte[] streamContents, Long offset)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: offset
      type: 34f09483
      description: <p>The optional offset in the stream to begin the append operation. Default is to append at the end of the stream. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1abe9570eac5f522284af6a6b57314b051
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > appendAsync(String accountName, String directFilePath, byte[] streamContents, Long offset, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to which to append. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when appending to the file. </p>
    - id: offset
      type: 34f09483
      description: <p>The optional offset in the stream to begin the append operation. Default is to append at the end of the stream. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a00ae858959be633c6fad025ca8c54684
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: create(String accountName, String directFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.create(String accountName, String directFilePath)
  type: Method
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > create(String accountName, String directFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1aaf6435ab4078246a737167c703555062
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > createAsync(String accountName, String directFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab389c244937381d800cc178cda88f883
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
  type: Method
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > create(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified. </p>
    - id: overwrite
      type: 866c2227
      description: <p>The indication of if the file should be overwritten. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1aed4e4a5f362288aa52b327beb58cea25
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Creates a file with optionally specified content.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > createAsync(String accountName, String directFilePath, byte[] streamContents, Boolean overwrite, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to create. </p>
    - id: streamContents
      type: bc819c2f
      description: <p>The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified. </p>
    - id: overwrite
      type: 866c2227
      description: <p>The indication of if the file should be overwritten. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a9cc248173da8ce753a1e11cfddba9491
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: open(String accountName, String directFilePath)
  fullName: ServiceResponse<InputStream> com.microsoft.azure.management.datalake.store.FileSystems.open(String accountName, String directFilePath)
  type: Method
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< InputStream > open(String accountName, String directFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    return:
      type: com.microsoft.rest._service_response7f11b53f
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ad799332a46937a2d5e8ac4fbf075a02d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.management.datalake.store.FileSystems.openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > openAsync(String accountName, String directFilePath, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ad4a3f3461d62e71d37c192119abb0731
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: open(String accountName, String directFilePath, Long length, Long offset)
  fullName: ServiceResponse<InputStream> com.microsoft.azure.management.datalake.store.FileSystems.open(String accountName, String directFilePath, Long length, Long offset)
  type: Method
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< InputStream > open(String accountName, String directFilePath, Long length, Long offset)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: length
      type: 34f09483
      description: <p>the Long value </p>
    - id: offset
      type: 34f09483
      description: <p>the Long value </p>
    return:
      type: com.microsoft.rest._service_response7f11b53f
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ae40262efabba50518ff4b378d876ccab
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.management.datalake.store.FileSystems.openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Opens and reads from the specified file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > openAsync(String accountName, String directFilePath, Long length, Long offset, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: directFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file to open. </p>
    - id: length
      type: 34f09483
      description: <p>the Long value </p>
    - id: offset
      type: 34f09483
      description: <p>the Long value </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1abd623f8c8101afe72da2ed57ef78f712
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setAcl(String accountName, String setAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setAcl(String accountName, String setAclFilePath, String aclspec)
  type: Method
  summary: >-
    <p>Sets the Access Control List (ACL) for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setAcl(String accountName, String setAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afb5e699e5d2473b985fe20292fd0d553
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the Access Control List (ACL) for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setAclAsync(String accountName, String setAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab6b49512029c3d07367d3e3006d10ff8
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
  type: Method
  summary: >-
    <p>Modifies existing Access Control List (ACL) entries on a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > modifyAclEntries(String accountName, String modifyAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: modifyAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a8628f1148d23d3660be36332d618466f
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Modifies existing Access Control List (ACL) entries on a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > modifyAclEntriesAsync(String accountName, String modifyAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: modifyAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ae5401218faa7a67dc558b60b8fe01fbd
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
  type: Method
  summary: >-
    <p>Removes existing Access Control List (ACL) entries for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > removeAclEntries(String accountName, String removeAclFilePath, String aclspec)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: removeAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL removal operations in the format '[default:]user|group|other' </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1aaf82daf675e894eb261dc6ec39b4530c
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Removes existing Access Control List (ACL) entries for a file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > removeAclEntriesAsync(String accountName, String removeAclFilePath, String aclspec, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: removeAclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed. </p>
    - id: aclspec
      type: "26831127"
      description: <p>The ACL spec included in ACL removal operations in the format '[default:]user|group|other' </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store.models._acl_status_result
  parent: com.microsoft.azure.management.datalake.store.models
  href: com.microsoft.azure.management.datalake.store.models._acl_status_result.yml
  name: AclStatusResult
  fullName: com.microsoft.azure.management.datalake.store.models.AclStatusResult
  type: Class
  summary: <p>Data Lake Store file or directory Access Control List information. </p>
  syntax:
    content: public class AclStatusResult
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a1fcae5b2a1d57fd262cd04fd8e9d3d97
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getAclStatus(String accountName, String aclFilePath)
  fullName: ServiceResponse<AclStatusResult> com.microsoft.azure.management.datalake.store.FileSystems.getAclStatus(String accountName, String aclFilePath)
  type: Method
  summary: >-
    <p>Gets Access Control List (ACL) entries for the specified file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< AclStatusResult > getAclStatus(String accountName, String aclFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: aclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the AclStatusResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a7f6e93534d5b968ad1f25bb4307dc5ea
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
  fullName: ServiceCall<AclStatusResult> com.microsoft.azure.management.datalake.store.FileSystems.getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
  type: Method
  summary: >-
    <p>Gets Access Control List (ACL) entries for the specified file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< AclStatusResult > getAclStatusAsync(String accountName, String aclFilePath, final ServiceCallback< AclStatusResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: aclFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._acl_status_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a080115afb3d8fa9b949893f36af9ab43
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: delete(String accountName, String filePath)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.delete(String accountName, String filePath)
  type: Method
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > delete(String accountName, String filePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a8a2c20571205f223f841504a6d0110de
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileOperationResult > deleteAsync(String accountName, String filePath, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1afa95b8d5e195652e8e053fbcebe1065b
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: delete(String accountName, String filePath, Boolean recursive)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.delete(String accountName, String filePath, Boolean recursive)
  type: Method
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > delete(String accountName, String filePath, Boolean recursive)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>The optional switch indicating if the delete should be recursive </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a22860108508696c1c7b931705ad12d45
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the requested file or directory, optionally recursively.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileOperationResult > deleteAsync(String accountName, String filePath, Boolean recursive, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: filePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>The optional switch indicating if the delete should be recursive </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a17d8fc0492d723efd2e4f770490f7fe2
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: rename(String accountName, String renameFilePath, String destination)
  fullName: ServiceResponse<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.rename(String accountName, String renameFilePath, String destination)
  type: Method
  summary: >-
    <p>Rename a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< FileOperationResult > rename(String accountName, String renameFilePath, String destination)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: renameFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to move/rename. </p>
    - id: destination
      type: "26831127"
      description: <p>The path to move/rename the file or folder to </p>
    return:
      type: com.microsoft.rest._service_response151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the FileOperationResult object wrapped in <ref refid="" kindref="compound">ServiceResponse</ref> if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ac2684978af9dafb8aa56065528818d1f
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
  fullName: ServiceCall<FileOperationResult> com.microsoft.azure.management.datalake.store.FileSystems.renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
  type: Method
  summary: >-
    <p>Rename a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< FileOperationResult > renameAsync(String accountName, String renameFilePath, String destination, final ServiceCallback< FileOperationResult > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: renameFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory to move/rename. </p>
    - id: destination
      type: "26831127"
      description: <p>The path to move/rename the file or folder to </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call151dc42ccom.microsoft.azure.management.datalake.store.models._file_operation_result9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a71b5d0936a0b37266dbffa7ab5bd8f0d
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setOwner(String accountName, String setOwnerFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setOwner(String accountName, String setOwnerFilePath)
  type: Method
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setOwner(String accountName, String setOwnerFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a1f1b6f47010bca7d088adf5777a8c86c
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setOwnerAsync(String accountName, String setOwnerFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ac93ea0f8d245c2ea67b9ea942d5c0123
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setOwner(String accountName, String setOwnerFilePath, String owner, String group)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setOwner(String accountName, String setOwnerFilePath, String owner, String group)
  type: Method
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setOwner(String accountName, String setOwnerFilePath, String owner, String group)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: owner
      type: "26831127"
      description: <p>The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: group
      type: "26831127"
      description: <p>The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1aee4d0d091d2a0b7e323e47b5f9e0dd32
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the owner of a file or directory.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setOwnerAsync(String accountName, String setOwnerFilePath, String owner, String group, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setOwnerFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the owner. </p>
    - id: owner
      type: "26831127"
      description: <p>The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: group
      type: "26831127"
      description: <p>The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ac7ebecb4f77d62f401ce47cd42be195e
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setPermission(String accountName, String setPermissionFilePath)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setPermission(String accountName, String setPermissionFilePath)
  type: Method
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setPermission(String accountName, String setPermissionFilePath)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a09de8c4b1f34886a330dd8e98c24f063
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setPermissionAsync(String accountName, String setPermissionFilePath, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1a471a34b649b697482f8e3add7fd661b2
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setPermission(String accountName, String setPermissionFilePath, String permission)
  fullName: ServiceResponse<Void> com.microsoft.azure.management.datalake.store.FileSystems.setPermission(String accountName, String setPermissionFilePath, String permission)
  type: Method
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceResponse< Void > setPermission(String accountName, String setPermissionFilePath, String permission)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: permission
      type: "26831127"
      description: <p>A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged. </p>
    return:
      type: com.microsoft.rest._service_responsee35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceResponse</ref> object if successful. </p>
- uid: com.microsoft.azure.management.datalake.store._file_systems_1ab12a4869eeec7dcc03cf549712936846
  parent: com.microsoft.azure.management.datalake.store._file_systems
  href: com.microsoft.azure.management.datalake.store._file_systems.yml
  name: setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.management.datalake.store.FileSystems.setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Sets the permission of the file or folder.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > setPermissionAsync(String accountName, String setPermissionFilePath, String permission, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account to execute filesystem operations on. </p>
    - id: setPermissionFilePath
      type: "26831127"
      description: <p>The Data Lake Store path (starting with '/') of the file or directory for which to set the permission. </p>
    - id: permission
      type: "26831127"
      description: <p>A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
