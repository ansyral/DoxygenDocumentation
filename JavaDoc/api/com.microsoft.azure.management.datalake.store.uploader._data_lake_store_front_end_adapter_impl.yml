items:
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  id: _data_lake_store_front_end_adapter_impl
  parent: com.microsoft.azure.management.datalake.store.uploader
  children:
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1acf908ee241a7a567eadc166ef7185b92
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1a9dd15ee354a7bb7a0bbcb5bbe360b326
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1adbe3ace44b210ba33ca0f5b8b118246b
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1af2b80d83f45b384cafb3c28ce7447735
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1a74f032f3193e5effdf1d079b66cde415
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1a5a6c3ab4fbed077c3ecc925bca6e550a
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1a04137e35cfce6ad2537abc0fc3b7c030
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  langs:
  - java
  name: DataLakeStoreFrontEndAdapterImpl
  fullName: com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl
  type: Class
  source:
    remote: &o0
      path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
    startLine: 23
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: <p>A front end adapter that communicates with the DataLake Store. This is a syncrhonous call adapter, which has certain efficiency limitations. In the future, new adapters that are created should consider implementing the methods asynchronously. </p>
  syntax:
    content: public class DataLakeStoreFrontEndAdapterImpl
  inheritance:
  - com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1acf908ee241a7a567eadc166ef7185b92
  id: _data_lake_store_front_end_adapter_impl_1acf908ee241a7a567eadc166ef7185b92
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  langs:
  - java
  name: appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
    startLine: 83
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Appends to stream.</p>

    <p></p>
  syntax:
    content: public void appendToStream(String streamPath, byte[] data, long offset, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: data
      type: bc819c2f
      description: <p>The data to append to the stream </p>
    - id: offset
      type: 0364520f
      description: <p>This parameter is unused by this implementation, and any value put here is ignored </p>
    - id: byteCount
      type: f75371fa
      description: <p>The number of bytes from the data stream to append (starting at offset 0 of data). </p>
  overridden: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1a9ce0415d0e74ce3d6fbb66a9b1f5327c
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1a9dd15ee354a7bb7a0bbcb5bbe360b326
  id: _data_lake_store_front_end_adapter_impl_1a9dd15ee354a7bb7a0bbcb5bbe360b326
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  langs:
  - java
  name: concatenate(String targetStreamPath, String[] inputStreamPaths)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.concatenate(String targetStreamPath, String[] inputStreamPaths)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
    startLine: 133
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Concatenates the given input streams (in order) into the given target stream. At the end of this operation, input streams will be deleted.</p>

    <p></p>
  syntax:
    content: public void concatenate(String targetStreamPath, String[] inputStreamPaths)
    parameters:
    - id: targetStreamPath
      type: "26831127"
      description: <p>The relative path to the target stream. </p>
    - id: inputStreamPaths
      type: 30d59cf1
      description: <p>An ordered array of paths to the input streams to concatenate into the target stream. </p>
  overridden: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1ad2468325cf658d071116d95c9faf8099
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1adbe3ace44b210ba33ca0f5b8b118246b
  id: _data_lake_store_front_end_adapter_impl_1adbe3ace44b210ba33ca0f5b8b118246b
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  langs:
  - java
  name: createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
    startLine: 50
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Creates a new, empty stream at the given path.</p>

    <p></p>
  syntax:
    content: public void createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>Whether to overwrite an existing stream. </p>
    - id: data
      type: bc819c2f
      description: <p>Optionally pass in data to add to the stream during creation. If null is passed in an empty stream is created </p>
    - id: byteCount
      type: f75371fa
      description: <p>If data is passed in, indicates how many bytes of the data passed in should be pushed into the stream </p>
  overridden: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1ab8771533762c7df66172208a96efd9ed
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1af2b80d83f45b384cafb3c28ce7447735
  id: _data_lake_store_front_end_adapter_impl_1af2b80d83f45b384cafb3c28ce7447735
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  langs:
  - java
  name: DataLakeStoreFrontEndAdapterImpl(String accountName, DataLakeStoreFileSystemManagementClientImpl client)
  fullName: com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.DataLakeStoreFrontEndAdapterImpl(String accountName, DataLakeStoreFileSystemManagementClientImpl client)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
    startLine: 35
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Initializes a new instance of the DataLakeStoreFrontEndAdapter adapter.</p>

    <p></p>
  syntax:
    content: public DataLakeStoreFrontEndAdapterImpl(String accountName, DataLakeStoreFileSystemManagementClientImpl client)
    parameters:
    - id: accountName
      type: "26831127"
      description: <p>The Data Lake Store account name associated with this adapter </p>
    - id: client
      type: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c
      description: <p>the <ref refid="" kindref="compound">DataLakeStoreFileSystemManagementClientImpl</ref> used by this adapter </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1a74f032f3193e5effdf1d079b66cde415
  id: _data_lake_store_front_end_adapter_impl_1a74f032f3193e5effdf1d079b66cde415
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  langs:
  - java
  name: deleteStream(String streamPath, boolean recurse)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.deleteStream(String streamPath, boolean recurse)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
    startLine: 69
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Deletes an existing stream at the given path.</p>

    <p></p>
  syntax:
    content: public void deleteStream(String streamPath, boolean recurse)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: recurse
      type: 4fc6e284
      description: <p>if set to true recursively delete. This is used for folder streams only. </p>
  overridden: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1ac0fb5d67c44b9ceba06f59625cffb38e
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1a5a6c3ab4fbed077c3ecc925bca6e550a
  id: _data_lake_store_front_end_adapter_impl_1a5a6c3ab4fbed077c3ecc925bca6e550a
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  langs:
  - java
  name: getStreamLength(String streamPath)
  fullName: long com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.getStreamLength(String streamPath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
    startLine: 119
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the length of a stream, in bytes.</p>

    <p></p>
  syntax:
    content: public long getStreamLength(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 0364520f
      description: <p>The length of the stream, in bytes. </p>
  overridden: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1a31b19ae3b0c0f9c201d9694804c5cc51
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl_1a04137e35cfce6ad2537abc0fc3b7c030
  id: _data_lake_store_front_end_adapter_impl_1a04137e35cfce6ad2537abc0fc3b7c030
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  langs:
  - java
  name: streamExists(String streamPath)
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.streamExists(String streamPath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/DataLakeStoreFrontEndAdapterImpl.java
    startLine: 97
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Determines if the stream with given path exists.</p>

    <p></p>
  syntax:
    content: public boolean streamExists(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 4fc6e284
      description: <p>True if the stream exists, false otherwise. </p>
  overridden: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1ac8b696fea86daf2e098af72fdcda0121
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: bc819c2f
  spec.java:
  - name: byte[]
    fullName: byte[]
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 30d59cf1
  spec.java:
  - name: String[]
    fullName: String[]
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  name: FrontEndAdapter
  fullName: com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter
  type: Interface
  summary: <p>The frontend adapter that must be implemented in order to execute using the multipart uploader. By implementing this contract, the multi-part uploader will execute. </p>
  syntax:
    content: public interface FrontEndAdapter
- uid: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c
  parent: com.microsoft.azure.management.datalake.store.implementation
  href: com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c.yml
  name: DataLakeStoreFileSystemManagementClientImpl
  fullName: com.microsoft.azure.management.datalake.store.implementation.DataLakeStoreFileSystemManagementClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.management.datalake.store.implementation._data_lak9b46a3ddf302c002d128667e4b33a32c" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class DataLakeStoreFileSystemManagementClientImpl
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1ab8771533762c7df66172208a96efd9ed
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  name: createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  type: Method
  summary: >-
    <p>Creates a new, empty stream at the given path.</p>

    <p></p>
  syntax:
    content: public void createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>Whether to overwrite an existing stream. </p>
    - id: data
      type: bc819c2f
      description: <p>The data to include in the stream during creation. </p>
    - id: byteCount
      type: f75371fa
      description: <p>The number of bytes from data to include (starting at 0). </p>
- uid: com.microsoft.rest._rest_exception
  parent: com.microsoft.rest
  href: com.microsoft.rest._rest_exception.yml
  name: RestException
  fullName: com.microsoft.rest.RestException
  type: Class
  summary: <p>Exception thrown for an invalid response with custom error information. </p>
  syntax:
    content: public class RestException
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1ac0fb5d67c44b9ceba06f59625cffb38e
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  name: deleteStream(String streamPath, boolean recurse)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.deleteStream(String streamPath, boolean recurse)
  type: Method
  summary: >-
    <p>Deletes an existing stream at the given path.</p>

    <p></p>
  syntax:
    content: public void deleteStream(String streamPath, boolean recurse)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: recurse
      type: 4fc6e284
      description: <p>if set to true recursively delete. This is used for folder streams only. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1a9ce0415d0e74ce3d6fbb66a9b1f5327c
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  name: appendToStream(String streamPath, byte[] data, long offset, int length)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.appendToStream(String streamPath, byte[] data, long offset, int length)
  type: Method
  summary: >-
    <p>Appends the given byte array to the end of a given stream.</p>

    <p></p>
  syntax:
    content: public void appendToStream(String streamPath, byte[] data, long offset, int length)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: data
      type: bc819c2f
      description: <p>An array of bytes to be appended to the stream. </p>
    - id: offset
      type: 0364520f
      description: <p>The offset at which to append to the stream. </p>
    - id: length
      type: f75371fa
      description: <p>The number of bytes to append (starting at 0). </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1ac8b696fea86daf2e098af72fdcda0121
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  name: streamExists(String streamPath)
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.streamExists(String streamPath)
  type: Method
  summary: >-
    <p>Determines if the stream with given path exists.</p>

    <p></p>
  syntax:
    content: public boolean streamExists(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 4fc6e284
      description: <p>True if the stream exists, false otherwise. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1a31b19ae3b0c0f9c201d9694804c5cc51
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  name: getStreamLength(String streamPath)
  fullName: long com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.getStreamLength(String streamPath)
  type: Method
  summary: >-
    <p>Gets a value indicating the length of a stream, in bytes.</p>

    <p></p>
  syntax:
    content: public long getStreamLength(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 0364520f
      description: <p>The length of the stream, in bytes. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter_1ad2468325cf658d071116d95c9faf8099
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  name: concatenate(String targetStreamPath, String[] inputStreamPaths)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.concatenate(String targetStreamPath, String[] inputStreamPaths)
  type: Method
  summary: >-
    <p>Concatenates the given input streams (in order) into the given target stream. At the end of this operation, input streams will be deleted.</p>

    <p></p>
  syntax:
    content: public void concatenate(String targetStreamPath, String[] inputStreamPaths)
    parameters:
    - id: targetStreamPath
      type: "26831127"
      description: <p>The relative path to the target stream. </p>
    - id: inputStreamPaths
      type: 30d59cf1
      description: <p>An ordered array of paths to the input streams. </p>
