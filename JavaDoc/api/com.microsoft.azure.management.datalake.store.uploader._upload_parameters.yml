items:
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  id: _upload_parameters
  parent: com.microsoft.azure.management.datalake.store.uploader
  children:
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getAccountName()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getDelimiter()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getFileEncoding()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getInputFilePath()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getLocalMetadataLocation()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getMaxSegementLength()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getTargetStreamPath()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getThreadCount()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.isBinary()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.isOverwrite()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.isResume()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.isUseSegmentBlockBackOffRetryStrategy()
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.setThreadCount(int)
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String)
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String,boolean,int,boolean,boolean,boolean,long,String)
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String,int,boolean,boolean)
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String,int,boolean,boolean,boolean,long,String)
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String,int,boolean,boolean,String)
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: UploadParameters
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadParameters
  type: Class
  source:
    remote: &o0
      path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 15
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: <p>Represents parameters for the DataLake Uploader. </p>
  syntax:
    content: public class UploadParameters
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getAccountName()
  id: getAccountName()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: getAccountName()
  fullName: String com.microsoft.azure.management.datalake.store.uploader.UploadParameters.getAccountName()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 190
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the name of the account to upload to.</p>

    <p></p>
  syntax:
    content: public String getAccountName()
    return:
      type: "26831127"
      description: <p>The name of the account. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getDelimiter()
  id: getDelimiter()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: getDelimiter()
  fullName: String com.microsoft.azure.management.datalake.store.uploader.UploadParameters.getDelimiter()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 334
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the record boundary delimiter for the file, if any.</p>

    <p></p>
  syntax:
    content: public String getDelimiter()
    return:
      type: "26831127"
      description: <p>The record boundary delimiter </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getFileEncoding()
  id: getFileEncoding()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: getFileEncoding()
  fullName: Charset com.microsoft.azure.management.datalake.store.uploader.UploadParameters.getFileEncoding()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 316
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the encoding of the file being uploaded.</p>

    <p></p>
  syntax:
    content: public Charset getFileEncoding()
    return:
      type: 05c094f5
      description: <p>The file encoding. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getInputFilePath()
  id: getInputFilePath()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: getInputFilePath()
  fullName: String com.microsoft.azure.management.datalake.store.uploader.UploadParameters.getInputFilePath()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 154
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the full path to the file to be uploaded.</p>

    <p></p>
  syntax:
    content: public String getInputFilePath()
    return:
      type: "26831127"
      description: <p>The input file path. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getLocalMetadataLocation()
  id: getLocalMetadataLocation()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: getLocalMetadataLocation()
  fullName: String com.microsoft.azure.management.datalake.store.uploader.UploadParameters.getLocalMetadataLocation()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 298
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the directory path where to store the metadata for the upload.</p>

    <p></p>
  syntax:
    content: public String getLocalMetadataLocation()
    return:
      type: "26831127"
      description: <p>The local metadata location. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getMaxSegementLength()
  id: getMaxSegementLength()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: getMaxSegementLength()
  fullName: long com.microsoft.azure.management.datalake.store.uploader.UploadParameters.getMaxSegementLength()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 280
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets the maximum length of each segement in bytes.</p>

    <p></p>
  syntax:
    content: public long getMaxSegementLength()
    return:
      type: 0364520f
      description: <p>The maximum length of each segment in bytes. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getTargetStreamPath()
  id: getTargetStreamPath()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: getTargetStreamPath()
  fullName: String com.microsoft.azure.management.datalake.store.uploader.UploadParameters.getTargetStreamPath()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 172
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the full stream path where the file will be uploaded to.</p>

    <p></p>
  syntax:
    content: public String getTargetStreamPath()
    return:
      type: "26831127"
      description: <p>The target stream path. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.getThreadCount()
  id: getThreadCount()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: getThreadCount()
  fullName: int com.microsoft.azure.management.datalake.store.uploader.UploadParameters.getThreadCount()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 208
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the maximum number of parallel threads to use for the upload.</p>

    <p></p>
  syntax:
    content: public int getThreadCount()
    return:
      type: f75371fa
      description: <p>The thread count. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.isBinary()
  id: isBinary()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: isBinary()
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.UploadParameters.isBinary()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 262
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating whether the input file should be treated as a binary (true) or a delimited input (false).</p>

    <p></p>
  syntax:
    content: public boolean isBinary()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this instance is binary; otherwise, <code>false</code>. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.isOverwrite()
  id: isOverwrite()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: isOverwrite()
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.UploadParameters.isOverwrite()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 226
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating whether to overwrite the target stream if it already exists.</p>

    <p></p>
  syntax:
    content: public boolean isOverwrite()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this instance is overwrite; otherwise, <code>false</code>. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.isResume()
  id: isResume()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: isResume()
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.UploadParameters.isResume()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 244
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating whether to resume a previously interrupted upload.</p>

    <p></p>
  syntax:
    content: public boolean isResume()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this instance is resume; otherwise, <code>false</code>. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.isUseSegmentBlockBackOffRetryStrategy()
  id: isUseSegmentBlockBackOffRetryStrategy()
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: isUseSegmentBlockBackOffRetryStrategy()
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.UploadParameters.isUseSegmentBlockBackOffRetryStrategy()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 136
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating whether [to use segment block back off retry strategy].</p>

    <p></p>
  syntax:
    content: public boolean isUseSegmentBlockBackOffRetryStrategy()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if [to use segment block back off retry strategy]; otherwise, <code>false</code>. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.setThreadCount(int)
  id: setThreadCount(int)
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: setThreadCount(int threadCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.UploadParameters.setThreadCount(int threadCount)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 217
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Internally sets the number of threads that are allowed for the upload.</p>

    <p></p>
  syntax:
    content: protected void setThreadCount(int threadCount)
    parameters:
    - id: threadCount
      type: f75371fa
      description: <p>The number of threads to use for the upload. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String)
  id: UploadParameters(String,String,String)
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: UploadParameters(String inputFilePath, String targetStreamPath, String accountName)
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadParameters.UploadParameters(String inputFilePath, String targetStreamPath, String accountName)
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 36
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Creates a new set of parameters for the DataLake Uploader with optional values set with their defaults. Defaults are as follows: threadCount = 1 isOverwrite = false isResume = false isBinary = true maxSegmentLength = 256mb localMetadataLocation = File.createTempFile()</p>

    <p></p>
  syntax:
    content: public UploadParameters(String inputFilePath, String targetStreamPath, String accountName)
    parameters:
    - id: inputFilePath
      type: "26831127"
      description: <p>The full path to the file to be uploaded. </p>
    - id: targetStreamPath
      type: "26831127"
      description: <p>The full stream path where the file will be uploaded to. </p>
    - id: accountName
      type: "26831127"
      description: <p>Name of the account to upload to. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String,boolean,int,boolean,boolean,boolean,long,String)
  id: UploadParameters(String,String,String,boolean,int,boolean,boolean,boolean,long,String)
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: UploadParameters(String inputFilePath, String targetStreamPath, String accountName, boolean useSegmentBlockBackOffRetryStrategy, int threadCount, boolean isOverwrite, boolean isResume, boolean isBinary, long maxSegmentLength, String localMetadataLocation)
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadParameters.UploadParameters(String inputFilePath, String targetStreamPath, String accountName, boolean useSegmentBlockBackOffRetryStrategy, int threadCount, boolean isOverwrite, boolean isResume, boolean isBinary, long maxSegmentLength, String localMetadataLocation)
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 126
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Creates a new set of parameters for the DataLake Uploader used for unit testing.</p>

    <p></p>
  syntax:
    content: protected UploadParameters(String inputFilePath, String targetStreamPath, String accountName, boolean useSegmentBlockBackOffRetryStrategy, int threadCount, boolean isOverwrite, boolean isResume, boolean isBinary, long maxSegmentLength, String localMetadataLocation)
    parameters:
    - id: inputFilePath
      type: "26831127"
      description: <p>The full path to the file to be uploaded. </p>
    - id: targetStreamPath
      type: "26831127"
      description: <p>The full stream path where the file will be uploaded to. </p>
    - id: accountName
      type: "26831127"
      description: <p>Name of the account to upload to. </p>
    - id: useSegmentBlockBackOffRetryStrategy
      type: 4fc6e284
      description: <p>if set to <code>true</code> [use segment block back off retry strategy]. </p>
    - id: threadCount
      type: f75371fa
      description: <p>The maximum number of parallel threads to use for the upload. </p>
    - id: isOverwrite
      type: 4fc6e284
      description: <p>Whether to overwrite the target stream or not. </p>
    - id: isResume
      type: 4fc6e284
      description: <p>Indicates whether to resume a previously interrupted upload. </p>
    - id: isBinary
      type: 4fc6e284
      description: <p>Indicates whether to treat the input file as a binary file (true), or whether to align upload blocks to record boundaries (false). </p>
    - id: maxSegmentLength
      type: 0364520f
      description: <p>The recommended value is 256mb, which gives optimal performance. Modify at your own risk. </p>
    - id: localMetadataLocation
      type: "26831127"
      description: '<p>Indicates the directory path where to store the local upload metadata file while the upload is in progress. This location must be writeable from this application. Default location if null: File.createTempFile() </p>'
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String,int,boolean,boolean)
  id: UploadParameters(String,String,String,int,boolean,boolean)
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume)
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadParameters.UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume)
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 54
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Creates a new set of parameters for the DataLake Uploader with the following optional values set with their defaults. Defaults are as follows: isBinary = true maxSegmentLength = 256mb localMetadataLocation = File.createTempFile().</p>

    <p></p>
  syntax:
    content: public UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume)
    parameters:
    - id: inputFilePath
      type: "26831127"
      description: <p>The full path to the file to be uploaded. </p>
    - id: targetStreamPath
      type: "26831127"
      description: <p>The full stream path where the file will be uploaded to. </p>
    - id: accountName
      type: "26831127"
      description: <p>Name of the account to upload to. </p>
    - id: threadCount
      type: f75371fa
      description: <p>The maximum number of parallel threads to use for the upload. </p>
    - id: isOverwrite
      type: 4fc6e284
      description: <p>Whether to overwrite the target stream or not. </p>
    - id: isResume
      type: 4fc6e284
      description: <p>Indicates whether to resume a previously interrupted upload. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String,int,boolean,boolean,boolean,long,String)
  id: UploadParameters(String,String,String,int,boolean,boolean,boolean,long,String)
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume, boolean isBinary, long maxSegmentLength, String localMetadataLocation)
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadParameters.UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume, boolean isBinary, long maxSegmentLength, String localMetadataLocation)
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 89
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Creates a new set of parameters for the DataLake Uploader.</p>

    <p></p>
  syntax:
    content: public UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume, boolean isBinary, long maxSegmentLength, String localMetadataLocation)
    parameters:
    - id: inputFilePath
      type: "26831127"
      description: <p>The full path to the file to be uploaded. </p>
    - id: targetStreamPath
      type: "26831127"
      description: <p>The full stream path where the file will be uploaded to. </p>
    - id: accountName
      type: "26831127"
      description: <p>Name of the account to upload to. </p>
    - id: threadCount
      type: f75371fa
      description: <p>The maximum number of parallel threads to use for the upload. </p>
    - id: isOverwrite
      type: 4fc6e284
      description: <p>Whether to overwrite the target stream or not. </p>
    - id: isResume
      type: 4fc6e284
      description: <p>Indicates whether to resume a previously interrupted upload. </p>
    - id: isBinary
      type: 4fc6e284
      description: <p>Indicates whether to treat the input file as a binary file (true), or whether to align upload blocks to record boundaries (false). </p>
    - id: maxSegmentLength
      type: 0364520f
      description: <p>The recommended value is 256mb, which gives optimal performance. Modify at your own risk. </p>
    - id: localMetadataLocation
      type: "26831127"
      description: '<p>Indicates the directory path where to store the local upload metadata file while the upload is in progress. This location must be writeable from this application. Default location if null: File.createTempFile() </p>'
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.UploadParameters(String,String,String,int,boolean,boolean,String)
  id: UploadParameters(String,String,String,int,boolean,boolean,String)
  parent: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  langs:
  - java
  name: UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume, String localMetadataLocation)
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadParameters.UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume, String localMetadataLocation)
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/UploadParameters.java
    startLine: 72
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Creates a new set of parameters for the DataLake Uploader with the following optional values set with their defaults. Defaults are as follows: isBinary = true maxSegmentLength = 256mb</p>

    <p></p>
  syntax:
    content: public UploadParameters(String inputFilePath, String targetStreamPath, String accountName, int threadCount, boolean isOverwrite, boolean isResume, String localMetadataLocation)
    parameters:
    - id: inputFilePath
      type: "26831127"
      description: <p>The full path to the file to be uploaded. </p>
    - id: targetStreamPath
      type: "26831127"
      description: <p>The full stream path where the file will be uploaded to. </p>
    - id: accountName
      type: "26831127"
      description: <p>Name of the account to upload to. </p>
    - id: threadCount
      type: f75371fa
      description: <p>The maximum number of parallel threads to use for the upload. </p>
    - id: isOverwrite
      type: 4fc6e284
      description: <p>Whether to overwrite the target stream or not. </p>
    - id: isResume
      type: 4fc6e284
      description: <p>Indicates whether to resume a previously interrupted upload. </p>
    - id: localMetadataLocation
      type: "26831127"
      description: '<p>Indicates the directory path where to store the local upload metadata file while the upload is in progress. This location must be writeable from this application. Default location if null: File.createTempFile() </p>'
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 05c094f5
  spec.java:
  - name: Charset
    fullName: Charset
