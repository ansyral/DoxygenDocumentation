items:
- uid: com.microsoft.azure.management.datalake.store.uploader
  id: uploader
  children:
  - com.microsoft.azure.management.datalake.store.uploader._aggregate_upload_exception
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_store_uploader
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_uploader_test_base
  - com.microsoft.azure.management.datalake.store.uploader._data_lake_uploader_tests
  - com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  - com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  - com.microsoft.azure.management.datalake.store.uploader._intentional_exception
  - com.microsoft.azure.management.datalake.store.uploader._invalid_metadata_exception
  - com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  - com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader
  - com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader_tests
  - com.microsoft.azure.management.datalake.store.uploader._performance_upload_tests
  - com.microsoft.azure.management.datalake.store.uploader._segment_upload_status
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  - com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  - com.microsoft.azure.management.datalake.store.uploader._string_extensions
  - com.microsoft.azure.management.datalake.store.uploader._string_extensions_tests
  - com.microsoft.azure.management.datalake.store.uploader._test_helpers
  - com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  - com.microsoft.azure.management.datalake.store.uploader._upload_failed_exception
  - com.microsoft.azure.management.datalake.store.uploader._upload_metadata
  - com.microsoft.azure.management.datalake.store.uploader._upload_metadata_generator
  - com.microsoft.azure.management.datalake.store.uploader._upload_metadata_generator_tests
  - com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  - com.microsoft.azure.management.datalake.store.uploader._upload_segment_metadata
  - com.microsoft.azure.management.datalake.store.uploader._upload_segment_metadata_tests
  - com.microsoft.azure.management.datalake.store.uploader._multiple_segme1d24fab060563b51290725d8c0f15581
  - com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end._stream_data
  href: com.microsoft.azure.management.datalake.store.uploader.yml
  langs:
  - java
  name: com.microsoft.azure.management.datalake.store.uploader
  fullName: com.microsoft.azure.management.datalake.store.uploader
  type: Namespace
  source:
    remote:
      path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/AggregateUploadException.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/AggregateUploadException.java
    startLine: 5
  summary: >-
    <p>Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See License.txt in the project root for license information.</p>

    <p>This package contains the classes for <xref href="com.microsoft.azure.management.datalake.store.uploader._data_lake_store_uploader" data-throw-if-not-resolved="false"></xref>. The client used to efficiently and rapidly upload files into an <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Data Lake Store account. </p>
  syntax:
    content: namespace uploader
references:
- uid: com.microsoft.azure.management.datalake.store.uploader._aggregate_upload_exception
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._aggregate_upload_exception.yml
  name: AggregateUploadException
  fullName: com.microsoft.azure.management.datalake.store.uploader.AggregateUploadException
  type: Class
  summary: <p>A wrapper for the exceptions that can be generated during parallel execution of the uploader. </p>
  syntax:
    content: public class AggregateUploadException
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  name: DataLakeStoreFrontEndAdapterImpl
  fullName: com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl
  type: Class
  summary: <p>A front end adapter that communicates with the DataLake Store. This is a syncrhonous call adapter, which has certain efficiency limitations. In the future, new adapters that are created should consider implementing the methods asynchronously. </p>
  syntax:
    content: public class DataLakeStoreFrontEndAdapterImpl
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_uploader
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_uploader.yml
  name: DataLakeStoreUploader
  fullName: com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreUploader
  type: Class
  summary: <p>Represents a general purpose file uploader into DataLake. Supports the efficient upload of large files. </p>
  syntax:
    content: public class DataLakeStoreUploader
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_uploader_test_base
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_uploader_test_base.yml
  name: DataLakeUploaderTestBase
  fullName: com.microsoft.azure.management.datalake.store.uploader.DataLakeUploaderTestBase
  type: Class
  syntax:
    content: public class DataLakeUploaderTestBase
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_uploader_tests
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_uploader_tests.yml
  name: DataLakeUploaderTests
  fullName: com.microsoft.azure.management.datalake.store.uploader.DataLakeUploaderTests
  type: Class
  summary: <p>Unit tests for the uploader. </p>
  syntax:
    content: public class DataLakeUploaderTests
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  name: FrontEndAdapter
  fullName: com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter
  type: Interface
  summary: <p>The frontend adapter that must be implemented in order to execute using the multipart uploader. By implementing this contract, the multi-part uploader will execute. </p>
  syntax:
    content: public interface FrontEndAdapter
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.yml
  name: InMemoryFrontEnd
  fullName: com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd
  type: Class
  summary: <p>Test front-end, fully in-memory. </p>
  syntax:
    content: public class InMemoryFrontEnd
- uid: com.microsoft.azure.management.datalake.store.uploader._intentional_exception
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._intentional_exception.yml
  name: IntentionalException
  fullName: com.microsoft.azure.management.datalake.store.uploader.IntentionalException
  type: Class
  summary: <p>An exception that we want our mocks to throw sometimes to test out various code paths. </p>
  syntax:
    content: public class IntentionalException
- uid: com.microsoft.azure.management.datalake.store.uploader._invalid_metadata_exception
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._invalid_metadata_exception.yml
  name: InvalidMetadataException
  fullName: com.microsoft.azure.management.datalake.store.uploader.InvalidMetadataException
  type: Class
  summary: <p>Represents an exception that is thrown when the local metadata is invalid or inconsistent. </p>
  syntax:
    content: public class InvalidMetadataException
- uid: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.yml
  name: MsuMockFrontEnd
  fullName: com.microsoft.azure.management.datalake.store.uploader.MsuMockFrontEnd
  type: Class
  summary: <p>A mocked front end for testing out the code paths of the <xref href="com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class MsuMockFrontEnd
- uid: com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader.yml
  name: MultipleSegmentUploader
  fullName: com.microsoft.azure.management.datalake.store.uploader.MultipleSegmentUploader
  type: Class
  summary: <p>Uploads a local file in parallel by splitting it into several segments, according to the given metadata. </p>
  syntax:
    content: public class MultipleSegmentUploader
- uid: com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader_tests
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader_tests.yml
  name: MultipleSegmentUploaderTests
  fullName: com.microsoft.azure.management.datalake.store.uploader.MultipleSegmentUploaderTests
  type: Class
  summary: <p>Represents a class of unit tests targeting the <xref href="com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class MultipleSegmentUploaderTests
- uid: com.microsoft.azure.management.datalake.store.uploader._performance_upload_tests
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._performance_upload_tests.yml
  name: PerformanceUploadTests
  fullName: com.microsoft.azure.management.datalake.store.uploader.PerformanceUploadTests
  type: Class
  syntax:
    content: public class PerformanceUploadTests
- uid: com.microsoft.azure.management.datalake.store.uploader._segment_upload_status
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._segment_upload_status.yml
  name: SegmentUploadStatus
  fullName: com.microsoft.azure.management.datalake.store.uploader.SegmentUploadStatus
  type: Enum
  summary: <p>Defines various states that a segment upload can have. </p>
  syntax:
    content: public enum SegmentUploadStatus
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader.yml
  name: SingleSegmentUploader
  fullName: com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploader
  type: Class
  summary: <p>Represents an uploader for a single segment of a larger file. </p>
  syntax:
    content: public class SingleSegmentUploader
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  name: SingleSegmentUploaderTests
  fullName: com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests
  type: Class
  syntax:
    content: public class SingleSegmentUploaderTests
- uid: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.yml
  name: SsuMockFrontEnd
  fullName: com.microsoft.azure.management.datalake.store.uploader.SsuMockFrontEnd
  type: Class
  summary: <p>Represents a mocked front end for testing the <xref href="com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class SsuMockFrontEnd
- uid: com.microsoft.azure.management.datalake.store.uploader._string_extensions
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._string_extensions.yml
  name: StringExtensions
  fullName: com.microsoft.azure.management.datalake.store.uploader.StringExtensions
  type: Class
  summary: <p>A class of helpers to determine the location of record boundaries within byte arrays. </p>
  syntax:
    content: public class StringExtensions
- uid: com.microsoft.azure.management.datalake.store.uploader._string_extensions_tests
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._string_extensions_tests.yml
  name: StringExtensionsTests
  fullName: com.microsoft.azure.management.datalake.store.uploader.StringExtensionsTests
  type: Class
  syntax:
    content: public class StringExtensionsTests
- uid: com.microsoft.azure.management.datalake.store.uploader._test_helpers
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._test_helpers.yml
  name: TestHelpers
  fullName: com.microsoft.azure.management.datalake.store.uploader.TestHelpers
  type: Class
  syntax:
    content: public class TestHelpers
- uid: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.yml
  name: UploaderFrontEndMock
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploaderFrontEndMock
  type: Class
  summary: <p>A front end mock used for unit testing <xref href="com.microsoft.azure.management.datalake.store.uploader._data_lake_store_uploader" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class UploaderFrontEndMock
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_failed_exception
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._upload_failed_exception.yml
  name: UploadFailedException
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadFailedException
  type: Class
  summary: <p>Represents an exception that is thrown when an upload fails. </p>
  syntax:
    content: public class UploadFailedException
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_metadata
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._upload_metadata.yml
  name: UploadMetadata
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadMetadata
  type: Class
  summary: <p>Represents general metadata pertaining to an upload. </p>
  syntax:
    content: public class UploadMetadata
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_metadata_generator
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._upload_metadata_generator.yml
  name: UploadMetadataGenerator
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadMetadataGenerator
  type: Class
  summary: <p>An internally used class for generating the metadata used for upload. </p>
  syntax:
    content: public class UploadMetadataGenerator
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_metadata_generator_tests
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._upload_metadata_generator_tests.yml
  name: UploadMetadataGeneratorTests
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadMetadataGeneratorTests
  type: Class
  summary: <p>Unit tests that target the <xref href="com.microsoft.azure.management.datalake.store.uploader._upload_metadata_generator" data-throw-if-not-resolved="false"></xref> class </p>
  syntax:
    content: public class UploadMetadataGeneratorTests
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_parameters
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._upload_parameters.yml
  name: UploadParameters
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadParameters
  type: Class
  summary: <p>Represents parameters for the DataLake Uploader. </p>
  syntax:
    content: public class UploadParameters
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_segment_metadata
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._upload_segment_metadata.yml
  name: UploadSegmentMetadata
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadSegmentMetadata
  type: Class
  summary: <p>Represents metadata for a particular file segment. </p>
  syntax:
    content: public class UploadSegmentMetadata
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_segment_metadata_tests
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._upload_segment_metadata_tests.yml
  name: UploadSegmentMetadataTests
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadSegmentMetadataTests
  type: Class
  summary: <p>Unit tests that target the <xref href="com.microsoft.azure.management.datalake.store.uploader._upload_segment_metadata" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class UploadSegmentMetadataTests
- uid: com.microsoft.azure._azure
  parent: com.microsoft.azure
  href: com.microsoft.azure._azure.yml
  name: Azure
  fullName: com.microsoft.azure.Azure
  type: Class
  summary: <p>The entry point for accessing resource management APIs in <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class Azure
- uid: com.microsoft.azure.management.datalake.store.uploader._multiple_segme1d24fab060563b51290725d8c0f15581
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._multiple_segme1d24fab060563b51290725d8c0f15581.yml
  name: MultipleSegmentUploader.SegmentQueueItem
  fullName: com.microsoft.azure.management.datalake.store.uploader.MultipleSegmentUploader.SegmentQueueItem
  type: Class
  summary: <p>Represents a tuple that pairs a segment number with the number of times it was attempted for upload. </p>
  syntax:
    content: private class SegmentQueueItem
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end._stream_data
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end._stream_data.yml
  name: InMemoryFrontEnd.StreamData
  fullName: com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd.StreamData
  type: Class
  summary: <p>Represents stream data for unit testing purposes. </p>
  syntax:
    content: private class StreamData
