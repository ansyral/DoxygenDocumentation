items:
- uid: com.microsoft.azure._d_a_graph
  id: _d_a_graph
  parent: com.microsoft.azure
  children:
  - com.microsoft.azure._d_a_graph_1a7cc746fba1814e67cef173e9308c3619
  - com.microsoft.azure._d_a_graph_1a6adb74a7b8a2cd0f164464fe50979480
  - com.microsoft.azure._d_a_graph_1a885a0171fafa3e63aabc89c2579162ff
  - com.microsoft.azure._d_a_graph_1a2aea205f243d430eac319384da872e8a
  - com.microsoft.azure._d_a_graph_1a8a23f630f27a056ced79944a9cedfa38
  - com.microsoft.azure._d_a_graph_1afb60e3929ed6f4560e2d6045676be4ce
  - com.microsoft.azure._d_a_graph_1a57eaba1462aa303a211c2726b6179b0d
  - com.microsoft.azure._d_a_graph_1a5b8dcfb1e01a711ea5fef8448b5e49db
  - com.microsoft.azure._d_a_graph_1a274c9d2e5de0f619cd889d75d2641845
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: DAGraph<T,U>
  fullName: com.microsoft.azure.DAGraph<T,U>
  type: Class
  source:
    remote: &o0
      path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 21
  package: com.microsoft.azure
  summary: >-
    <p>Type representing a DAG (directed acyclic graph). </p>

    <p>each node in a DAG is represented by <xref href="com.microsoft.azure._d_a_g_node" data-throw-if-not-resolved="false"></xref></p>

    <p></p>
  syntax: &o1
    content: public class DAGraph<T,U extends DAGNode< T>> extends Graph< T, U >
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the data stored in the graph nodes </p>
    - type: 6043614c
      description: <p>the type of the nodes in the graph </p>
  inheritance:
  - java.lang.Object
  - com.microsoft.azure._graph
  inheritedMembers:
  - com.microsoft.azure._graph_1a86314d0d81f14a3ffb13c531f94cf54e
  - com.microsoft.azure._graph_1a7a5974d693aee0816e6b222cd3d142d5
  - com.microsoft.azure._graph_1ab8148e92ab05c1c6283e6ec1731dd856
  - com.microsoft.azure._graph_1ae40963792e80b40fea6676e6157aa5ae
- uid: com.microsoft.azure._d_a_graph_1a7cc746fba1814e67cef173e9308c3619
  id: _d_a_graph_1a7cc746fba1814e67cef173e9308c3619
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: DAGraph(U rootNode)
  fullName: com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.DAGraph(U rootNode)
  type: Constructor
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 31
  package: com.microsoft.azure
  summary: >-
    <p>Creates a new DAG.</p>

    <p></p>
  syntax:
    content: public DAGraph(U rootNode)
    parameters:
    - id: rootNode
      type: 6043614c
      description: <p>the root node of this DAG </p>
- uid: com.microsoft.azure._d_a_graph_1a6adb74a7b8a2cd0f164464fe50979480
  id: _d_a_graph_1a6adb74a7b8a2cd0f164464fe50979480
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: getNext()
  fullName: U com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.getNext()
  type: Method
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 107
  package: com.microsoft.azure
  summary: >-
    <p>Gets next node in the DAG which has no dependency or all of it's dependencies are resolved and ready to be consumed.</p>

    <p></p>
  syntax:
    content: public U getNext()
    return:
      type: 6043614c
      description: <p>next node or null if all the nodes have been explored </p>
- uid: com.microsoft.azure._d_a_graph_1a885a0171fafa3e63aabc89c2579162ff
  id: _d_a_graph_1a885a0171fafa3e63aabc89c2579162ff
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: getNodeData(String key)
  fullName: T com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.getNodeData(String key)
  type: Method
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 117
  package: com.microsoft.azure
  summary: >-
    <p>Gets the data stored in a graph node with a given key.</p>

    <p></p>
  syntax:
    content: public T getNodeData(String key)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key of the node </p>
    return:
      type: 8ce1ecb9
      description: <p>the value stored in the node </p>
- uid: com.microsoft.azure._d_a_graph_1a2aea205f243d430eac319384da872e8a
  id: _d_a_graph_1a2aea205f243d430eac319384da872e8a
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: hasParent()
  fullName: boolean com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.hasParent()
  type: Method
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 41
  package: com.microsoft.azure
  syntax:
    content: public boolean hasParent()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this DAG is merged with another DAG and hence has a parent </p>
- uid: com.microsoft.azure._d_a_graph_1a8a23f630f27a056ced79944a9cedfa38
  id: _d_a_graph_1a8a23f630f27a056ced79944a9cedfa38
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: isPreparer()
  fullName: boolean com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.isPreparer()
  type: Method
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 59
  package: com.microsoft.azure
  syntax:
    content: public boolean isPreparer()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if this dag is the preparer responsible for preparing the DAG for traversal. </p>
- uid: com.microsoft.azure._d_a_graph_1afb60e3929ed6f4560e2d6045676be4ce
  id: _d_a_graph_1afb60e3929ed6f4560e2d6045676be4ce
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: isRootNode(U node)
  fullName: boolean com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.isRootNode(U node)
  type: Method
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 51
  package: com.microsoft.azure
  summary: >-
    <p>Checks whether the given node is root node of this DAG.</p>

    <p></p>
  syntax:
    content: public boolean isRootNode(U node)
    parameters:
    - id: node
      type: 6043614c
      description: <p>the node <xref href="com.microsoft.azure._d_a_g_node" data-throw-if-not-resolved="false"></xref> to be checked </p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the given node is root node </p>
- uid: com.microsoft.azure._d_a_graph_1a57eaba1462aa303a211c2726b6179b0d
  id: _d_a_graph_1a57eaba1462aa303a211c2726b6179b0d
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: merge(DAGraph< T, U > parent)
  fullName: void com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.merge(DAGraph< T, U > parent)
  type: Method
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 71
  package: com.microsoft.azure
  summary: >-
    <p>Merge this DAG with another DAG. </p>

    <p>This will mark this DAG as a child DAG, the dependencies of nodes in this DAG will be merged with (copied to) the parent DAG</p>

    <p></p>
  syntax:
    content: public void merge(DAGraph< T, U > parent)
    parameters:
    - id: parent
      type: com.microsoft.azure._d_a_graph43b2a0f3
      description: <p>the parent DAG </p>
- uid: com.microsoft.azure._d_a_graph_1a5b8dcfb1e01a711ea5fef8448b5e49db
  id: _d_a_graph_1a5b8dcfb1e01a711ea5fef8448b5e49db
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: prepare()
  fullName: void com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.prepare()
  type: Method
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 86
  package: com.microsoft.azure
  summary: <p>Prepares this DAG for traversal using getNext method, each call to getNext returns next node in the DAG with no dependencies. </p>
  syntax:
    content: public void prepare()
- uid: com.microsoft.azure._d_a_graph_1a274c9d2e5de0f619cd889d75d2641845
  id: _d_a_graph_1a274c9d2e5de0f619cd889d75d2641845
  parent: com.microsoft.azure._d_a_graph
  href: com.microsoft.azure._d_a_graph.yml
  langs:
  - java
  name: reportedCompleted(U completed)
  fullName: void com.microsoft.azure.DAGraph< T, U extends DAGNode< T >.reportedCompleted(U completed)
  type: Method
  source:
    remote: *o0
    path: runtimes/azure-client-runtime/src/main/java/com/microsoft/azure/DAGraph.java
    startLine: 126
  package: com.microsoft.azure
  summary: >-
    <p>Reports that a node is resolved hence other nodes depends on it can consume it.</p>

    <p></p>
  syntax:
    content: public void reportedCompleted(U completed)
    parameters:
    - id: completed
      type: 6043614c
      description: <p>the node ready to be consumed </p>
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: 6043614c
  spec.java:
  - name: U
    fullName: U
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure._d_a_graph43b2a0f3
  spec.java:
  - uid: com.microsoft.azure._d_a_graph
    name: DAGraph<T,U>
    fullName: com.microsoft.azure.DAGraph<T,U>
    href: com.microsoft.azure._d_a_graph.yml
  - name: < T, U >
    fullName: < T, U >
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure._graph_1a86314d0d81f14a3ffb13c531f94cf54e
  parent: com.microsoft.azure._graph
  href: com.microsoft.azure._graph.yml
  name: addNode(U node)
  fullName: void com.microsoft.azure.Graph< T, U extends Node< T >.addNode(U node)
  type: Method
  summary: >-
    <p>Adds a node to this graph.</p>

    <p></p>
  syntax:
    content: public void addNode(U node)
    parameters:
    - id: node
      type: 6043614c
      description: <p>the node </p>
- uid: com.microsoft.azure._graph_1a7a5974d693aee0816e6b222cd3d142d5
  parent: com.microsoft.azure._graph
  href: com.microsoft.azure._graph.yml
  name: Graph()
  fullName: com.microsoft.azure.Graph< T, U extends Node< T >.Graph()
  type: Constructor
  summary: <p>Creates a directed graph. </p>
  syntax:
    content: public Graph()
- uid: com.microsoft.azure._graph_1ab8148e92ab05c1c6283e6ec1731dd856
  parent: com.microsoft.azure._graph
  href: com.microsoft.azure._graph.yml
  name: graph
  fullName: Map<String, U> com.microsoft.azure.Graph< T, U extends Node< T >.graph
  type: Field
  syntax:
    content: protected Map< String, U > graph
    return:
      type: 76b2693b
- uid: com.microsoft.azure._graph_1ae40963792e80b40fea6676e6157aa5ae
  parent: com.microsoft.azure._graph
  href: com.microsoft.azure._graph.yml
  name: visit(Visitor visitor)
  fullName: void com.microsoft.azure.Graph< T, U extends Node< T >.visit(Visitor visitor)
  type: Method
  summary: >-
    <p>Perform DFS visit in this graph. </p>

    <p>The directed graph will be traversed in DFS order and the visitor will be notified as search explores each node</p>

    <p></p>
  syntax:
    content: public void visit(Visitor visitor)
    parameters:
    - id: visitor
      type: bb01fbc9
      description: <p>the graph visitor </p>
- uid: com.microsoft.azure._graph
  parent: com.microsoft.azure
  href: com.microsoft.azure._graph.yml
  name: Graph<T,U>
  fullName: com.microsoft.azure.Graph<T,U>
  type: Class
  summary: >-
    <p>Type representing a directed graph data structure. </p>

    <p>Each node in a graph is represented by <xref href="com.microsoft.azure._node" data-throw-if-not-resolved="false"></xref></p>

    <p></p>
  syntax:
    content: public class Graph<T,U extends Node< T>>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the data stored in the graph's nodes </p>
    - type: 6043614c
      description: <p>the type of the nodes in the graph </p>
- uid: com.microsoft.azure._d_a_g_node
  parent: com.microsoft.azure
  href: com.microsoft.azure._d_a_g_node.yml
  name: DAGNode<T>
  fullName: com.microsoft.azure.DAGNode<T>
  type: Class
  summary: >-
    <p>The type representing node in a <xref href="com.microsoft.azure._d_a_graph" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public class DAGNode<T> extends Node< T >
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the data stored in the node </p>
- uid: com.microsoft.azure._d_a_graph
  parent: com.microsoft.azure
  href: com.microsoft.azure._d_a_graph.yml
  name: DAGraph<T,U>
  fullName: com.microsoft.azure.DAGraph<T,U>
  type: Class
  summary: >-
    <p>Type representing a DAG (directed acyclic graph). </p>

    <p>each node in a DAG is represented by <xref href="com.microsoft.azure._d_a_g_node" data-throw-if-not-resolved="false"></xref></p>

    <p></p>
  syntax: *o1
