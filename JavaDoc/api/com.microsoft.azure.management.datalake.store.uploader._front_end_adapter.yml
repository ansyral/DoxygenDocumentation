items:
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  id: _front_end_adapter
  parent: com.microsoft.azure.management.datalake.store.uploader
  children:
  - com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.appendToStream(String,byte[],long,int)
  - com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.concatenate(String,String[])
  - com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.createStream(String,boolean,byte[],int)
  - com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.deleteStream(String,boolean)
  - com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.getStreamLength(String)
  - com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.streamExists(String)
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  langs:
  - java
  name: FrontEndAdapter
  fullName: com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/FrontEndAdapter.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/FrontEndAdapter.java
    startLine: 15
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: <p>The frontend adapter that must be implemented in order to execute using the multipart uploader. By implementing this contract, the multi-part uploader will execute. </p>
  syntax:
    content: public interface FrontEndAdapter
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.appendToStream(String,byte[],long,int)
  id: appendToStream(String,byte[],long,int)
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  langs:
  - java
  name: appendToStream(String streamPath, byte[] data, long offset, int length)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.appendToStream(String streamPath, byte[] data, long offset, int length)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/FrontEndAdapter.java
    startLine: 48
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Appends the given byte array to the end of a given stream.</p>

    <p></p>
  syntax:
    content: public void appendToStream(String streamPath, byte[] data, long offset, int length)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: data
      type: bc819c2f
      description: <p>An array of bytes to be appended to the stream. </p>
    - id: offset
      type: 0364520f
      description: <p>The offset at which to append to the stream. </p>
    - id: length
      type: f75371fa
      description: <p>The number of bytes to append (starting at 0). </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the file does not exist or is inaccessible. </p>
  - type: 0f262a9d
    description: <p>if there is a failure communicating with the service. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.concatenate(String,String[])
  id: concatenate(String,String[])
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  langs:
  - java
  name: concatenate(String targetStreamPath, String[] inputStreamPaths)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.concatenate(String targetStreamPath, String[] inputStreamPaths)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/FrontEndAdapter.java
    startLine: 79
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Concatenates the given input streams (in order) into the given target stream. At the end of this operation, input streams will be deleted.</p>

    <p></p>
  syntax:
    content: public void concatenate(String targetStreamPath, String[] inputStreamPaths)
    parameters:
    - id: targetStreamPath
      type: "26831127"
      description: <p>The relative path to the target stream. </p>
    - id: inputStreamPaths
      type: 30d59cf1
      description: <p>An ordered array of paths to the input streams. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the file does not exist or is inaccessible. </p>
  - type: 0f262a9d
    description: <p>if there is a failure communicating with the service. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.createStream(String,boolean,byte[],int)
  id: createStream(String,boolean,byte[],int)
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  langs:
  - java
  name: createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/FrontEndAdapter.java
    startLine: 26
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Creates a new, empty stream at the given path.</p>

    <p></p>
  syntax:
    content: public void createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>Whether to overwrite an existing stream. </p>
    - id: data
      type: bc819c2f
      description: <p>The data to include in the stream during creation. </p>
    - id: byteCount
      type: f75371fa
      description: <p>The number of bytes from data to include (starting at 0). </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the file does not exist or is inaccessible. </p>
  - type: 0f262a9d
    description: <p>if there is a failure communicating with the service. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.deleteStream(String,boolean)
  id: deleteStream(String,boolean)
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  langs:
  - java
  name: deleteStream(String streamPath, boolean recurse)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.deleteStream(String streamPath, boolean recurse)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/FrontEndAdapter.java
    startLine: 36
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Deletes an existing stream at the given path.</p>

    <p></p>
  syntax:
    content: public void deleteStream(String streamPath, boolean recurse)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: recurse
      type: 4fc6e284
      description: <p>if set to true recursively delete. This is used for folder streams only. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the file does not exist or is inaccessible. </p>
  - type: 0f262a9d
    description: <p>if there is a failure communicating with the service. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.getStreamLength(String)
  id: getStreamLength(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  langs:
  - java
  name: getStreamLength(String streamPath)
  fullName: long com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.getStreamLength(String streamPath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/FrontEndAdapter.java
    startLine: 68
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Gets a value indicating the length of a stream, in bytes.</p>

    <p></p>
  syntax:
    content: public long getStreamLength(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 0364520f
      description: <p>The length of the stream, in bytes. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the file does not exist or is inaccessible. </p>
  - type: 0f262a9d
    description: <p>if there is a failure communicating with the service. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.streamExists(String)
  id: streamExists(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter
  href: com.microsoft.azure.management.datalake.store.uploader._front_end_adapter.yml
  langs:
  - java
  name: streamExists(String streamPath)
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.FrontEndAdapter.streamExists(String streamPath)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/main/java/com/microsoft/azure/management/datalake/store/uploader/FrontEndAdapter.java
    startLine: 58
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Determines if the stream with given path exists.</p>

    <p></p>
  syntax:
    content: public boolean streamExists(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 4fc6e284
      description: <p>True if the stream exists, false otherwise. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the file does not exist or is inaccessible. </p>
  - type: 0f262a9d
    description: <p>if there is a failure communicating with the service. </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 0f262a9d
  spec.java:
  - name: RestException
    fullName: RestException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: bc819c2f
  spec.java:
  - name: byte[]
    fullName: byte[]
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 30d59cf1
  spec.java:
  - name: String[]
    fullName: String[]
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  name: DataLakeStoreFrontEndAdapterImpl
  fullName: com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl
  type: Class
  summary: <p>A front end adapter that communicates with the DataLake Store. This is a syncrhonous call adapter, which has certain efficiency limitations. In the future, new adapters that are created should consider implementing the methods asynchronously. </p>
  syntax:
    content: public class DataLakeStoreFrontEndAdapterImpl implements FrontEndAdapter
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.yml
  name: InMemoryFrontEnd
  fullName: com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd
  type: Class
  summary: <p>Test front-end, fully in-memory. </p>
  syntax:
    content: public class InMemoryFrontEnd
- uid: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.yml
  name: MsuMockFrontEnd
  fullName: com.microsoft.azure.management.datalake.store.uploader.MsuMockFrontEnd
  type: Class
  summary: <p>A mocked front end for testing out the code paths of the <xref href="com.microsoft.azure.management.datalake.store.uploader._multiple_segment_uploader" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class MsuMockFrontEnd
- uid: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.yml
  name: SsuMockFrontEnd
  fullName: com.microsoft.azure.management.datalake.store.uploader.SsuMockFrontEnd
  type: Class
  summary: <p>Represents a mocked front end for testing the <xref href="com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class SsuMockFrontEnd
- uid: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.yml
  name: UploaderFrontEndMock
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploaderFrontEndMock
  type: Class
  summary: <p>A front end mock used for unit testing <xref href="com.microsoft.azure.management.datalake.store.uploader._data_lake_store_uploader" data-throw-if-not-resolved="false"></xref></p>
  syntax:
    content: public class UploaderFrontEndMock
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.createStream(String,boolean,byte[],int)
  parent: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.yml
  name: createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd.createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  type: Method
  syntax:
    content: public void createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>Whether to overwrite an existing stream. </p>
    - id: data
      type: bc819c2f
    - id: byteCount
      type: f75371fa
      description: >-
        <p>

          <xref href="com.microsoft.azure._cloud_exception" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.createStream(String,boolean,byte[],int)
  parent: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  href: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.yml
  name: createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.UploaderFrontEndMock.createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  type: Method
  summary: >-
    <p>Creates a new, empty stream at the given path.</p>

    <p></p>
  syntax:
    content: public void createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>Whether to overwrite an existing stream. </p>
    - id: data
      type: bc819c2f
      description: <p>The data to include in the stream during creation. </p>
    - id: byteCount
      type: f75371fa
      description: <p>The number of bytes from data to include (starting at 0). </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.createStream(String,boolean,byte[],int)
  parent: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.yml
  name: createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.MsuMockFrontEnd.createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  type: Method
  summary: >-
    <p>Creates a new, empty stream at the given path.</p>

    <p></p>
  syntax:
    content: public void createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>Whether to overwrite an existing stream. </p>
    - id: data
      type: bc819c2f
      description: <p>The data to include in the stream during creation. </p>
    - id: byteCount
      type: f75371fa
      description: <p>The number of bytes from data to include (starting at 0). </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.createStream(String,boolean,byte[],int)
  parent: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.yml
  name: createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SsuMockFrontEnd.createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  type: Method
  summary: >-
    <p>Creates a new, empty stream at the given path.</p>

    <p></p>
  syntax:
    content: public void createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>Whether to overwrite an existing stream. </p>
    - id: data
      type: bc819c2f
      description: <p>The data to include in the stream during creation. </p>
    - id: byteCount
      type: f75371fa
      description: <p>The number of bytes from data to include (starting at 0). </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.createStream(String,boolean,byte[],int)
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  name: createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
  type: Method
  summary: >-
    <p>Creates a new, empty stream at the given path.</p>

    <p></p>
  syntax:
    content: public void createStream(String streamPath, boolean overwrite, byte[] data, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: overwrite
      type: 4fc6e284
      description: <p>Whether to overwrite an existing stream. </p>
    - id: data
      type: bc819c2f
      description: <p>Optionally pass in data to add to the stream during creation. If null is passed in an empty stream is created </p>
    - id: byteCount
      type: f75371fa
      description: <p>If data is passed in, indicates how many bytes of the data passed in should be pushed into the stream </p>
- uid: com.microsoft.rest._rest_exception
  parent: com.microsoft.rest
  href: com.microsoft.rest._rest_exception.yml
  name: RestException
  fullName: com.microsoft.rest.RestException
  type: Class
  summary: <p>Exception thrown for an invalid response with custom error information. </p>
  syntax:
    content: public class RestException
- uid: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.deleteStream(String,boolean)
  parent: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.yml
  name: deleteStream(String streamPath, boolean recurse)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.MsuMockFrontEnd.deleteStream(String streamPath, boolean recurse)
  type: Method
  summary: >-
    <p>Deletes an existing stream at the given path.</p>

    <p></p>
  syntax:
    content: public void deleteStream(String streamPath, boolean recurse)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: recurse
      type: 4fc6e284
      description: <p>if set to true recursively delete. This is used for folder streams only. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.deleteStream(String,boolean)
  parent: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  href: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.yml
  name: deleteStream(String streamPath, boolean recurse)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.UploaderFrontEndMock.deleteStream(String streamPath, boolean recurse)
  type: Method
  summary: >-
    <p>Deletes an existing stream at the given path.</p>

    <p></p>
  syntax:
    content: public void deleteStream(String streamPath, boolean recurse)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: recurse
      type: 4fc6e284
      description: <p>if set to true recursively delete. This is used for folder streams only. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.deleteStream(String,boolean)
  parent: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.yml
  name: deleteStream(String streamPath, boolean recurse)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SsuMockFrontEnd.deleteStream(String streamPath, boolean recurse)
  type: Method
  summary: >-
    <p>Deletes an existing stream at the given path.</p>

    <p></p>
  syntax:
    content: public void deleteStream(String streamPath, boolean recurse)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: recurse
      type: 4fc6e284
      description: <p>if set to true recursively delete. This is used for folder streams only. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.deleteStream(String,boolean)
  parent: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.yml
  name: deleteStream(String streamPath, boolean recurse)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd.deleteStream(String streamPath, boolean recurse)
  type: Method
  syntax:
    content: public void deleteStream(String streamPath, boolean recurse)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: recurse
      type: 4fc6e284
      description: <p>if set to true recursively delete. This is used for folder streams only.  <xref href="com.microsoft.azure._cloud_exception" data-throw-if-not-resolved="false"></xref></p>
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.deleteStream(String,boolean)
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  name: deleteStream(String streamPath, boolean recurse)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.deleteStream(String streamPath, boolean recurse)
  type: Method
  summary: >-
    <p>Deletes an existing stream at the given path.</p>

    <p></p>
  syntax:
    content: public void deleteStream(String streamPath, boolean recurse)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: recurse
      type: 4fc6e284
      description: <p>if set to true recursively delete. This is used for folder streams only. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.appendToStream(String,byte[],long,int)
  parent: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.yml
  name: appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.MsuMockFrontEnd.appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  type: Method
  summary: >-
    <p>Appends the given byte array to the end of a given stream.</p>

    <p></p>
  syntax:
    content: public void appendToStream(String streamPath, byte[] data, long offset, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: data
      type: bc819c2f
      description: <p>An array of bytes to be appended to the stream. </p>
    - id: offset
      type: 0364520f
      description: <p>The offset at which to append to the stream. </p>
    - id: length
      type: f75371fa
      description: <p>The number of bytes to append (starting at 0). </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.appendToStream(String,byte[],long,int)
  parent: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  href: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.yml
  name: appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.UploaderFrontEndMock.appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  type: Method
  summary: >-
    <p>Appends the given byte array to the end of a given stream.</p>

    <p></p>
  syntax:
    content: public void appendToStream(String streamPath, byte[] data, long offset, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: data
      type: bc819c2f
      description: <p>An array of bytes to be appended to the stream. </p>
    - id: offset
      type: 0364520f
      description: <p>The offset at which to append to the stream. </p>
    - id: length
      type: f75371fa
      description: <p>The number of bytes to append (starting at 0). </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.appendToStream(String,byte[],long,int)
  parent: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.yml
  name: appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SsuMockFrontEnd.appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  type: Method
  summary: >-
    <p>Appends the given byte array to the end of a given stream.</p>

    <p></p>
  syntax:
    content: public void appendToStream(String streamPath, byte[] data, long offset, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: data
      type: bc819c2f
      description: <p>An array of bytes to be appended to the stream. </p>
    - id: offset
      type: 0364520f
      description: <p>The offset at which to append to the stream. </p>
    - id: length
      type: f75371fa
      description: <p>The number of bytes to append (starting at 0). </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.appendToStream(String,byte[],long,int)
  parent: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.yml
  name: appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd.appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  type: Method
  syntax:
    content: public void appendToStream(String streamPath, byte[] data, long offset, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: data
      type: bc819c2f
      description: <p>An array of bytes to be appended to the stream. </p>
    - id: offset
      type: 0364520f
      description: <p>The offset at which to append to the stream. </p>
    - id: byteCount
      type: f75371fa
      description: >-
        <p>

          <xref href="com.microsoft.azure._cloud_exception" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.appendToStream(String,byte[],long,int)
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  name: appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.appendToStream(String streamPath, byte[] data, long offset, int byteCount)
  type: Method
  summary: >-
    <p>Appends to stream.</p>

    <p></p>
  syntax:
    content: public void appendToStream(String streamPath, byte[] data, long offset, int byteCount)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    - id: data
      type: bc819c2f
      description: <p>The data to append to the stream </p>
    - id: offset
      type: 0364520f
      description: <p>This parameter is unused by this implementation, and any value put here is ignored </p>
    - id: byteCount
      type: f75371fa
      description: <p>The number of bytes from the data stream to append (starting at offset 0 of data). </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.streamExists(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  href: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.yml
  name: streamExists(String streamPath)
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.UploaderFrontEndMock.streamExists(String streamPath)
  type: Method
  summary: >-
    <p>Determines if the stream with given path exists.</p>

    <p></p>
  syntax:
    content: public boolean streamExists(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 4fc6e284
      description: <p>True if the stream exists, false otherwise. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.streamExists(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.yml
  name: streamExists(String streamPath)
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.MsuMockFrontEnd.streamExists(String streamPath)
  type: Method
  summary: >-
    <p>Determines if the stream with given path exists.</p>

    <p></p>
  syntax:
    content: public boolean streamExists(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 4fc6e284
      description: <p>True if the stream exists, false otherwise. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.streamExists(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.yml
  name: streamExists(String streamPath)
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.SsuMockFrontEnd.streamExists(String streamPath)
  type: Method
  summary: >-
    <p>Determines if the stream with given path exists.</p>

    <p></p>
  syntax:
    content: public boolean streamExists(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 4fc6e284
      description: <p>True if the stream exists, false otherwise. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.streamExists(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  name: streamExists(String streamPath)
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.streamExists(String streamPath)
  type: Method
  summary: >-
    <p>Determines if the stream with given path exists.</p>

    <p></p>
  syntax:
    content: public boolean streamExists(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 4fc6e284
      description: <p>True if the stream exists, false otherwise. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.streamExists(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.yml
  name: streamExists(String streamPath)
  fullName: boolean com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd.streamExists(String streamPath)
  type: Method
  syntax:
    content: public boolean streamExists(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 4fc6e284
      description: <p>True or false if the stream exists </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.getStreamLength(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  href: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.yml
  name: getStreamLength(String streamPath)
  fullName: long com.microsoft.azure.management.datalake.store.uploader.UploaderFrontEndMock.getStreamLength(String streamPath)
  type: Method
  summary: >-
    <p>Gets a value indicating the length of a stream, in bytes.</p>

    <p></p>
  syntax:
    content: public long getStreamLength(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 0364520f
      description: <p>The length of the stream, in bytes. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.getStreamLength(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.yml
  name: getStreamLength(String streamPath)
  fullName: long com.microsoft.azure.management.datalake.store.uploader.MsuMockFrontEnd.getStreamLength(String streamPath)
  type: Method
  summary: >-
    <p>Gets a value indicating the length of a stream, in bytes.</p>

    <p></p>
  syntax:
    content: public long getStreamLength(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 0364520f
      description: <p>The length of the stream, in bytes. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.getStreamLength(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.yml
  name: getStreamLength(String streamPath)
  fullName: long com.microsoft.azure.management.datalake.store.uploader.SsuMockFrontEnd.getStreamLength(String streamPath)
  type: Method
  summary: >-
    <p>Gets a value indicating the length of a stream, in bytes.</p>

    <p></p>
  syntax:
    content: public long getStreamLength(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 0364520f
      description: <p>The length of the stream, in bytes. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.getStreamLength(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  name: getStreamLength(String streamPath)
  fullName: long com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.getStreamLength(String streamPath)
  type: Method
  summary: >-
    <p>Gets a value indicating the length of a stream, in bytes.</p>

    <p></p>
  syntax:
    content: public long getStreamLength(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 0364520f
      description: <p>The length of the stream, in bytes. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.getStreamLength(String)
  parent: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.yml
  name: getStreamLength(String streamPath)
  fullName: long com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd.getStreamLength(String streamPath)
  type: Method
  syntax:
    content: public long getStreamLength(String streamPath)
    parameters:
    - id: streamPath
      type: "26831127"
      description: <p>The relative path to the stream. </p>
    return:
      type: 0364520f
      description: >-
        <p>

          <xref href="com.microsoft.azure._cloud_exception" data-throw-if-not-resolved="false"></xref>

        </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.concatenate(String,String[])
  parent: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock
  href: com.microsoft.azure.management.datalake.store.uploader._uploader_front_end_mock.yml
  name: concatenate(String targetStreamPath, String[] inputStreamPaths)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.UploaderFrontEndMock.concatenate(String targetStreamPath, String[] inputStreamPaths)
  type: Method
  summary: >-
    <p>Concatenates the given input streams (in order) into the given target stream. At the end of this operation, input streams will be deleted.</p>

    <p></p>
  syntax:
    content: public void concatenate(String targetStreamPath, String[] inputStreamPaths)
    parameters:
    - id: targetStreamPath
      type: "26831127"
      description: <p>The relative path to the target stream. </p>
    - id: inputStreamPaths
      type: 30d59cf1
      description: <p>An ordered array of paths to the input streams. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.concatenate(String,String[])
  parent: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._msu_mock_front_end.yml
  name: concatenate(String targetStreamPath, String[] inputStreamPaths)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.MsuMockFrontEnd.concatenate(String targetStreamPath, String[] inputStreamPaths)
  type: Method
  summary: >-
    <p>Concatenates the given input streams (in order) into the given target stream. At the end of this operation, input streams will be deleted.</p>

    <p></p>
  syntax:
    content: public void concatenate(String targetStreamPath, String[] inputStreamPaths)
    parameters:
    - id: targetStreamPath
      type: "26831127"
      description: <p>The relative path to the target stream. </p>
    - id: inputStreamPaths
      type: 30d59cf1
      description: <p>An ordered array of paths to the input streams. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.concatenate(String,String[])
  parent: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._ssu_mock_front_end.yml
  name: concatenate(String targetStreamPath, String[] inputStreamPaths)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SsuMockFrontEnd.concatenate(String targetStreamPath, String[] inputStreamPaths)
  type: Method
  summary: >-
    <p>Concatenates the given input streams (in order) into the given target stream. At the end of this operation, input streams will be deleted.</p>

    <p></p>
  syntax:
    content: public void concatenate(String targetStreamPath, String[] inputStreamPaths)
    parameters:
    - id: targetStreamPath
      type: "26831127"
      description: <p>The relative path to the target stream. </p>
    - id: inputStreamPaths
      type: 30d59cf1
      description: <p>An ordered array of paths to the input streams. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.concatenate(String,String[])
  parent: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl
  href: com.microsoft.azure.management.datalake.store.uploader._data_lake_store_front_end_adapter_impl.yml
  name: concatenate(String targetStreamPath, String[] inputStreamPaths)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.DataLakeStoreFrontEndAdapterImpl.concatenate(String targetStreamPath, String[] inputStreamPaths)
  type: Method
  summary: >-
    <p>Concatenates the given input streams (in order) into the given target stream. At the end of this operation, input streams will be deleted.</p>

    <p></p>
  syntax:
    content: public void concatenate(String targetStreamPath, String[] inputStreamPaths)
    parameters:
    - id: targetStreamPath
      type: "26831127"
      description: <p>The relative path to the target stream. </p>
    - id: inputStreamPaths
      type: 30d59cf1
      description: <p>An ordered array of paths to the input streams to concatenate into the target stream. </p>
- uid: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.concatenate(String,String[])
  parent: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end
  href: com.microsoft.azure.management.datalake.store.uploader._in_memory_front_end.yml
  name: concatenate(String targetStreamPath, String[] inputStreamPaths)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.InMemoryFrontEnd.concatenate(String targetStreamPath, String[] inputStreamPaths)
  type: Method
  syntax:
    content: public void concatenate(String targetStreamPath, String[] inputStreamPaths)
    parameters:
    - id: targetStreamPath
      type: "26831127"
      description: <p>The relative path to the target stream. </p>
    - id: inputStreamPaths
      type: 30d59cf1
      description: <p>An ordered array of paths to the input streams.  <xref href="com.microsoft.azure._cloud_exception" data-throw-if-not-resolved="false"></xref></p>
