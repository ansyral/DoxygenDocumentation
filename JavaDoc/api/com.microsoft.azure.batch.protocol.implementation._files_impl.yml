items:
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl
  id: _files_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  children:
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNode(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback< Void >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTask(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback< Void >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,final ServiceCallback< Void >)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.FilesImpl(Retrofit,BatchServiceClientImpl)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNode(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback< InputStream >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,final ServiceCallback< InputStream >)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTask(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTask(String,String,String,FileGetFromTaskOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback< InputStream >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,final ServiceCallback< InputStream >)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromComputeNode(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromComputeNode(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromComputeNodeAsync(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions,final ServiceCallback< Void >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromTask(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromTask(String,String,String,FileGetNodeFilePropertiesFromTaskOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromTaskAsync(String,String,String,FileGetNodeFilePropertiesFromTaskOptions,final ServiceCallback< Void >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromTaskAsync(String,String,String,final ServiceCallback< Void >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNode(final String,final String)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback< NodeFile >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final ListOperationCallback< NodeFile >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNext(final String)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTask(final String,final String)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback< NodeFile >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final ListOperationCallback< NodeFile >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNext(final String)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNext(final String,final FileListFromTaskNextOptions)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  - classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: FilesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl
  type: Class
  source:
    remote: &o0
      path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 65
  package: com.microsoft.azure.batch.protocol.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class FilesImpl implements Files
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.batch.protocol._files
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNode(String,String,String)
  id: deleteFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 899
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNode(String,String,String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  id: deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 993
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback< Void >)
  id: deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1042
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback< Void >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
  id: deleteFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 935
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTask(String,String,String)
  id: deleteFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 142
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTask(String,String,String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  id: deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 236
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback< Void >)
  id: deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 285
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback< Void >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.deleteFromTaskAsync(String,String,String,final ServiceCallback< Void >)
  id: deleteFromTaskAsync(String,String,String,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 178
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,final ServiceCallback< Void >)
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.FilesImpl(Retrofit,BatchServiceClientImpl)
  id: FilesImpl(Retrofit,BatchServiceClientImpl)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl.FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  type: Constructor
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 77
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.batch.protocol.implementation._files_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNode(String,String,String)
  id: getFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1116
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNode(String,String,String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  id: getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1229
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback< InputStream >)
  id: getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback< InputStream >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1297
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback< InputStream >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.getFromComputeNodeAsync(String,String,String,final ServiceCallback< InputStream >)
  id: getFromComputeNodeAsync(String,String,String,final ServiceCallback< InputStream >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1162
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,final ServiceCallback< InputStream >)
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTask(String,String,String)
  id: getFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 359
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTask(String,String,String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getFromTask(String,String,String,FileGetFromTaskOptions)
  id: getFromTask(String,String,String,FileGetFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 472
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getFromTask(String,String,String,FileGetFromTaskOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback< InputStream >)
  id: getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback< InputStream >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 540
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback< InputStream >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.getFromTaskAsync(String,String,String,final ServiceCallback< InputStream >)
  id: getFromTaskAsync(String,String,String,final ServiceCallback< InputStream >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 405
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,final ServiceCallback< InputStream >)
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromComputeNode(String,String,String)
  id: getNodeFilePropertiesFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1391
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromComputeNode(String,String,String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromComputeNode(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions)
  id: getNodeFilePropertiesFromComputeNode(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1502
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromComputeNode(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromComputeNodeAsync(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions,final ServiceCallback< Void >)
  id: getNodeFilePropertiesFromComputeNodeAsync(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1566
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromComputeNodeAsync(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions,final ServiceCallback< Void >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
  id: getNodeFilePropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1436
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromTask(String,String,String)
  id: getNodeFilePropertiesFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 634
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromTask(String,String,String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromTask(String,String,String,FileGetNodeFilePropertiesFromTaskOptions)
  id: getNodeFilePropertiesFromTask(String,String,String,FileGetNodeFilePropertiesFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 745
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromTask(String,String,String,FileGetNodeFilePropertiesFromTaskOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromTaskAsync(String,String,String,FileGetNodeFilePropertiesFromTaskOptions,final ServiceCallback< Void >)
  id: getNodeFilePropertiesFromTaskAsync(String,String,String,FileGetNodeFilePropertiesFromTaskOptions,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 809
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromTaskAsync(String,String,String,FileGetNodeFilePropertiesFromTaskOptions,final ServiceCallback< Void >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.getNodeFilePropertiesFromTaskAsync(String,String,String,final ServiceCallback< Void >)
  id: getNodeFilePropertiesFromTaskAsync(String,String,String,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 679
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromTaskAsync(String,String,String,final ServiceCallback< Void >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNode(final String,final String)
  id: listFromComputeNode(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNode(final String poolId, final String nodeId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNode(final String poolId, final String nodeId)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1916
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNode(final String,final String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  id: listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2019
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback< NodeFile >)
  id: listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2086
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback< NodeFile >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeAsync(final String,final String,final ListOperationCallback< NodeFile >)
  id: listFromComputeNodeAsync(final String,final String,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1957
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final ListOperationCallback< NodeFile >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNext(final String)
  id: listFromComputeNodeNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNext(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2343
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeNext(final String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  id: listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2414
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  id: listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2448
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromComputeNodeNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  id: listFromComputeNodeNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2367
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTask(final String,final String)
  id: listFromTask(final String,final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTask(final String jobId, final String taskId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTask(final String jobId, final String taskId)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1655
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromTask(final String,final String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  id: listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1758
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback< NodeFile >)
  id: listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1825
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback< NodeFile >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskAsync(final String,final String,final ListOperationCallback< NodeFile >)
  id: listFromTaskAsync(final String,final String,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1696
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final ListOperationCallback< NodeFile >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNext(final String)
  id: listFromTaskNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNext(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2176
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskNext(final String)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNext(final String,final FileListFromTaskNextOptions)
  id: listFromTaskNext(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2247
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskNext(final String,final FileListFromTaskNextOptions)
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  id: listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2281
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
- uid: classcom.microsoft.azure.batch.protocol.implementation._files_impl.listFromTaskNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  id: listFromTaskNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2200
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers
    name: FileDeleteFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callbacke35e5465
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: < Void >
    fullName: < Void >
- uid: com.microsoft.rest._service_calle35e5465
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: < Void >
    fullName: < Void >
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< InputStream, '
    fullName: '< InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers
    name: FileGetFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callback7f11b53f
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: com.microsoft.rest._service_call7f11b53f
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers
    name: FileGetNodeFilePropertiesFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers
    name: FileDeleteFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< InputStream, '
    fullName: '< InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers
    name: FileGetFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers
    name: FileGetNodeFilePropertiesFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure._paged_list
    name: PagedList
    fullName: com.microsoft.azure.PagedList
    href: com.microsoft.azure._paged_list.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >, "
    fullName: " >, "
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
    name: FileListFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure._list_operation_callback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
    href: com.microsoft.azure._list_operation_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< List< '
    fullName: '< List< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " > >"
    fullName: " > >"
- uid: 2ec468d1
  spec.java:
  - name: final Boolean
    fullName: final Boolean
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_options
    name: FileListFromTaskOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure._paged_list
    name: PagedList
    fullName: com.microsoft.azure.PagedList
    href: com.microsoft.azure._paged_list.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >, "
    fullName: " >, "
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
    name: FileListFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
    name: FileListFromComputeNodeOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._page_impl
    name: PageImpl
    fullName: com.microsoft.azure.batch.protocol.models.PageImpl
    href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >, "
    fullName: " >, "
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
    name: FileListFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< List< '
    fullName: '< List< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >>"
    fullName: " >>"
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
    name: FileListFromTaskNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskNextOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._page_impl
    name: PageImpl
    fullName: com.microsoft.azure.batch.protocol.models.PageImpl
    href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >, "
    fullName: " >, "
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
    name: FileListFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
    name: FileListFromComputeNodeNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeNextOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options.yml
- uid: com.microsoft.azure.batch.protocol._files
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._files.yml
  name: Files
  fullName: com.microsoft.azure.batch.protocol.Files
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface Files
- uid: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl.yml
  name: BatchServiceClientImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.BatchServiceClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class BatchServiceClientImpl extends AzureServiceClient implements BatchServiceClient
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  name: FilesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.rest._service_response_with_headers
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_response_with_headers.yml
  name: ServiceResponseWithHeaders<TBody,THeader>
  fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
  type: Class
  summary: >-
    <p>An instance of this class holds a response object and a raw REST response.</p>

    <p></p>
  syntax:
    content: public class ServiceResponseWithHeaders<TBody,THeader>
    typeParameters:
    - type: 0063fec6
      description: <p>the type of the response </p>
    - type: "77199363"
      description: <p>the type of the response header object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers.yml
  name: FileDeleteFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders
  type: Class
  summary: <p>Defines headers for DeleteFromTask operation. </p>
  syntax:
    content: public class FileDeleteFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._batch_error_exception
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._batch_error_exception.yml
  name: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.batch.protocol.models._batch_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class BatchErrorException extends RestException
- uid: com.microsoft.rest._service_call
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_call.yml
  name: ServiceCall<T>
  fullName: com.microsoft.rest.ServiceCall<T>
  type: Class
  summary: >-
    <p>An instance of this class provides access to the underlying REST call invocation. This class wraps around the Retrofit Call object and allows updates to it in the progress of a long running operation or a paging operation.</p>

    <p></p>
  syntax:
    content: public class ServiceCall<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the returning object </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.rest._service_callback
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_callback.yml
  name: ServiceCallback<T>
  fullName: com.microsoft.rest.ServiceCallback<T>
  type: Class
  summary: >-
    <p>The callback used for client side asynchronous operations.</p>

    <p></p>
  syntax:
    content: public class ServiceCallback<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the response </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromTask(String,String,String,Boolean,FileDeleteFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options.yml
  name: FileDeleteFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_DeleteFromTask operation. </p>
  syntax:
    content: public class FileDeleteFromTaskOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.deleteFromTaskAsync(String,String,String,Boolean,FileDeleteFromTaskOptions,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers.yml
  name: FileGetFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders
  type: Class
  summary: <p>Defines headers for GetFromTask operation. </p>
  syntax:
    content: public class FileGetFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files.getFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,final ServiceCallback< InputStream >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromTask(String,String,String,FileGetFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_task_options.yml
  name: FileGetFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_GetFromTask operation. </p>
  syntax:
    content: public class FileGetFromTaskOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.getFromTaskAsync(String,String,String,FileGetFromTaskOptions,final ServiceCallback< InputStream >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers.yml
  name: FileGetNodeFilePropertiesFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskHeaders
  type: Class
  summary: <p>Defines headers for GetNodeFilePropertiesFromTask operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromTask(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromTaskAsync(String,String,String,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromTask(String,String,String,FileGetNodeFilePropertiesFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options.yml
  name: FileGetNodeFilePropertiesFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_GetNodeFilePropertiesFromTask operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromTaskOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromTaskAsync(String,String,String,FileGetNodeFilePropertiesFromTaskOptions,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers.yml
  name: FileDeleteFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for DeleteFromComputeNode operation. </p>
  syntax:
    content: public class FileDeleteFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.deleteFromComputeNode(String,String,String,Boolean,FileDeleteFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options.yml
  name: FileDeleteFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_DeleteFromComputeNode operation. </p>
  syntax:
    content: public class FileDeleteFromComputeNodeOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.deleteFromComputeNodeAsync(String,String,String,Boolean,FileDeleteFromComputeNodeOptions,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers.yml
  name: FileGetFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for GetFromComputeNode operation. </p>
  syntax:
    content: public class FileGetFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,final ServiceCallback< InputStream >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getFromComputeNode(String,String,String,FileGetFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options.yml
  name: FileGetFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_GetFromComputeNode operation. </p>
  syntax:
    content: public class FileGetFromComputeNodeOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.getFromComputeNodeAsync(String,String,String,FileGetFromComputeNodeOptions,final ServiceCallback< InputStream >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers.yml
  name: FileGetNodeFilePropertiesFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for GetNodeFilePropertiesFromComputeNode operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromComputeNode(String,String,String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromComputeNodeAsync(String,String,String,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromComputeNode(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options.yml
  name: FileGetNodeFilePropertiesFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_GetNodeFilePropertiesFromComputeNode operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromComputeNodeOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.getNodeFilePropertiesFromComputeNodeAsync(String,String,String,FileGetNodeFilePropertiesFromComputeNodeOptions,final ServiceCallback< Void >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure._paged_list
  parent: com.microsoft.azure
  href: com.microsoft.azure._paged_list.yml
  name: PagedList<E>
  fullName: com.microsoft.azure.PagedList<E>
  type: Class
  summary: >-
    <p>Defines a list response from a paging operation. The pages are lazy initialized when an instance of this class is iterated.</p>

    <p></p>
  syntax:
    content: public class PagedList<E>
    typeParameters:
    - type: 0ca03e3a
      description: <p>the element type. </p>
- uid: com.microsoft.azure.batch.protocol.models._node_file
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._node_file.yml
  name: NodeFile
  fullName: com.microsoft.azure.batch.protocol.models.NodeFile
  type: Class
  summary: <p>Information about a file or directory on a compute node. </p>
  syntax:
    content: public class NodeFile
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  name: FileListFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
  type: Class
  summary: <p>Defines headers for ListFromTask operation. </p>
  syntax:
    content: public class FileListFromTaskHeaders
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromTask(final String,final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTask(final String jobId, final String taskId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure._list_operation_callback
  parent: com.microsoft.azure
  href: com.microsoft.azure._list_operation_callback.yml
  name: ListOperationCallback<E>
  fullName: com.microsoft.azure.ListOperationCallback<E>
  type: Class
  summary: >-
    <p>The callback used for client side asynchronous list operations.</p>

    <p></p>
  syntax:
    content: public class ListOperationCallback<E>
    typeParameters:
    - type: 0ca03e3a
      description: <p>the item type </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromTask(final String,final String,final Boolean,final FileListFromTaskOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_options.yml
  name: FileListFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_ListFromTask operation. </p>
  syntax:
    content: public class FileListFromTaskOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskAsync(final String,final String,final Boolean,final FileListFromTaskOptions,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  name: FileListFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for ListFromComputeNode operation. </p>
  syntax:
    content: public class FileListFromComputeNodeHeaders
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNode(final String,final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNode(final String poolId, final String nodeId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNode(final String,final String,final Boolean,final FileListFromComputeNodeOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options.yml
  name: FileListFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_ListFromComputeNode operation. </p>
  syntax:
    content: public class FileListFromComputeNodeOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeAsync(final String,final String,final Boolean,final FileListFromComputeNodeOptions,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._page_impl
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  name: PageImpl<T>
  fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
  type: Class
  summary: >-
    <p>An instance of this class defines a page of <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> resources and a link to get the next page of resources, if any.</p>

    <p></p>
  syntax:
    content: public class PageImpl<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>type of <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> resource </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskNext(final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTaskNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskNext(final String,final FileListFromTaskNextOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options.yml
  name: FileListFromTaskNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskNextOptions
  type: Class
  summary: <p>Additional parameters for the ListFromTaskNext operation. </p>
  syntax:
    content: public class FileListFromTaskNextOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromTaskNextAsync(final String,final FileListFromTaskNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeNext(final String)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeNext(final String,final FileListFromComputeNodeNextOptions)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options.yml
  name: FileListFromComputeNodeNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeNextOptions
  type: Class
  summary: <p>Additional parameters for the ListFromComputeNodeNext operation. </p>
  syntax:
    content: public class FileListFromComputeNodeNextOptions
- uid: interfacecom.microsoft.azure.batch.protocol._files.listFromComputeNodeNextAsync(final String,final FileListFromComputeNodeNextOptions,final ServiceCall< List< NodeFile >>,final ListOperationCallback< NodeFile >)
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
