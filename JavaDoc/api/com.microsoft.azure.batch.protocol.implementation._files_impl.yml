items:
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl
  id: _files_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  children:
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1afc4c8cb6c24eb808938cf2b74e0e54b5
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a22d1b5eff79124a0449427602665b052
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a14976d6737f1a73401071df928ed65f4
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ab38b116443f6fa3ab8eb6e11f5381d2e
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a5c42401887a77a9edd9064bf5e3fc4b0
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1afd2f136d77d4cc3d575345309108e62e
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a094e19075549e58b290febea15ca096f
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ada8651122fb75f7eeb1a7aae72e55f1a
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a9e4b45e51b87693859112357cde48647
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1aa83df171c20a849aa1245aeb04f23602
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a804ecc0872a91b8de0a57beb9d486da6
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a1734341f1db3614555c91ced3015307d
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a56ce100e3260024c188c80540de77076
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a62ab25edc93e20e209e7a09c4a369a20
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ae3c9a9009ad418cf865a99e20589f489
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a2c3cecea5cd97ac0748bc78fac9bb0cc
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1abcb0b78d5f059a88361ad798f52e4249
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a14a1fc32abdd0a3ef503821087f23c00
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a89de2986277ed4ee3eb890d75e08f3ff
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a2d301c2052d6faf748b8e50c9ec34ed0
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1aaef7b1d90fb3ff2a46fe5e6417d2d9cc
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ace123c2b38feb57041e182b020867465
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a6e079f3eb43b817b02f47498a6900fc7
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a1e91e3749cd9f6b62e12a341b6328c44
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a7b1a8a2b8a2e7bb51acf2ce48b9ce1d0
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ac12e57c0c0087dfe7ae3a924db44ca6a
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a98b417390e2c732aa48af483f318049a
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a324d414eb6ec27fd25fa83f5c80aab58
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a11ba4f138f2c7315d42d6f11ceec9b9e
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a571b973c7e548fd2a72d7f423af96e68
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a3e98c8151145f3ad789f65deaf1c7403
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a3bd49d7548354d207403abf9d0a070f4
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ad1199a233f15217f7feacdabd8f3bf95
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ad772a73b89d375864db540346d3f7e4a
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a5e1fb5a00c0572caacbc489a775064e7
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a529a62c11de7a9ce98eb4996bcfffe45
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ac6117ee4634760d6f48d6e6d46314274
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ac47871a3368e73e074622c9b3c45b5dd
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a8ace7f9035c0c2836a36f78db1e5f76c
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a3e6acd24c58b691733b99414a589c6c2
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a3257cbcc1fd1e9a1f7d11e98033ca875
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: FilesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl
  type: Class
  source:
    remote: &o0
      path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 65
  package: com.microsoft.azure.batch.protocol.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class FilesImpl implements Files
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.batch.protocol._files
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1afc4c8cb6c24eb808938cf2b74e0e54b5
  id: _files_impl_1afc4c8cb6c24eb808938cf2b74e0e54b5
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 899
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ab12cbfd508f459270691f43d4e310fc4
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a22d1b5eff79124a0449427602665b052
  id: _files_impl_1a22d1b5eff79124a0449427602665b052
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 993
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a90fad1cd899c2e323691f0023d5a40a1
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a14976d6737f1a73401071df928ed65f4
  id: _files_impl_1a14976d6737f1a73401071df928ed65f4
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1042
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a68ccfb638a68e32953a8612976ebbbcf
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ab38b116443f6fa3ab8eb6e11f5381d2e
  id: _files_impl_1ab38b116443f6fa3ab8eb6e11f5381d2e
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 935
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a01fbe53aa179e43e2a651de0259065e8
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a5c42401887a77a9edd9064bf5e3fc4b0
  id: _files_impl_1a5c42401887a77a9edd9064bf5e3fc4b0
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 142
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ab7d0c90b0ad4dfc3318f4c655b230ed1
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1afd2f136d77d4cc3d575345309108e62e
  id: _files_impl_1afd2f136d77d4cc3d575345309108e62e
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 236
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aec57a679fc653f16abd5faf62f5b3844
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a094e19075549e58b290febea15ca096f
  id: _files_impl_1a094e19075549e58b290febea15ca096f
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 285
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1abea48057fc6b42e8414f998a3607e105
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ada8651122fb75f7eeb1a7aae72e55f1a
  id: _files_impl_1ada8651122fb75f7eeb1a7aae72e55f1a
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 178
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a0317d9104fcff247d8da11c464d5acf3
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a9e4b45e51b87693859112357cde48647
  id: _files_impl_1a9e4b45e51b87693859112357cde48647
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl.FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  type: Constructor
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 77
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.batch.protocol.implementation._files_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1aa83df171c20a849aa1245aeb04f23602
  id: _files_impl_1aa83df171c20a849aa1245aeb04f23602
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1116
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a3b61e562e90cd98896e36853e86d1354
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a804ecc0872a91b8de0a57beb9d486da6
  id: _files_impl_1a804ecc0872a91b8de0a57beb9d486da6
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1229
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a5e16a60170144a2be2bfcf8b09fb25fb
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a1734341f1db3614555c91ced3015307d
  id: _files_impl_1a1734341f1db3614555c91ced3015307d
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1297
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a87e9aaef8b27f31214c870ea60dc6908
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a56ce100e3260024c188c80540de77076
  id: _files_impl_1a56ce100e3260024c188c80540de77076
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1162
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1adae029a57290ed28f53bf20025305bc4
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a62ab25edc93e20e209e7a09c4a369a20
  id: _files_impl_1a62ab25edc93e20e209e7a09c4a369a20
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 359
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aa5f7c5ca8dc3a8d6974c0b00e545943a
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ae3c9a9009ad418cf865a99e20589f489
  id: _files_impl_1ae3c9a9009ad418cf865a99e20589f489
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 472
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a2940b81d210a3f9203b82a1058c33596
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a2c3cecea5cd97ac0748bc78fac9bb0cc
  id: _files_impl_1a2c3cecea5cd97ac0748bc78fac9bb0cc
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 540
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aea21ab4caf44f62cfc68fbe36bcb935d
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1abcb0b78d5f059a88361ad798f52e4249
  id: _files_impl_1abcb0b78d5f059a88361ad798f52e4249
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 405
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a0c8c8c93995d0b225c026c6c5499e998
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a14a1fc32abdd0a3ef503821087f23c00
  id: _files_impl_1a14a1fc32abdd0a3ef503821087f23c00
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1391
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a4a96401869b6eb3a45cfc7f3fe278dcd
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a89de2986277ed4ee3eb890d75e08f3ff
  id: _files_impl_1a89de2986277ed4ee3eb890d75e08f3ff
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1502
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a8129f9997c45868e4616b3430e1eb65a
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a2d301c2052d6faf748b8e50c9ec34ed0
  id: _files_impl_1a2d301c2052d6faf748b8e50c9ec34ed0
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1566
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a5e647eed38c688d062958eb3943be8cd
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1aaef7b1d90fb3ff2a46fe5e6417d2d9cc
  id: _files_impl_1aaef7b1d90fb3ff2a46fe5e6417d2d9cc
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1436
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a90a56668a96ca21eea4b58f1e2d5993f
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ace123c2b38feb57041e182b020867465
  id: _files_impl_1ace123c2b38feb57041e182b020867465
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 634
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a989453d5fd7b68011ae322ea5f0dcd36
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a6e079f3eb43b817b02f47498a6900fc7
  id: _files_impl_1a6e079f3eb43b817b02f47498a6900fc7
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 745
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a3eca184458f0c62153b324503ee5ee86
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a1e91e3749cd9f6b62e12a341b6328c44
  id: _files_impl_1a1e91e3749cd9f6b62e12a341b6328c44
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 809
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aea5e75c34e9ddce8cde4ff5d921854c1
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a7b1a8a2b8a2e7bb51acf2ce48b9ce1d0
  id: _files_impl_1a7b1a8a2b8a2e7bb51acf2ce48b9ce1d0
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 679
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a6176b9b5243c6843715d052eab3308b2
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ac12e57c0c0087dfe7ae3a924db44ca6a
  id: _files_impl_1ac12e57c0c0087dfe7ae3a924db44ca6a
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNode(final String poolId, final String nodeId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNode(final String poolId, final String nodeId)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1916
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ac1a1b5da8196fcd8daaa613a9fd1e499
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a98b417390e2c732aa48af483f318049a
  id: _files_impl_1a98b417390e2c732aa48af483f318049a
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2019
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ad2b7abd68bcb094f4e11497d8bc6b515
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a324d414eb6ec27fd25fa83f5c80aab58
  id: _files_impl_1a324d414eb6ec27fd25fa83f5c80aab58
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2086
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ac90c7d865d4c4e8bf1f25407da0c92b9
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a11ba4f138f2c7315d42d6f11ceec9b9e
  id: _files_impl_1a11ba4f138f2c7315d42d6f11ceec9b9e
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1957
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a41cd3dedca18075debacfc81cd7d424a
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a571b973c7e548fd2a72d7f423af96e68
  id: _files_impl_1a571b973c7e548fd2a72d7f423af96e68
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNext(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2343
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aaf4929ef6b5f434fc15255d441dbec35
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a3e98c8151145f3ad789f65deaf1c7403
  id: _files_impl_1a3e98c8151145f3ad789f65deaf1c7403
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2414
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ad7028bfbaaedf590fe5d7228cde8f3cc
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a3bd49d7548354d207403abf9d0a070f4
  id: _files_impl_1a3bd49d7548354d207403abf9d0a070f4
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2448
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a315808c739a3f26042231ce7948407d6
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ad1199a233f15217f7feacdabd8f3bf95
  id: _files_impl_1ad1199a233f15217f7feacdabd8f3bf95
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2367
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ad7f65cfea682f5c9ee5918b805ec3fd9
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ad772a73b89d375864db540346d3f7e4a
  id: _files_impl_1ad772a73b89d375864db540346d3f7e4a
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTask(final String jobId, final String taskId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTask(final String jobId, final String taskId)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1655
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a0566205c28aad5e58757b495532ae46e
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a5e1fb5a00c0572caacbc489a775064e7
  id: _files_impl_1a5e1fb5a00c0572caacbc489a775064e7
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1758
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a25d33007182632c6162d83614d2a9ba9
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a529a62c11de7a9ce98eb4996bcfffe45
  id: _files_impl_1a529a62c11de7a9ce98eb4996bcfffe45
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1825
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a77139b837a29d4e5a4a0af7f17ab84d7
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ac6117ee4634760d6f48d6e6d46314274
  id: _files_impl_1ac6117ee4634760d6f48d6e6d46314274
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1696
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1af05951d3e0732f06c02bf2fe30bb8df2
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ac47871a3368e73e074622c9b3c45b5dd
  id: _files_impl_1ac47871a3368e73e074622c9b3c45b5dd
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNext(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2176
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a055bb057336c1b9c4c33456b599271df
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a8ace7f9035c0c2836a36f78db1e5f76c
  id: _files_impl_1a8ace7f9035c0c2836a36f78db1e5f76c
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2247
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a1adbea84c2fd3b1f1c59c3fd1cb69220
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a3e6acd24c58b691733b99414a589c6c2
  id: _files_impl_1a3e6acd24c58b691733b99414a589c6c2
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2281
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a4fccfe98b5e35db59a27f2552ffe365f
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a3257cbcc1fd1e9a1f7d11e98033ca875
  id: _files_impl_1a3257cbcc1fd1e9a1f7d11e98033ca875
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2200
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a29e7b5f5d21d15ec2667b23dfb27bee0
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers
    name: FileDeleteFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callbacke35e5465
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: < Void >
    fullName: < Void >
- uid: com.microsoft.rest._service_calle35e5465
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: < Void >
    fullName: < Void >
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< InputStream, '
    fullName: '< InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers
    name: FileGetFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callback7f11b53f
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
    href: com.microsoft.rest._service_callback.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: com.microsoft.rest._service_call7f11b53f
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers
    name: FileGetNodeFilePropertiesFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers
    name: FileDeleteFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< InputStream, '
    fullName: '< InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers
    name: FileGetFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers
    name: FileGetNodeFilePropertiesFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure._paged_list
    name: PagedList
    fullName: com.microsoft.azure.PagedList
    href: com.microsoft.azure._paged_list.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >, "
    fullName: " >, "
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
    name: FileListFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure._list_operation_callback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
    href: com.microsoft.azure._list_operation_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >"
    fullName: " >"
- uid: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
  spec.java:
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< List< '
    fullName: '< List< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " > >"
    fullName: " > >"
- uid: 2ec468d1
  spec.java:
  - name: final Boolean
    fullName: final Boolean
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_options
    name: FileListFromTaskOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure._paged_list
    name: PagedList
    fullName: com.microsoft.azure.PagedList
    href: com.microsoft.azure._paged_list.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >, "
    fullName: " >, "
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
    name: FileListFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
    name: FileListFromComputeNodeOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._page_impl
    name: PageImpl
    fullName: com.microsoft.azure.batch.protocol.models.PageImpl
    href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >, "
    fullName: " >, "
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
    name: FileListFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
  - name: '< List< '
    fullName: '< List< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >>"
    fullName: " >>"
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
    name: FileListFromTaskNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskNextOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._page_impl
    name: PageImpl
    fullName: com.microsoft.azure.batch.protocol.models.PageImpl
    href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: " >, "
    fullName: " >, "
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
    name: FileListFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  - name: " >"
    fullName: " >"
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
    name: FileListFromComputeNodeNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeNextOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options.yml
- uid: com.microsoft.azure.batch.protocol._files
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._files.yml
  name: Files
  fullName: com.microsoft.azure.batch.protocol.Files
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface Files
- uid: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl.yml
  name: BatchServiceClientImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.BatchServiceClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class BatchServiceClientImpl extends AzureServiceClient implements BatchServiceClient
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  name: FilesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.rest._service_response_with_headers
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_response_with_headers.yml
  name: ServiceResponseWithHeaders<TBody,THeader>
  fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
  type: Class
  summary: >-
    <p>An instance of this class holds a response object and a raw REST response.</p>

    <p></p>
  syntax:
    content: public class ServiceResponseWithHeaders<TBody,THeader>
    typeParameters:
    - type: 0063fec6
      description: <p>the type of the response </p>
    - type: "77199363"
      description: <p>the type of the response header object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers.yml
  name: FileDeleteFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders
  type: Class
  summary: <p>Defines headers for DeleteFromTask operation. </p>
  syntax:
    content: public class FileDeleteFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files_1ab7d0c90b0ad4dfc3318f4c655b230ed1
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._batch_error_exception
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._batch_error_exception.yml
  name: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.batch.protocol.models._batch_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class BatchErrorException extends RestException
- uid: com.microsoft.rest._service_call
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_call.yml
  name: ServiceCall<T>
  fullName: com.microsoft.rest.ServiceCall<T>
  type: Class
  summary: >-
    <p>An instance of this class provides access to the underlying REST call invocation. This class wraps around the Retrofit Call object and allows updates to it in the progress of a long running operation or a paging operation.</p>

    <p></p>
  syntax:
    content: public class ServiceCall<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the returning object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a0317d9104fcff247d8da11c464d5acf3
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.rest._service_callback
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_callback.yml
  name: ServiceCallback<T>
  fullName: com.microsoft.rest.ServiceCallback<T>
  type: Class
  summary: >-
    <p>The callback used for client side asynchronous operations.</p>

    <p></p>
  syntax:
    content: public class ServiceCallback<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the response </p>
- uid: com.microsoft.azure.batch.protocol._files_1aec57a679fc653f16abd5faf62f5b3844
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options.yml
  name: FileDeleteFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_DeleteFromTask operation. </p>
  syntax:
    content: public class FileDeleteFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files_1abea48057fc6b42e8414f998a3607e105
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers.yml
  name: FileGetFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders
  type: Class
  summary: <p>Defines headers for GetFromTask operation. </p>
  syntax:
    content: public class FileGetFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files_1aa5f7c5ca8dc3a8d6974c0b00e545943a
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a0c8c8c93995d0b225c026c6c5499e998
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a2940b81d210a3f9203b82a1058c33596
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_task_options.yml
  name: FileGetFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_GetFromTask operation. </p>
  syntax:
    content: public class FileGetFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files_1aea21ab4caf44f62cfc68fbe36bcb935d
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers.yml
  name: FileGetNodeFilePropertiesFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskHeaders
  type: Class
  summary: <p>Defines headers for GetNodeFilePropertiesFromTask operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files_1a989453d5fd7b68011ae322ea5f0dcd36
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a6176b9b5243c6843715d052eab3308b2
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a3eca184458f0c62153b324503ee5ee86
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options.yml
  name: FileGetNodeFilePropertiesFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_GetNodeFilePropertiesFromTask operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files_1aea5e75c34e9ddce8cde4ff5d921854c1
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers.yml
  name: FileDeleteFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for DeleteFromComputeNode operation. </p>
  syntax:
    content: public class FileDeleteFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files_1ab12cbfd508f459270691f43d4e310fc4
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a01fbe53aa179e43e2a651de0259065e8
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a90fad1cd899c2e323691f0023d5a40a1
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options.yml
  name: FileDeleteFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_DeleteFromComputeNode operation. </p>
  syntax:
    content: public class FileDeleteFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files_1a68ccfb638a68e32953a8612976ebbbcf
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers.yml
  name: FileGetFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for GetFromComputeNode operation. </p>
  syntax:
    content: public class FileGetFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files_1a3b61e562e90cd98896e36853e86d1354
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1adae029a57290ed28f53bf20025305bc4
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a5e16a60170144a2be2bfcf8b09fb25fb
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options.yml
  name: FileGetFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_GetFromComputeNode operation. </p>
  syntax:
    content: public class FileGetFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files_1a87e9aaef8b27f31214c870ea60dc6908
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall<InputStream> com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< InputStream > getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call7f11b53f
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers.yml
  name: FileGetNodeFilePropertiesFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for GetNodeFilePropertiesFromComputeNode operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files_1a4a96401869b6eb3a45cfc7f3fe278dcd
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a90a56668a96ca21eea4b58f1e2d5993f
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a8129f9997c45868e4616b3430e1eb65a
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options.yml
  name: FileGetNodeFilePropertiesFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_GetNodeFilePropertiesFromComputeNode operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files_1a5e647eed38c688d062958eb3943be8cd
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall<Void> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall< Void > getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_calle35e5465
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure._paged_list
  parent: com.microsoft.azure
  href: com.microsoft.azure._paged_list.yml
  name: PagedList<E>
  fullName: com.microsoft.azure.PagedList<E>
  type: Class
  summary: >-
    <p>Defines a list response from a paging operation. The pages are lazy initialized when an instance of this class is iterated.</p>

    <p></p>
  syntax:
    content: public class PagedList<E>
    typeParameters:
    - type: 0ca03e3a
      description: <p>the element type. </p>
- uid: com.microsoft.azure.batch.protocol.models._node_file
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._node_file.yml
  name: NodeFile
  fullName: com.microsoft.azure.batch.protocol.models.NodeFile
  type: Class
  summary: <p>Information about a file or directory on a compute node. </p>
  syntax:
    content: public class NodeFile
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  name: FileListFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
  type: Class
  summary: <p>Defines headers for ListFromTask operation. </p>
  syntax:
    content: public class FileListFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files_1a0566205c28aad5e58757b495532ae46e
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTask(final String jobId, final String taskId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1af05951d3e0732f06c02bf2fe30bb8df2
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure._list_operation_callback
  parent: com.microsoft.azure
  href: com.microsoft.azure._list_operation_callback.yml
  name: ListOperationCallback<E>
  fullName: com.microsoft.azure.ListOperationCallback<E>
  type: Class
  summary: >-
    <p>The callback used for client side asynchronous list operations.</p>

    <p></p>
  syntax:
    content: public class ListOperationCallback<E>
    typeParameters:
    - type: 0ca03e3a
      description: <p>the item type </p>
- uid: com.microsoft.azure.batch.protocol._files_1a25d33007182632c6162d83614d2a9ba9
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_options.yml
  name: FileListFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_ListFromTask operation. </p>
  syntax:
    content: public class FileListFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files_1a77139b837a29d4e5a4a0af7f17ab84d7
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  name: FileListFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for ListFromComputeNode operation. </p>
  syntax:
    content: public class FileListFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files_1ac1a1b5da8196fcd8daaa613a9fd1e499
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNode(final String poolId, final String nodeId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a41cd3dedca18075debacfc81cd7d424a
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1ad2b7abd68bcb094f4e11497d8bc6b515
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options.yml
  name: FileListFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_ListFromComputeNode operation. </p>
  syntax:
    content: public class FileListFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files_1ac90c7d865d4c4e8bf1f25407da0c92b9
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._page_impl
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  name: PageImpl<T>
  fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
  type: Class
  summary: >-
    <p>An instance of this class defines a page of <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> resources and a link to get the next page of resources, if any.</p>

    <p></p>
  syntax:
    content: public class PageImpl<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>type of <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> resource </p>
- uid: com.microsoft.azure.batch.protocol._files_1a055bb057336c1b9c4c33456b599271df
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTaskNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a29e7b5f5d21d15ec2667b23dfb27bee0
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a1adbea84c2fd3b1f1c59c3fd1cb69220
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options.yml
  name: FileListFromTaskNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskNextOptions
  type: Class
  summary: <p>Additional parameters for the ListFromTaskNext operation. </p>
  syntax:
    content: public class FileListFromTaskNextOptions
- uid: com.microsoft.azure.batch.protocol._files_1a4fccfe98b5e35db59a27f2552ffe365f
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1aaf4929ef6b5f434fc15255d441dbec35
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1ad7f65cfea682f5c9ee5918b805ec3fd9
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1ad7028bfbaaedf590fe5d7228cde8f3cc
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options.yml
  name: FileListFromComputeNodeNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeNextOptions
  type: Class
  summary: <p>Additional parameters for the ListFromComputeNodeNext operation. </p>
  syntax:
    content: public class FileListFromComputeNodeNextOptions
- uid: com.microsoft.azure.batch.protocol._files_1a315808c739a3f26042231ce7948407d6
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall<List<NodeFile> > com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall< List< NodeFile > > listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall< List< NodeFile >> serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filec8b8729b
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_callf93d48dacom.microsoft.azure.batch.protocol.models._node_filed4c4bc88
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
