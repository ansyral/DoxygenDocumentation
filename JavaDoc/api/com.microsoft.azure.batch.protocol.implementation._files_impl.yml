items:
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl
  id: _files_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  children:
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1afc4c8cb6c24eb808938cf2b74e0e54b5
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a22d1b5eff79124a0449427602665b052
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a68e31e5364d5bbde3f22d48aaf42cd37
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a5832ddd3fb5b163c8daf62e989af714d
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a5c42401887a77a9edd9064bf5e3fc4b0
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1afd2f136d77d4cc3d575345309108e62e
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a88b78bf98890b1f1429abb4a945a6f3c
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a09d332a42ccc7383ab6979282af95282
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a9e4b45e51b87693859112357cde48647
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1aa83df171c20a849aa1245aeb04f23602
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a804ecc0872a91b8de0a57beb9d486da6
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a8f5c739f39783cde50f125bc9a1e2376
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a5cf111de42ca09592bdb0a59720c8baa
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a62ab25edc93e20e209e7a09c4a369a20
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ae3c9a9009ad418cf865a99e20589f489
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1acad96601abde7664da075739803a1fdb
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a43b6369a417ed1536ae6664d155096bd
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a14a1fc32abdd0a3ef503821087f23c00
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a89de2986277ed4ee3eb890d75e08f3ff
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a7c87b47c1fa1ded7fbed7859fa3195dd
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a87bc52918339c634f31b4542cd6980a8
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ace123c2b38feb57041e182b020867465
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a6e079f3eb43b817b02f47498a6900fc7
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1abbf2742984da5dbfe3fac7ea7cfea208
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a211adae0bf7442d9769552203461cccb
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ac12e57c0c0087dfe7ae3a924db44ca6a
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a98b417390e2c732aa48af483f318049a
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a2b2764e96ae4915e644c274ee20356a9
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a8bce81eaa2d2dcc439204293750ff130
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a571b973c7e548fd2a72d7f423af96e68
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a3e98c8151145f3ad789f65deaf1c7403
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a6863fe0d5703526bbd0f5df98ddbf31a
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1af17c2510d8845d630802ba97833348f2
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ad772a73b89d375864db540346d3f7e4a
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a5e1fb5a00c0572caacbc489a775064e7
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ac2a3905d1fb8da82a4759a8fe0007bdc
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a41c9a6be4697d7b190d6bd011f2a7630
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ac47871a3368e73e074622c9b3c45b5dd
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a8ace7f9035c0c2836a36f78db1e5f76c
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1ae7736f4732fb03d7899b239be10d9edc
  - com.microsoft.azure.batch.protocol.implementation._files_impl_1a618947a9af1148e59e27dcb251ed894f
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: FilesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl
  type: Class
  source:
    remote: &o0
      path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 66
  package: com.microsoft.azure.batch.protocol.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class FilesImpl implements Files
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.batch.protocol._files
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1afc4c8cb6c24eb808938cf2b74e0e54b5
  id: _files_impl_1afc4c8cb6c24eb808938cf2b74e0e54b5
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 906
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ab12cbfd508f459270691f43d4e310fc4
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a22d1b5eff79124a0449427602665b052
  id: _files_impl_1a22d1b5eff79124a0449427602665b052
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1001
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a90fad1cd899c2e323691f0023d5a40a1
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a68e31e5364d5bbde3f22d48aaf42cd37
  id: _files_impl_1a68e31e5364d5bbde3f22d48aaf42cd37
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1051
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a6103a2eed9417847c6ad391ad2bfda1b
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a5832ddd3fb5b163c8daf62e989af714d
  id: _files_impl_1a5832ddd3fb5b163c8daf62e989af714d
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 943
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a5a9e1e7a1b86f09f325a1632b0d3d5d0
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a5c42401887a77a9edd9064bf5e3fc4b0
  id: _files_impl_1a5c42401887a77a9edd9064bf5e3fc4b0
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 143
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ab7d0c90b0ad4dfc3318f4c655b230ed1
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1afd2f136d77d4cc3d575345309108e62e
  id: _files_impl_1afd2f136d77d4cc3d575345309108e62e
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 238
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aec57a679fc653f16abd5faf62f5b3844
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a88b78bf98890b1f1429abb4a945a6f3c
  id: _files_impl_1a88b78bf98890b1f1429abb4a945a6f3c
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 288
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ab9d2f247b66e9b889e653a76803d467d
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a09d332a42ccc7383ab6979282af95282
  id: _files_impl_1a09d332a42ccc7383ab6979282af95282
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 180
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a3313987ac931edea999553b5d4a33c56
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a9e4b45e51b87693859112357cde48647
  id: _files_impl_1a9e4b45e51b87693859112357cde48647
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl.FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  type: Constructor
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 78
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.batch.protocol.implementation._files_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public FilesImpl(Retrofit retrofit, BatchServiceClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1aa83df171c20a849aa1245aeb04f23602
  id: _files_impl_1aa83df171c20a849aa1245aeb04f23602
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1125
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a3b61e562e90cd98896e36853e86d1354
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a804ecc0872a91b8de0a57beb9d486da6
  id: _files_impl_1a804ecc0872a91b8de0a57beb9d486da6
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1239
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a5e16a60170144a2be2bfcf8b09fb25fb
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a8f5c739f39783cde50f125bc9a1e2376
  id: _files_impl_1a8f5c739f39783cde50f125bc9a1e2376
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1308
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a56a64de5877b34b027dcbef6ef7f32f8
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a5cf111de42ca09592bdb0a59720c8baa
  id: _files_impl_1a5cf111de42ca09592bdb0a59720c8baa
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1172
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a4a07f6ec302140f8ecf1a6fdb9bff862
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a62ab25edc93e20e209e7a09c4a369a20
  id: _files_impl_1a62ab25edc93e20e209e7a09c4a369a20
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 362
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aa5f7c5ca8dc3a8d6974c0b00e545943a
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ae3c9a9009ad418cf865a99e20589f489
  id: _files_impl_1ae3c9a9009ad418cf865a99e20589f489
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 476
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a2940b81d210a3f9203b82a1058c33596
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1acad96601abde7664da075739803a1fdb
  id: _files_impl_1acad96601abde7664da075739803a1fdb
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 545
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a4ecd0229fac49a203694fd6958311765
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a43b6369a417ed1536ae6664d155096bd
  id: _files_impl_1a43b6369a417ed1536ae6664d155096bd
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 409
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a11c9fe3179a750456cfee68c2db44111
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a14a1fc32abdd0a3ef503821087f23c00
  id: _files_impl_1a14a1fc32abdd0a3ef503821087f23c00
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1402
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a4a96401869b6eb3a45cfc7f3fe278dcd
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a89de2986277ed4ee3eb890d75e08f3ff
  id: _files_impl_1a89de2986277ed4ee3eb890d75e08f3ff
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1514
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a8129f9997c45868e4616b3430e1eb65a
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a7c87b47c1fa1ded7fbed7859fa3195dd
  id: _files_impl_1a7c87b47c1fa1ded7fbed7859fa3195dd
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1579
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ab1cd18641a47d1eb5dd50e8baef900e0
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a87bc52918339c634f31b4542cd6980a8
  id: _files_impl_1a87bc52918339c634f31b4542cd6980a8
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1448
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a8036a68746811fc460eefcc0ecf1c84e
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ace123c2b38feb57041e182b020867465
  id: _files_impl_1ace123c2b38feb57041e182b020867465
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 639
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a989453d5fd7b68011ae322ea5f0dcd36
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a6e079f3eb43b817b02f47498a6900fc7
  id: _files_impl_1a6e079f3eb43b817b02f47498a6900fc7
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 751
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a3eca184458f0c62153b324503ee5ee86
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1abbf2742984da5dbfe3fac7ea7cfea208
  id: _files_impl_1abbf2742984da5dbfe3fac7ea7cfea208
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 816
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a6ae427f81c218852ad42bac52c4a3a93
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a211adae0bf7442d9769552203461cccb
  id: _files_impl_1a211adae0bf7442d9769552203461cccb
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 685
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ae8b8617d9cdcc1b243819dad1008c1e5
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ac12e57c0c0087dfe7ae3a924db44ca6a
  id: _files_impl_1ac12e57c0c0087dfe7ae3a924db44ca6a
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNode(final String poolId, final String nodeId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNode(final String poolId, final String nodeId)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1931
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ac1a1b5da8196fcd8daaa613a9fd1e499
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a98b417390e2c732aa48af483f318049a
  id: _files_impl_1a98b417390e2c732aa48af483f318049a
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2035
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ad2b7abd68bcb094f4e11497d8bc6b515
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a2b2764e96ae4915e644c274ee20356a9
  id: _files_impl_1a2b2764e96ae4915e644c274ee20356a9
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2103
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a5f85a3eeaa038806091c1eed46925dde
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a8bce81eaa2d2dcc439204293750ff130
  id: _files_impl_1a8bce81eaa2d2dcc439204293750ff130
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1973
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1afc5fa93d2288b7947857c76256a9480d
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a571b973c7e548fd2a72d7f423af96e68
  id: _files_impl_1a571b973c7e548fd2a72d7f423af96e68
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNext(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2364
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aaf4929ef6b5f434fc15255d441dbec35
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a3e98c8151145f3ad789f65deaf1c7403
  id: _files_impl_1a3e98c8151145f3ad789f65deaf1c7403
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2437
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ad7028bfbaaedf590fe5d7228cde8f3cc
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a6863fe0d5703526bbd0f5df98ddbf31a
  id: _files_impl_1a6863fe0d5703526bbd0f5df98ddbf31a
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2472
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_call
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a6215ac3cc533558a66129defd7408d60
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1af17c2510d8845d630802ba97833348f2
  id: _files_impl_1af17c2510d8845d630802ba97833348f2
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2389
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_call
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a7ea8eb9b9a0f3a62d78bde2d310a88dd
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ad772a73b89d375864db540346d3f7e4a
  id: _files_impl_1ad772a73b89d375864db540346d3f7e4a
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTask(final String jobId, final String taskId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTask(final String jobId, final String taskId)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1668
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a0566205c28aad5e58757b495532ae46e
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a5e1fb5a00c0572caacbc489a775064e7
  id: _files_impl_1a5e1fb5a00c0572caacbc489a775064e7
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1772
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a25d33007182632c6162d83614d2a9ba9
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ac2a3905d1fb8da82a4759a8fe0007bdc
  id: _files_impl_1ac2a3905d1fb8da82a4759a8fe0007bdc
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1840
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aa0955917b6024e6fb2cda1a6673364b1
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a41c9a6be4697d7b190d6bd011f2a7630
  id: _files_impl_1a41c9a6be4697d7b190d6bd011f2a7630
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 1710
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aba60fb0a625305a8eefe72d274ebbc76
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ac47871a3368e73e074622c9b3c45b5dd
  id: _files_impl_1ac47871a3368e73e074622c9b3c45b5dd
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNext(final String nextPageLink)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2193
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a055bb057336c1b9c4c33456b599271df
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a8ace7f9035c0c2836a36f78db1e5f76c
  id: _files_impl_1a8ace7f9035c0c2836a36f78db1e5f76c
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2266
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._files_1a1adbea84c2fd3b1f1c59c3fd1cb69220
  exceptions:
  - type: c8683d81
    description: <p>exception thrown from REST call </p>
  - type: cbf33bbe
    description: <p>exception thrown from serialization/deserialization </p>
  - type: 3c87bd19
    description: <p>exception thrown from invalid parameters </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1ae7736f4732fb03d7899b239be10d9edc
  id: _files_impl_1ae7736f4732fb03d7899b239be10d9edc
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2301
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_call
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1ac94c59b416dc2d8a88deef70b9fdb6d0
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl_1a618947a9af1148e59e27dcb251ed894f
  id: _files_impl_1a618947a9af1148e59e27dcb251ed894f
  parent: com.microsoft.azure.batch.protocol.implementation._files_impl
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  langs:
  - java
  name: listFromTaskNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.implementation.FilesImpl.listFromTaskNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  source:
    remote: *o0
    path: azure-batch/src/main/java/com/microsoft/azure/batch/protocol/implementation/FilesImpl.java
    startLine: 2218
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromTaskNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_call
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">Call</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._files_1aa1d0fe98ca43f94de75d06607e9d7ac5
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if callback is null </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers
    name: FileDeleteFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.rest._service_callbacke35e5465
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: < Void >
    fullName: < Void >
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< InputStream, '
    fullName: '< InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers
    name: FileGetFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.rest._service_callback7f11b53f
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_callback
    name: ServiceCallback<T>
    fullName: com.microsoft.rest.ServiceCallback<T>
    href: com.microsoft.rest._service_callback.yml
  - name: < InputStream >
    fullName: < InputStream >
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers
    name: FileGetNodeFilePropertiesFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers
    name: FileDeleteFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< InputStream, '
    fullName: '< InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers
    name: FileGetFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< Void, '
    fullName: '< Void, '
  - uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers
    name: FileGetNodeFilePropertiesFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure._paged_list
    name: PagedList<E>
    fullName: com.microsoft.azure.PagedList<E>
    href: com.microsoft.azure._paged_list.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: ' >, '
    fullName: ' >, '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
    name: FileListFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure._list_operation_callback
    name: ListOperationCallback<E>
    fullName: com.microsoft.azure.ListOperationCallback<E>
    href: com.microsoft.azure._list_operation_callback.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: ' >'
    fullName: ' >'
- uid: 2ec468d1
  spec.java:
  - name: final Boolean
    fullName: final Boolean
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_options
    name: FileListFromTaskOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure._paged_list
    name: PagedList<E>
    fullName: com.microsoft.azure.PagedList<E>
    href: com.microsoft.azure._paged_list.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: ' >, '
    fullName: ' >, '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
    name: FileListFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
    name: FileListFromComputeNodeOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._page_impl
    name: PageImpl<T>
    fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
    href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: ' >, '
    fullName: ' >, '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
    name: FileListFromTaskHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.rest._service_call
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.rest._service_call
    name: ServiceCall
    fullName: com.microsoft.rest.ServiceCall
    href: com.microsoft.rest._service_call.yml
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
    name: FileListFromTaskNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskNextOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options.yml
- uid: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
  spec.java:
  - uid: com.microsoft.rest._service_response_with_headers
    name: ServiceResponseWithHeaders<TBody,THeader>
    fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
    href: com.microsoft.rest._service_response_with_headers.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._page_impl
    name: PageImpl<T>
    fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
    href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  - name: '< '
    fullName: '< '
  - uid: com.microsoft.azure.batch.protocol.models._node_file
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
    href: com.microsoft.azure.batch.protocol.models._node_file.yml
  - name: ' >, '
    fullName: ' >, '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
    name: FileListFromComputeNodeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  - name: ' >'
    fullName: ' >'
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
    name: FileListFromComputeNodeNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeNextOptions
    href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options.yml
- uid: com.microsoft.azure.batch.protocol._files
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._files.yml
  name: Files
  fullName: com.microsoft.azure.batch.protocol.Files
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface Files
- uid: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl.yml
  name: BatchServiceClientImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.BatchServiceClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class BatchServiceClientImpl extends AzureServiceClient implements BatchServiceClient
- uid: com.microsoft.azure.batch.protocol.implementation._files_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._files_impl.yml
  name: FilesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.FilesImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._files" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.rest._service_response_with_headers
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_response_with_headers.yml
  name: ServiceResponseWithHeaders<TBody,THeader>
  fullName: com.microsoft.rest.ServiceResponseWithHeaders<TBody,THeader>
  type: Class
  summary: >-
    <p>An instance of this class holds a response object and a raw REST response.</p>

    <p></p>
  syntax:
    content: public class ServiceResponseWithHeaders<TBody,THeader>
    typeParameters:
    - type: 0063fec6
      description: <p>the type of the response </p>
    - type: "77199363"
      description: <p>the type of the response header object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers.yml
  name: FileDeleteFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskHeaders
  type: Class
  summary: <p>Defines headers for DeleteFromTask operation. </p>
  syntax:
    content: public class FileDeleteFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files_1ab7d0c90b0ad4dfc3318f4c655b230ed1
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._batch_error_exception
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._batch_error_exception.yml
  name: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.batch.protocol.models._batch_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class BatchErrorException extends RestException
- uid: com.microsoft.rest._service_call
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_call.yml
  name: ServiceCall
  fullName: com.microsoft.rest.ServiceCall
  type: Class
  summary: <p>An instance of this class provides access to the underlying REST call invocation. This class wraps around the Retrofit Call object and allows updates to it in the progress of a long running operation or a paging operation. </p>
  syntax:
    content: public class ServiceCall
- uid: com.microsoft.azure.batch.protocol._files_1a3313987ac931edea999553b5d4a33c56
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.rest._service_callback
  parent: com.microsoft.rest
  href: com.microsoft.rest._service_callback.yml
  name: ServiceCallback<T>
  fullName: com.microsoft.rest.ServiceCallback<T>
  type: Class
  summary: >-
    <p>The callback used for client side asynchronous operations.</p>

    <p></p>
  syntax:
    content: public class ServiceCallback<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>the type of the response </p>
- uid: com.microsoft.azure.batch.protocol._files_1aec57a679fc653f16abd5faf62f5b3844
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromTaskHeaders > deleteFromTask(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options.yml
  name: FileDeleteFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_DeleteFromTask operation. </p>
  syntax:
    content: public class FileDeleteFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files_1ab9d2f247b66e9b889e653a76803d467d
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node where the task ran.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteFromTaskAsync(String jobId, String taskId, String fileName, Boolean recursive, FileDeleteFromTaskOptions fileDeleteFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to delete. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_task_headers.yml
  name: FileGetFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders
  type: Class
  summary: <p>Defines headers for GetFromTask operation. </p>
  syntax:
    content: public class FileGetFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files_1aa5f7c5ca8dc3a8d6974c0b00e545943a
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a11c9fe3179a750456cfee68c2db44111
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a2940b81d210a3f9203b82a1058c33596
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromTaskHeaders > getFromTask(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_task_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_task_options.yml
  name: FileGetFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_GetFromTask operation. </p>
  syntax:
    content: public class FileGetFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files_1a4ecd0229fac49a203694fd6958311765
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFromTaskAsync(String jobId, String taskId, String fileName, FileGetFromTaskOptions fileGetFromTaskOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to retrieve. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers.yml
  name: FileGetNodeFilePropertiesFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskHeaders
  type: Class
  summary: <p>Defines headers for GetNodeFilePropertiesFromTask operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files_1a989453d5fd7b68011ae322ea5f0dcd36
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1ae8b8617d9cdcc1b243819dad1008c1e5
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a3eca184458f0c62153b324503ee5ee86
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromTaskHeaders > getNodeFilePropertiesFromTask(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options.yml
  name: FileGetNodeFilePropertiesFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_GetNodeFilePropertiesFromTask operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files_1a6ae427f81c218852ad42bac52c4a3a93
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getNodeFilePropertiesFromTaskAsync(String jobId, String taskId, String fileName, FileGetNodeFilePropertiesFromTaskOptions fileGetNodeFilePropertiesFromTaskOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: jobId
      type: "26831127"
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: "26831127"
      description: <p>The id of the task whose file you want to get the properties of. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromTaskOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers.yml
  name: FileDeleteFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for DeleteFromComputeNode operation. </p>
  syntax:
    content: public class FileDeleteFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files_1ab12cbfd508f459270691f43d4e310fc4
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a5a9e1e7a1b86f09f325a1632b0d3d5d0
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a90fad1cd899c2e323691f0023d5a40a1
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileDeleteFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileDeleteFromComputeNodeHeaders > deleteFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options.yml
  name: FileDeleteFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileDeleteFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_DeleteFromComputeNode operation. </p>
  syntax:
    content: public class FileDeleteFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files_1a6103a2eed9417847c6ad391ad2bfda1b
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Deletes the specified task file from the compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall deleteFromComputeNodeAsync(String poolId, String nodeId, String fileName, Boolean recursive, FileDeleteFromComputeNodeOptions fileDeleteFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node from which you want to delete the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the file that you want to delete. </p>
    - id: recursive
      type: 866c2227
      description: <p>Whether to delete children of a directory. If the fileName parameter represents a directory instead of a file, you can set Recursive to true to delete the directory and all of the files and subdirectories in it. If Recursive is false then the directory must be empty or deletion will fail. </p>
    - id: fileDeleteFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_delete_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers.yml
  name: FileGetFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for GetFromComputeNode operation. </p>
  syntax:
    content: public class FileGetFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files_1a3b61e562e90cd98896e36853e86d1354
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a4a07f6ec302140f8ecf1a6fdb9bff862
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a5e16a60170144a2be2bfcf8b09fb25fb
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<InputStream, FileGetFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< InputStream, FileGetFromComputeNodeHeaders > getFromComputeNode(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers4de3300dcom.microsoft.azure.batch.protocol.models._file_get_from_compute_node_headers9ec3e006
      description: <p>the InputStream object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options.yml
  name: FileGetFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_GetFromComputeNode operation. </p>
  syntax:
    content: public class FileGetFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files_1a56a64de5877b34b027dcbef6ef7f32f8
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
  type: Method
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetFromComputeNodeOptions fileGetFromComputeNodeOptions, final ServiceCallback< InputStream > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the task file that you want to get the content of. </p>
    - id: fileGetFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callback7f11b53f
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers.yml
  name: FileGetNodeFilePropertiesFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for GetNodeFilePropertiesFromComputeNode operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files_1a4a96401869b6eb3a45cfc7f3fe278dcd
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a8036a68746811fc460eefcc0ecf1c84e
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a8129f9997c45868e4616b3430e1eb65a
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<Void, FileGetNodeFilePropertiesFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< Void, FileGetNodeFilePropertiesFromComputeNodeHeaders > getNodeFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headersd167e849com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_headers9ec3e006
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options.yml
  name: FileGetNodeFilePropertiesFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileGetNodeFilePropertiesFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_GetNodeFilePropertiesFromComputeNode operation. </p>
  syntax:
    content: public class FileGetNodeFilePropertiesFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files_1ab1cd18641a47d1eb5dd50e8baef900e0
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
  type: Method
  summary: >-
    <p>Gets the properties of the specified compute node file.</p>

    <p></p>
  syntax:
    content: public ServiceCall getNodeFilePropertiesFromComputeNodeAsync(String poolId, String nodeId, String fileName, FileGetNodeFilePropertiesFromComputeNodeOptions fileGetNodeFilePropertiesFromComputeNodeOptions, final ServiceCallback< Void > serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The id of the compute node that contains the file. </p>
    - id: fileName
      type: "26831127"
      description: <p>The path to the compute node file that you want to get the properties of. </p>
    - id: fileGetNodeFilePropertiesFromComputeNodeOptions
      type: com.microsoft.azure.batch.protocol.models._file_get_node_file_properties_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.rest._service_callbacke35e5465
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure._paged_list
  parent: com.microsoft.azure
  href: com.microsoft.azure._paged_list.yml
  name: PagedList<E>
  fullName: com.microsoft.azure.PagedList<E>
  type: Class
  summary: >-
    <p>Defines a list response from a paging operation. The pages are lazy initialized when an instance of this class is iterated.</p>

    <p></p>
  syntax:
    content: public class PagedList<E>
    typeParameters:
    - type: 0ca03e3a
      description: <p>the element type. </p>
- uid: com.microsoft.azure.batch.protocol.models._node_file
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._node_file.yml
  name: NodeFile
  fullName: com.microsoft.azure.batch.protocol.models.NodeFile
  type: Class
  summary: <p>Information about a file or directory on a compute node. </p>
  syntax:
    content: public class NodeFile
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_headers.yml
  name: FileListFromTaskHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskHeaders
  type: Class
  summary: <p>Defines headers for ListFromTask operation. </p>
  syntax:
    content: public class FileListFromTaskHeaders
- uid: com.microsoft.azure.batch.protocol._files_1a0566205c28aad5e58757b495532ae46e
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTask(final String jobId, final String taskId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1aba60fb0a625305a8eefe72d274ebbc76
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromTaskAsync(final String jobId, final String taskId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure._list_operation_callback
  parent: com.microsoft.azure
  href: com.microsoft.azure._list_operation_callback.yml
  name: ListOperationCallback<E>
  fullName: com.microsoft.azure.ListOperationCallback<E>
  type: Class
  summary: >-
    <p>The callback used for client side asynchronous list operations.</p>

    <p></p>
  syntax:
    content: public class ListOperationCallback<E>
    typeParameters:
    - type: 0ca03e3a
      description: <p>the item type </p>
- uid: com.microsoft.azure.batch.protocol._files_1a25d33007182632c6162d83614d2a9ba9
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromTaskHeaders > listFromTask(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_options.yml
  name: FileListFromTaskOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskOptions
  type: Class
  summary: <p>Additional parameters for the File_ListFromTask operation. </p>
  syntax:
    content: public class FileListFromTaskOptions
- uid: com.microsoft.azure.batch.protocol._files_1aa0955917b6024e6fb2cda1a6673364b1
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromTaskAsync(final String jobId, final String taskId, final Boolean recursive, final FileListFromTaskOptions fileListFromTaskOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: jobId
      type: 3d93591e
      description: <p>The id of the job that contains the task. </p>
    - id: taskId
      type: 3d93591e
      description: <p>The id of the task whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromTaskOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers.yml
  name: FileListFromComputeNodeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeHeaders
  type: Class
  summary: <p>Defines headers for ListFromComputeNode operation. </p>
  syntax:
    content: public class FileListFromComputeNodeHeaders
- uid: com.microsoft.azure.batch.protocol._files_1ac1a1b5da8196fcd8daaa613a9fd1e499
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNode(final String poolId, final String nodeId)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1afc5fa93d2288b7947857c76256a9480d
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromComputeNodeAsync(final String poolId, final String nodeId, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1ad2b7abd68bcb094f4e11497d8bc6b515
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  fullName: ServiceResponseWithHeaders<PagedList<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PagedList< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNode(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure._paged_list151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options.yml
  name: FileListFromComputeNodeOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeOptions
  type: Class
  summary: <p>Additional parameters for the File_ListFromComputeNode operation. </p>
  syntax:
    content: public class FileListFromComputeNodeOptions
- uid: com.microsoft.azure.batch.protocol._files_1a5f85a3eeaa038806091c1eed46925dde
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromComputeNodeAsync(final String poolId, final String nodeId, final Boolean recursive, final FileListFromComputeNodeOptions fileListFromComputeNodeOptions, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The id of the pool that contains the compute node. </p>
    - id: nodeId
      type: 3d93591e
      description: <p>The id of the compute node whose files you want to list. </p>
    - id: recursive
      type: 2ec468d1
      description: <p>Whether to list children of a directory. </p>
    - id: fileListFromComputeNodeOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol.models._page_impl
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  name: PageImpl<T>
  fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
  type: Class
  summary: >-
    <p>An instance of this class defines a page of <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> resources and a link to get the next page of resources, if any.</p>

    <p></p>
  syntax:
    content: public class PageImpl<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>type of <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> resource </p>
- uid: com.microsoft.azure.batch.protocol._files_1a055bb057336c1b9c4c33456b599271df
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTaskNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1aa1d0fe98ca43f94de75d06607e9d7ac5
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromTaskNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_call
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1a1adbea84c2fd3b1f1c59c3fd1cb69220
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromTaskHeaders> com.microsoft.azure.batch.protocol.Files.listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromTaskHeaders > listFromTaskNext(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_task_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options.yml
  name: FileListFromTaskNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromTaskNextOptions
  type: Class
  summary: <p>Additional parameters for the ListFromTaskNext operation. </p>
  syntax:
    content: public class FileListFromTaskNextOptions
- uid: com.microsoft.azure.batch.protocol._files_1ac94c59b416dc2d8a88deef70b9fdb6d0
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists the files in a task's directory on its compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromTaskNextAsync(final String nextPageLink, final FileListFromTaskNextOptions fileListFromTaskNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromTaskNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_task_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_call
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1aaf4929ef6b5f434fc15255d441dbec35
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNext(final String nextPageLink)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol._files_1a7ea8eb9b9a0f3a62d78bde2d310a88dd
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromComputeNodeNextAsync(final String nextPageLink, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_call
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._files_1ad7028bfbaaedf590fe5d7228cde8f3cc
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  fullName: ServiceResponseWithHeaders<PageImpl<NodeFile>, FileListFromComputeNodeHeaders> com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceResponseWithHeaders< PageImpl< NodeFile >, FileListFromComputeNodeHeaders > listFromComputeNodeNext(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.rest._service_response_with_headers151dc42ccom.microsoft.azure.batch.protocol.models._page_impl151dc42ccom.microsoft.azure.batch.protocol.models._node_file0506df69com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_headers9ec3e006
      description: <p>the List&lt;NodeFile&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options.yml
  name: FileListFromComputeNodeNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.FileListFromComputeNodeNextOptions
  type: Class
  summary: <p>Additional parameters for the ListFromComputeNodeNext operation. </p>
  syntax:
    content: public class FileListFromComputeNodeNextOptions
- uid: com.microsoft.azure.batch.protocol._files_1a6215ac3cc533558a66129defd7408d60
  parent: com.microsoft.azure.batch.protocol._files
  href: com.microsoft.azure.batch.protocol._files.yml
  name: listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  fullName: ServiceCall com.microsoft.azure.batch.protocol.Files.listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
  type: Method
  summary: >-
    <p>Lists all of the files in task directories on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceCall listFromComputeNodeNextAsync(final String nextPageLink, final FileListFromComputeNodeNextOptions fileListFromComputeNodeNextOptions, final ServiceCall serviceCall, final ListOperationCallback< NodeFile > serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: fileListFromComputeNodeNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._file_list_from_compute_node_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCall
      type: 93de0ef9com.microsoft.rest._service_call
      description: <p>the ServiceCall object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 93de0ef9com.microsoft.azure._list_operation_callback151dc42ccom.microsoft.azure.batch.protocol.models._node_file9ec3e006
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: com.microsoft.rest._service_call
      description: <p>the <ref refid="" kindref="compound">ServiceCall</ref> object </p>
