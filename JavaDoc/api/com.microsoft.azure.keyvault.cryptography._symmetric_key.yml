items:
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key
  id: _symmetric_key
  parent: com.microsoft.azure.keyvault.cryptography
  children:
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.close()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.decryptAsync(final byte[],final byte[],final byte[],final byte[],final String)
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.encryptAsync(final byte[],final byte[],final byte[],final String)
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultEncryptionAlgorithm()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultKeyWrapAlgorithm()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultSignatureAlgorithm()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.getKid()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize128()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize192()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize256()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize384()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize512()
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.sequenceEqualConstantTime(byte[],byte[])
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.signAsync(final byte[],final String)
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,byte[])
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,byte[],Provider)
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.unwrapKeyAsync(final byte[],final String)
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.verifyAsync(final byte[],final byte[],final String)
  - com.microsoft.azure.keyvault.cryptography._symmetric_key.wrapKeyAsync(final byte[],final String)
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: SymmetricKey
  fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey
  type: Class
  source:
    remote: &o0
      path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 40
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public class SymmetricKey implements IKey
  inheritance:
  - java.lang.Object
  - Closeable
  - com.microsoft.azure.keyvault.core._i_key
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.close()
  id: close()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: close()
  fullName: void com.microsoft.azure.keyvault.cryptography.SymmetricKey.close()
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 325
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public void close()
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.decryptAsync(final byte[],final byte[],final byte[],final byte[],final String)
  id: decryptAsync(final byte[],final byte[],final byte[],final byte[],final String)
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)
  fullName: ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.SymmetricKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 136
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>Decrypts the specified cipher text. Note that not all algorithms require, or support, all parameters.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)
    parameters:
    - id: ciphertext
      type: 0368897f
      description: <p>The cipher text to decrypt </p>
    - id: iv
      type: 0368897f
      description: <p>The initialization vector (optional with some algorithms) </p>
    - id: authenticationData
      type: 0368897f
      description: <p>Additional authentication data (optional with some algorithms) </p>
    - id: authenticationTag
      type: 0368897f
      description: <p>The authentication tag from the encrypt operation (optional with some algorithms) </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The encryption algorithm to use, must be supplied </p>
    return:
      type: 5de8eb66
      description: <p>A ListenableFuture containing the plain text </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte[],final byte[],final byte[],final byte[],final String)
  exceptions:
  - type: 456eb9d1
    description: <p>the algorithm is not valid </p>
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.encryptAsync(final byte[],final byte[],final byte[],final String)
  id: encryptAsync(final byte[],final byte[],final byte[],final String)
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)
  fullName: ListenableFuture<Triple<byte[], byte[], String> > com.microsoft.azure.keyvault.cryptography.SymmetricKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 192
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>Encrypts the specified plain text. Note that not all algorithms require, or support, all parameters.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< Triple< byte[], byte[], String > > encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)
    parameters:
    - id: plaintext
      type: 0368897f
      description: <p>The plain text to encrypt </p>
    - id: iv
      type: 0368897f
      description: <p>The initialization vector (optional with some algorithms) </p>
    - id: authenticationData
      type: 0368897f
      description: <p>Additional authentication data (optional with some algorithms) </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The encryption algorithm to use, defaults to the keys DefaultEncryptionAlgorithm </p>
    return:
      type: 6a0f7728
      description: <p>A ListenableFuture containing the cipher text, the authentication tag and the algorithm that was used </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte[],final byte[],final byte[],final String)
  exceptions:
  - type: 456eb9d1
    description: <p>the algorithm is not valid </p>
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultEncryptionAlgorithm()
  id: getDefaultEncryptionAlgorithm()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: getDefaultEncryptionAlgorithm()
  fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultEncryptionAlgorithm()
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 76
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>The default encryption algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</p>

    <p></p>
  syntax:
    content: public String getDefaultEncryptionAlgorithm()
    return:
      type: "26831127"
      description: <p>The default encryption algorithm for this key. </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultKeyWrapAlgorithm()
  id: getDefaultKeyWrapAlgorithm()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: getDefaultKeyWrapAlgorithm()
  fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultKeyWrapAlgorithm()
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 99
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>The default key wrap algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</p>

    <p></p>
  syntax:
    content: public String getDefaultKeyWrapAlgorithm()
    return:
      type: "26831127"
      description: <p>The default key wrap algorithm for this key. </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getDefaultSignatureAlgorithm()
  id: getDefaultSignatureAlgorithm()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: getDefaultSignatureAlgorithm()
  fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getDefaultSignatureAlgorithm()
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 124
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>The default signature algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</p>

    <p></p>
  syntax:
    content: public String getDefaultSignatureAlgorithm()
    return:
      type: "26831127"
      description: <p>The default signature algorithm for this key. </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.getKid()
  id: getKid()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: getKid()
  fullName: String com.microsoft.azure.keyvault.cryptography.SymmetricKey.getKid()
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 130
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>The unique key identifier for this key.</p>

    <p></p>
  syntax:
    content: public String getKid()
    return:
      type: "26831127"
      description: <p>The key identifier </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.getKid()
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize128()
  id: KeySize128()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: KeySize128
  fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize128
  type: Field
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 42
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static final int KeySize128= 128 >> 3
    return:
      type: cd225469
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize192()
  id: KeySize192()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: KeySize192
  fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize192
  type: Field
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 43
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static final int KeySize192= 192 >> 3
    return:
      type: cd225469
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize256()
  id: KeySize256()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: KeySize256
  fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize256
  type: Field
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 44
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static final int KeySize256= 256 >> 3
    return:
      type: cd225469
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize384()
  id: KeySize384()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: KeySize384
  fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize384
  type: Field
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 45
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static final int KeySize384= 384 >> 3
    return:
      type: cd225469
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.KeySize512()
  id: KeySize512()
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: KeySize512
  fullName: final int com.microsoft.azure.keyvault.cryptography.SymmetricKey.KeySize512
  type: Field
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 46
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static final int KeySize512= 512 >> 3
    return:
      type: cd225469
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.sequenceEqualConstantTime(byte[],byte[])
  id: sequenceEqualConstantTime(byte[],byte[])
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: sequenceEqualConstantTime(byte[] self, byte[] other)
  fullName: static boolean com.microsoft.azure.keyvault.cryptography.SymmetricKey.sequenceEqualConstantTime(byte[] self, byte[] other)
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 328
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public static boolean sequenceEqualConstantTime(byte[] self, byte[] other)
    parameters:
    - id: self
      type: bc819c2f
    - id: other
      type: bc819c2f
    return:
      type: 4fc6e284
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.signAsync(final byte[],final String)
  id: signAsync(final byte[],final String)
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: signAsync(final byte[] digest, final String algorithm)
  fullName: ListenableFuture<Pair<byte[], String> > com.microsoft.azure.keyvault.cryptography.SymmetricKey.signAsync(final byte[] digest, final String algorithm)
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 315
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>Signs the specified digest using the specified algorithm, or the keys DefaultSignatureAlgorithm if no algorithm is specified.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< Pair< byte[], String > > signAsync(final byte[] digest, final String algorithm)
    parameters:
    - id: digest
      type: 0368897f
      description: <p>The digest to sign </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The signature algorithm to use </p>
    return:
      type: 7a2f94e1
      description: <p>A ListenableFuture containing the signature and the algorithm used. </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.signAsync(final byte[],final String)
  exceptions:
  - type: 456eb9d1
    description: <p>the algorithm is not valid </p>
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,byte[])
  id: SymmetricKey(String,byte[])
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: SymmetricKey(String kid, byte[] keyBytes)
  fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey(String kid, byte[] keyBytes)
  type: Constructor
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 52
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public SymmetricKey(String kid, byte[] keyBytes)
    parameters:
    - id: kid
      type: "26831127"
    - id: keyBytes
      type: bc819c2f
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.SymmetricKey(String,byte[],Provider)
  id: SymmetricKey(String,byte[],Provider)
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: SymmetricKey(String kid, byte[] keyBytes, Provider provider)
  fullName: com.microsoft.azure.keyvault.cryptography.SymmetricKey.SymmetricKey(String kid, byte[] keyBytes, Provider provider)
  type: Constructor
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 56
  package: com.microsoft.azure.keyvault.cryptography
  syntax:
    content: public SymmetricKey(String kid, byte[] keyBytes, Provider provider)
    parameters:
    - id: kid
      type: "26831127"
    - id: keyBytes
      type: bc819c2f
    - id: provider
      type: 8f3c7027
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.unwrapKeyAsync(final byte[],final String)
  id: unwrapKeyAsync(final byte[],final String)
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)
  fullName: ListenableFuture<byte[]> com.microsoft.azure.keyvault.cryptography.SymmetricKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 277
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>Unwraps (decrypts) the specified encryped key material.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)
    parameters:
    - id: encryptedKey
      type: 0368897f
      description: <p>The encrypted key to decrypt </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The algorithm to use, must be supplied </p>
    return:
      type: 5de8eb66
      description: <p>A ListenableFuture containing the unwrapped key </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte[],final String)
  exceptions:
  - type: 456eb9d1
    description: <p>the algorithm is not valid </p>
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.verifyAsync(final byte[],final byte[],final String)
  id: verifyAsync(final byte[],final byte[],final String)
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)
  fullName: ListenableFuture<Boolean> com.microsoft.azure.keyvault.cryptography.SymmetricKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 320
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>Verifies the supplied signature value using the supplied digest and algorithm.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< Boolean > verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)
    parameters:
    - id: digest
      type: 0368897f
      description: <p>The digest input </p>
    - id: signature
      type: 0368897f
      description: <p>The signature to verify </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The algorithm to use, must be provided </p>
    return:
      type: b9551d34
      description: <p>A ListenableFuture containing a boolean result </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte[],final byte[],final String)
  exceptions:
  - type: 456eb9d1
    description: <p>the algorithm is not valid </p>
- uid: com.microsoft.azure.keyvault.cryptography._symmetric_key.wrapKeyAsync(final byte[],final String)
  id: wrapKeyAsync(final byte[],final String)
  parent: com.microsoft.azure.keyvault.cryptography._symmetric_key
  href: com.microsoft.azure.keyvault.cryptography._symmetric_key.yml
  langs:
  - java
  name: wrapKeyAsync(final byte[] key, final String algorithm)
  fullName: ListenableFuture<Pair<byte[], String> > com.microsoft.azure.keyvault.cryptography.SymmetricKey.wrapKeyAsync(final byte[] key, final String algorithm)
  type: Method
  source:
    remote: *o0
    path: azure-keyvault-cryptography/src/main/java/com/microsoft/azure/keyvault/cryptography/SymmetricKey.java
    startLine: 241
  package: com.microsoft.azure.keyvault.cryptography
  summary: >-
    <p>Wraps (encrypts) the specified symmetric key material using the specified algorithm, or the keys DefaultKeyWrapAlgorithm if none is specified.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< Pair< byte[], String > > wrapKeyAsync(final byte[] key, final String algorithm)
    parameters:
    - id: key
      type: 0368897f
      description: <p>The symmetric key to wrap </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The wrapping algorithm to use, defaults to the keys DefaultKeyWrapAlgorithm </p>
    return:
      type: 7a2f94e1
      description: <p>ListenableFuture containing the encrypted key and the algorithm that was used </p>
  overridden: com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte[],final String)
  exceptions:
  - type: 456eb9d1
    description: <p>the algorithm is not valid </p>
references:
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: bc819c2f
  spec.java:
  - name: byte[]
    fullName: byte[]
- uid: 8f3c7027
  spec.java:
  - name: Provider
    fullName: Provider
- uid: 456eb9d1
  spec.java:
  - name: NoSuchAlgorithmException
    fullName: NoSuchAlgorithmException
- uid: 0368897f
  spec.java:
  - name: final byte[]
    fullName: final byte[]
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 5de8eb66
  spec.java:
  - name: ListenableFuture< byte[]>
    fullName: ListenableFuture< byte[]>
- uid: 6a0f7728
  spec.java:
  - name: ListenableFuture< Triple< byte[], byte[], String > >
    fullName: ListenableFuture< Triple< byte[], byte[], String > >
- uid: 7a2f94e1
  spec.java:
  - name: ListenableFuture< Pair< byte[], String > >
    fullName: ListenableFuture< Pair< byte[], String > >
- uid: b9551d34
  spec.java:
  - name: ListenableFuture< Boolean >
    fullName: ListenableFuture< Boolean >
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.keyvault.core._i_key
  parent: com.microsoft.azure.keyvault.core
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: IKey
  fullName: com.microsoft.azure.keyvault.core.IKey
  type: Interface
  summary: <p>Interface for representing cryptographic keys with the Microsoft <xref href="com.microsoft.azure._azure" data-throw-if-not-resolved="false"></xref> Key Vault libraries. </p>
  syntax:
    content: public interface IKey
- uid: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: getDefaultEncryptionAlgorithm()
  fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultEncryptionAlgorithm()
  type: Method
  summary: >-
    <p>The default encryption algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</p>

    <p></p>
  syntax:
    content: public String getDefaultEncryptionAlgorithm()
    return:
      type: "26831127"
      description: <p>The default encryption algorithm for this key. </p>
- uid: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: getDefaultKeyWrapAlgorithm()
  fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultKeyWrapAlgorithm()
  type: Method
  summary: >-
    <p>The default key wrap algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</p>

    <p></p>
  syntax:
    content: public String getDefaultKeyWrapAlgorithm()
    return:
      type: "26831127"
      description: <p>The default key wrap algorithm for this key. </p>
- uid: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: getDefaultSignatureAlgorithm()
  fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultSignatureAlgorithm()
  type: Method
  summary: >-
    <p>The default signature algorithm for this key, using the representations from Json Web Key Algorithms, RFC7513.</p>

    <p></p>
  syntax:
    content: public String getDefaultSignatureAlgorithm()
    return:
      type: "26831127"
      description: <p>The default signature algorithm for this key. </p>
- uid: com.microsoft.azure.keyvault.core._i_key.getKid()
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: getKid()
  fullName: String com.microsoft.azure.keyvault.core.IKey.getKid()
  type: Method
  summary: >-
    <p>The unique key identifier for this key.</p>

    <p></p>
  syntax:
    content: public String getKid()
    return:
      type: "26831127"
      description: <p>The key identifier </p>
- uid: com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte[],final byte[],final byte[],final byte[],final String)
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)
  fullName: ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)
  type: Method
  summary: >-
    <p>Decrypts the specified cipher text. Note that not all algorithms require, or support, all parameters.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)
    parameters:
    - id: ciphertext
      type: 0368897f
      description: <p>The cipher text to decrypt </p>
    - id: iv
      type: 0368897f
      description: <p>The initialization vector (optional with some algorithms) </p>
    - id: authenticationData
      type: 0368897f
      description: <p>Additional authentication data (optional with some algorithms) </p>
    - id: authenticationTag
      type: 0368897f
      description: <p>The authentication tag from the encrypt operation (optional with some algorithms) </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The encryption algorithm to use, must be supplied </p>
    return:
      type: 5de8eb66
      description: <p>A ListenableFuture containing the plain text </p>
- uid: com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte[],final byte[],final byte[],final String)
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)
  fullName: ListenableFuture<Triple<byte[], byte[], String> > com.microsoft.azure.keyvault.core.IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)
  type: Method
  summary: >-
    <p>Encrypts the specified plain text. Note that not all algorithms require, or support, all parameters.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< Triple< byte[], byte[], String > > encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)
    parameters:
    - id: plaintext
      type: 0368897f
      description: <p>The plain text to encrypt </p>
    - id: iv
      type: 0368897f
      description: <p>The initialization vector (optional with some algorithms) </p>
    - id: authenticationData
      type: 0368897f
      description: <p>Additional authentication data (optional with some algorithms) </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The encryption algorithm to use, defaults to the keys DefaultEncryptionAlgorithm </p>
    return:
      type: 6a0f7728
      description: <p>A ListenableFuture containing the cipher text, the authentication tag and the algorithm that was used </p>
- uid: com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte[],final String)
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: wrapKeyAsync(final byte[] key, final String algorithm)
  fullName: ListenableFuture<Pair<byte[], String> > com.microsoft.azure.keyvault.core.IKey.wrapKeyAsync(final byte[] key, final String algorithm)
  type: Method
  summary: >-
    <p>Wraps (encrypts) the specified symmetric key material using the specified algorithm, or the keys DefaultKeyWrapAlgorithm if none is specified.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< Pair< byte[], String > > wrapKeyAsync(final byte[] key, final String algorithm)
    parameters:
    - id: key
      type: 0368897f
      description: <p>The symmetric key to wrap </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The wrapping algorithm to use, defaults to the keys DefaultKeyWrapAlgorithm </p>
    return:
      type: 7a2f94e1
      description: <p>ListenableFuture containing the encrypted key and the algorithm that was used </p>
- uid: com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte[],final String)
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)
  fullName: ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)
  type: Method
  summary: >-
    <p>Unwraps (decrypts) the specified encryped key material.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)
    parameters:
    - id: encryptedKey
      type: 0368897f
      description: <p>The encrypted key to decrypt </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The algorithm to use, must be supplied </p>
    return:
      type: 5de8eb66
      description: <p>A ListenableFuture containing the unwrapped key </p>
- uid: com.microsoft.azure.keyvault.core._i_key.signAsync(final byte[],final String)
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: signAsync(final byte[] digest, final String algorithm)
  fullName: ListenableFuture<Pair<byte[], String> > com.microsoft.azure.keyvault.core.IKey.signAsync(final byte[] digest, final String algorithm)
  type: Method
  summary: >-
    <p>Signs the specified digest using the specified algorithm, or the keys DefaultSignatureAlgorithm if no algorithm is specified.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< Pair< byte[], String > > signAsync(final byte[] digest, final String algorithm)
    parameters:
    - id: digest
      type: 0368897f
      description: <p>The digest to sign </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The signature algorithm to use </p>
    return:
      type: 7a2f94e1
      description: <p>A ListenableFuture containing the signature and the algorithm used. </p>
- uid: com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte[],final byte[],final String)
  parent: com.microsoft.azure.keyvault.core._i_key
  href: com.microsoft.azure.keyvault.core._i_key.yml
  name: verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)
  fullName: ListenableFuture<Boolean> com.microsoft.azure.keyvault.core.IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)
  type: Method
  summary: >-
    <p>Verifies the supplied signature value using the supplied digest and algorithm.</p>

    <p></p>
  syntax:
    content: public ListenableFuture< Boolean > verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)
    parameters:
    - id: digest
      type: 0368897f
      description: <p>The digest input </p>
    - id: signature
      type: 0368897f
      description: <p>The signature to verify </p>
    - id: algorithm
      type: 3d93591e
      description: <p>The algorithm to use, must be provided </p>
    return:
      type: b9551d34
      description: <p>A ListenableFuture containing a boolean result </p>
