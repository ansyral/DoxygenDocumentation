items:
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  id: _single_segment_uploader_tests
  parent: com.microsoft.azure.management.datalake.store.uploader
  children:
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.Setup()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_RetryBlock()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_TargetStreamExists()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadFileRange()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadMultiBlockStream()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadNonBinaryFile()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadNonBinaryFileTooLargeRecord()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadSingleBlockStream()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_VerifyUploadStreamFails()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.Teardown()
  - com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.TestRetryBlock(int)
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploaderTests
  fullName: com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests
  type: Class
  source:
    remote: &o0
      path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java.git
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 15
  package: com.microsoft.azure.management.datalake.store.uploader
  syntax:
    content: public class SingleSegmentUploaderTests
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.Setup()
  id: Setup()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: Setup()
  fullName: static void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.Setup()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 31
  package: com.microsoft.azure.management.datalake.store.uploader
  syntax:
    content: public static void Setup()
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_RetryBlock()
  id: SingleSegmentUploader_RetryBlock()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploader_RetryBlock()
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.SingleSegmentUploader_RetryBlock()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 239
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Tests various scenarios where the upload will fail repeatedly; verifies that the uploader will retry a certain number of times before finally giving up</p>

    <p></p>
  syntax:
    content: public void SingleSegmentUploader_RetryBlock()
  exceptions:
  - type: 8a99d4b0
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_TargetStreamExists()
  id: SingleSegmentUploader_TargetStreamExists()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploader_TargetStreamExists()
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.SingleSegmentUploader_TargetStreamExists()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 133
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Tests the case when an existing stream with the same name already exists on the server. That stream needs to be fully replaced with the new data.</p>

    <p></p>
  syntax:
    content: public void SingleSegmentUploader_TargetStreamExists()
  exceptions:
  - type: 8a99d4b0
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadFileRange()
  id: SingleSegmentUploader_UploadFileRange()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploader_UploadFileRange()
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.SingleSegmentUploader_UploadFileRange()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 109
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Tests the case when only a part of the file is to be uploaded (i.e., all other cases feed in the entire file)</p>

    <p></p>
  syntax:
    content: public void SingleSegmentUploader_UploadFileRange()
  exceptions:
  - type: 8a99d4b0
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadMultiBlockStream()
  id: SingleSegmentUploader_UploadMultiBlockStream()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploader_UploadMultiBlockStream()
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.SingleSegmentUploader_UploadMultiBlockStream()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 90
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Tests an uploading consisting of a larger file, which will need to be uploaded in sequential buffers.</p>

    <p></p>
  syntax:
    content: public void SingleSegmentUploader_UploadMultiBlockStream()
  exceptions:
  - type: 8a99d4b0
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadNonBinaryFile()
  id: SingleSegmentUploader_UploadNonBinaryFile()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploader_UploadNonBinaryFile()
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.SingleSegmentUploader_UploadNonBinaryFile()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 182
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Tests the case when the <xref href="com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader" data-throw-if-not-resolved="false"></xref> should upload a non-binary file (i.e., split on record boundaries).</p>

    <p></p>
  syntax:
    content: public void SingleSegmentUploader_UploadNonBinaryFile()
  exceptions:
  - type: 8a99d4b0
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadNonBinaryFileTooLargeRecord()
  id: SingleSegmentUploader_UploadNonBinaryFileTooLargeRecord()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploader_UploadNonBinaryFileTooLargeRecord()
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.SingleSegmentUploader_UploadNonBinaryFileTooLargeRecord()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 215
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Tests the case when the <xref href="com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader" data-throw-if-not-resolved="false"></xref> tries upload a non-binary file (i.e., split on record boundaries), but at least one record is larger than the max allowed size.</p>

    <p></p>
  syntax:
    content: public void SingleSegmentUploader_UploadNonBinaryFileTooLargeRecord()
  exceptions:
  - type: 8a99d4b0
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_UploadSingleBlockStream()
  id: SingleSegmentUploader_UploadSingleBlockStream()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploader_UploadSingleBlockStream()
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.SingleSegmentUploader_UploadSingleBlockStream()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 72
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Tests a simple upload consisting of a single block (the file is small enough to be uploaded without splitting into smaller buffers)</p>

    <p></p>
  syntax:
    content: public void SingleSegmentUploader_UploadSingleBlockStream()
  exceptions:
  - type: 8a99d4b0
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.SingleSegmentUploader_VerifyUploadStreamFails()
  id: SingleSegmentUploader_VerifyUploadStreamFails()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: SingleSegmentUploader_VerifyUploadStreamFails()
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.SingleSegmentUploader_VerifyUploadStreamFails()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 157
  package: com.microsoft.azure.management.datalake.store.uploader
  summary: >-
    <p>Tests the case when the upload did "succeed", but the server reports back a different stream length than expected.</p>

    <p></p>
  syntax:
    content: public void SingleSegmentUploader_VerifyUploadStreamFails()
  exceptions:
  - type: 8a99d4b0
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.Teardown()
  id: Teardown()
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: Teardown()
  fullName: static void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.Teardown()
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 39
  package: com.microsoft.azure.management.datalake.store.uploader
  syntax:
    content: public static void Teardown()
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.TestRetryBlock(int)
  id: TestRetryBlock(int)
  parent: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader_tests.yml
  langs:
  - java
  name: TestRetryBlock(int failCount)
  fullName: void com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploaderTests.TestRetryBlock(int failCount)
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-datalake-store-uploader/src/test/java/com/microsoft/azure/management/datalake/store/uploader/SingleSegmentUploaderTests.java
    startLine: 248
  package: com.microsoft.azure.management.datalake.store.uploader
  syntax:
    content: public void TestRetryBlock(int failCount)
    parameters:
    - id: failCount
      type: f75371fa
references:
- uid: 8a99d4b0
  spec.java:
  - name: Exception
    fullName: Exception
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._single_segment_uploader.yml
  name: SingleSegmentUploader
  fullName: com.microsoft.azure.management.datalake.store.uploader.SingleSegmentUploader
  type: Class
  summary: <p>Represents an uploader for a single segment of a larger file. </p>
  syntax:
    content: public class SingleSegmentUploader
- uid: com.microsoft.azure.management.datalake.store.uploader._upload_metadata
  parent: com.microsoft.azure.management.datalake.store.uploader
  href: com.microsoft.azure.management.datalake.store.uploader._upload_metadata.yml
  name: UploadMetadata
  fullName: com.microsoft.azure.management.datalake.store.uploader.UploadMetadata
  type: Class
  summary: <p>Represents general metadata pertaining to an upload. </p>
  syntax:
    content: public class UploadMetadata
